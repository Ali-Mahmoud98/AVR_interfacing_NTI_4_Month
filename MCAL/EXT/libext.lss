In archive libext.a:

ext.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .debug_abbrev 000000b2  00000000  00000000  00000034  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000016b  00000000  00000000  000000e6  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_line   000001d7  00000000  00000000  00000251  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .text.EXTINT_voidEnable 00000110  00000000  00000000  00000428  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.EXTINT_voidDisable 00000030  00000000  00000000  00000538  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.EXTINT_voidSetCallBack 00000012  00000000  00000000  00000568  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.__vector_1 00000058  00000000  00000000  0000057a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.__vector_2 00000058  00000000  00000000  000005d2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.__vector_3 00000058  00000000  00000000  0000062a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .bss.EXTINT_ApfuncEXTINT 00000006  00000000  00000000  00000682  2**0
                  ALLOC
 13 .debug_frame  00000070  00000000  00000000  00000684  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
 14 .debug_loc    000000f9  00000000  00000000  000006f4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 15 .debug_pubnames 00000087  00000000  00000000  000007ed  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 16 .debug_aranges 00000048  00000000  00000000  00000874  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 17 .debug_ranges 00000040  00000000  00000000  000008bc  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 18 .debug_str    00000175  00000000  00000000  000008fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text.EXTINT_voidEnable:

00000000 <EXTINT_voidEnable>:
static void (*EXTINT_ApfuncEXTINT[3])(void);
//Copy_u8ExtIntNum select INT0 INT1 INT2
//Copy_u8EdgeIntSource select sense : Rising,Falling, LOW LEVEL, ANYLOGICAL CHANGE
void EXTINT_voidEnable(u8 Copy_u8ExtIntNum , u8 Copy_u8EdgeIntSource)
{
	switch(Copy_u8ExtIntNum)
   0:	82 30       	cpi	r24, 0x02	; 2
   2:	01 f0       	breq	.+0      	; 0x4 <EXTINT_voidEnable+0x4>
   4:	83 30       	cpi	r24, 0x03	; 3
   6:	01 f4       	brne	.+0      	; 0x8 <EXTINT_voidEnable+0x8>
   8:	00 c0       	rjmp	.+0      	; 0xa <EXTINT_voidEnable+0xa>
   a:	81 30       	cpi	r24, 0x01	; 1
   c:	01 f0       	breq	.+0      	; 0xe <EXTINT_voidEnable+0xe>
   e:	00 c0       	rjmp	.+0      	; 0x10 <EXTINT_voidEnable+0x10>
	{
	case EXTINT_INT0:
			switch(Copy_u8EdgeIntSource)
  10:	62 30       	cpi	r22, 0x02	; 2
  12:	01 f0       	breq	.+0      	; 0x14 <EXTINT_voidEnable+0x14>
  14:	63 30       	cpi	r22, 0x03	; 3
  16:	00 f4       	brcc	.+0      	; 0x18 <EXTINT_voidEnable+0x18>
  18:	61 30       	cpi	r22, 0x01	; 1
  1a:	01 f4       	brne	.+0      	; 0x1c <EXTINT_voidEnable+0x1c>
  1c:	00 c0       	rjmp	.+0      	; 0x1e <EXTINT_voidEnable+0x1e>
  1e:	63 30       	cpi	r22, 0x03	; 3
  20:	01 f0       	breq	.+0      	; 0x22 <EXTINT_voidEnable+0x22>
  22:	64 30       	cpi	r22, 0x04	; 4
  24:	01 f4       	brne	.+0      	; 0x26 <EXTINT_voidEnable+0x26>
  26:	00 c0       	rjmp	.+0      	; 0x28 <EXTINT_voidEnable+0x28>
			{
				case EXTINT_FALLING_EDGE: CLR_BIT( MCUCR , MCUCR_ISC00 ); SET_BIT( MCUCR , MCUCR_ISC01 ); break;
  28:	e5 e5       	ldi	r30, 0x55	; 85
  2a:	f0 e0       	ldi	r31, 0x00	; 0
  2c:	80 81       	ld	r24, Z
  2e:	8e 7f       	andi	r24, 0xFE	; 254
  30:	80 83       	st	Z, r24
  32:	80 81       	ld	r24, Z
  34:	82 60       	ori	r24, 0x02	; 2
  36:	80 83       	st	Z, r24
  38:	00 c0       	rjmp	.+0      	; 0x3a <EXTINT_voidEnable+0x3a>
				case EXTINT_LOW_LEVEL: CLR_BIT( MCUCR , MCUCR_ISC00 ); CLR_BIT( MCUCR , MCUCR_ISC01 ); break;
  3a:	e5 e5       	ldi	r30, 0x55	; 85
  3c:	f0 e0       	ldi	r31, 0x00	; 0
  3e:	80 81       	ld	r24, Z
  40:	8e 7f       	andi	r24, 0xFE	; 254
  42:	80 83       	st	Z, r24
  44:	80 81       	ld	r24, Z
  46:	8d 7f       	andi	r24, 0xFD	; 253
  48:	80 83       	st	Z, r24
  4a:	00 c0       	rjmp	.+0      	; 0x4c <EXTINT_voidEnable+0x4c>
				case EXTINT_ANY_LOGICAL_CHANGE: SET_BIT( MCUCR , MCUCR_ISC00 ); CLR_BIT( MCUCR , MCUCR_ISC01 ); break;
  4c:	e5 e5       	ldi	r30, 0x55	; 85
  4e:	f0 e0       	ldi	r31, 0x00	; 0
  50:	80 81       	ld	r24, Z
  52:	81 60       	ori	r24, 0x01	; 1
  54:	80 83       	st	Z, r24
  56:	80 81       	ld	r24, Z
  58:	8d 7f       	andi	r24, 0xFD	; 253
  5a:	80 83       	st	Z, r24
  5c:	00 c0       	rjmp	.+0      	; 0x5e <EXTINT_voidEnable+0x5e>
				case EXTINT_RAISING_EDGE: SET_BIT( MCUCR , MCUCR_ISC00 ); SET_BIT( MCUCR , MCUCR_ISC01 ); break;
  5e:	e5 e5       	ldi	r30, 0x55	; 85
  60:	f0 e0       	ldi	r31, 0x00	; 0
  62:	80 81       	ld	r24, Z
  64:	81 60       	ori	r24, 0x01	; 1
  66:	80 83       	st	Z, r24
  68:	80 81       	ld	r24, Z
  6a:	82 60       	ori	r24, 0x02	; 2
  6c:	80 83       	st	Z, r24
			}
			SET_BIT(GICR,GICR_INT0);
  6e:	eb e5       	ldi	r30, 0x5B	; 91
  70:	f0 e0       	ldi	r31, 0x00	; 0
  72:	80 81       	ld	r24, Z
  74:	80 64       	ori	r24, 0x40	; 64
  76:	80 83       	st	Z, r24
  78:	08 95       	ret
	break;
	case EXTINT_INT1:
			switch(Copy_u8EdgeIntSource)
  7a:	62 30       	cpi	r22, 0x02	; 2
  7c:	01 f0       	breq	.+0      	; 0x7e <EXTINT_voidEnable+0x7e>
  7e:	63 30       	cpi	r22, 0x03	; 3
  80:	00 f4       	brcc	.+0      	; 0x82 <EXTINT_voidEnable+0x82>
  82:	61 30       	cpi	r22, 0x01	; 1
  84:	01 f4       	brne	.+0      	; 0x86 <EXTINT_voidEnable+0x86>
  86:	00 c0       	rjmp	.+0      	; 0x88 <EXTINT_voidEnable+0x88>
  88:	63 30       	cpi	r22, 0x03	; 3
  8a:	01 f0       	breq	.+0      	; 0x8c <EXTINT_voidEnable+0x8c>
  8c:	64 30       	cpi	r22, 0x04	; 4
  8e:	01 f4       	brne	.+0      	; 0x90 <EXTINT_voidEnable+0x90>
  90:	00 c0       	rjmp	.+0      	; 0x92 <EXTINT_voidEnable+0x92>
			{
				case EXTINT_FALLING_EDGE: CLR_BIT( MCUCR , MCUCR_ISC10 ); SET_BIT( MCUCR , MCUCR_ISC11 ); break;
  92:	e5 e5       	ldi	r30, 0x55	; 85
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	8b 7f       	andi	r24, 0xFB	; 251
  9a:	80 83       	st	Z, r24
  9c:	80 81       	ld	r24, Z
  9e:	88 60       	ori	r24, 0x08	; 8
  a0:	80 83       	st	Z, r24
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <EXTINT_voidEnable+0xa4>
				case EXTINT_LOW_LEVEL: CLR_BIT( MCUCR , MCUCR_ISC10 ); CLR_BIT( MCUCR , MCUCR_ISC11 ); break;
  a4:	e5 e5       	ldi	r30, 0x55	; 85
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	8b 7f       	andi	r24, 0xFB	; 251
  ac:	80 83       	st	Z, r24
  ae:	80 81       	ld	r24, Z
  b0:	87 7f       	andi	r24, 0xF7	; 247
  b2:	80 83       	st	Z, r24
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <EXTINT_voidEnable+0xb6>
				case EXTINT_ANY_LOGICAL_CHANGE: SET_BIT( MCUCR , MCUCR_ISC10 ); CLR_BIT( MCUCR , MCUCR_ISC11 ); break;
  b6:	e5 e5       	ldi	r30, 0x55	; 85
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	84 60       	ori	r24, 0x04	; 4
  be:	80 83       	st	Z, r24
  c0:	80 81       	ld	r24, Z
  c2:	87 7f       	andi	r24, 0xF7	; 247
  c4:	80 83       	st	Z, r24
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <EXTINT_voidEnable+0xc8>
				case EXTINT_RAISING_EDGE: SET_BIT( MCUCR , MCUCR_ISC10 ); SET_BIT( MCUCR , MCUCR_ISC11 ); break;
  c8:	e5 e5       	ldi	r30, 0x55	; 85
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	84 60       	ori	r24, 0x04	; 4
  d0:	80 83       	st	Z, r24
  d2:	80 81       	ld	r24, Z
  d4:	88 60       	ori	r24, 0x08	; 8
  d6:	80 83       	st	Z, r24
			}
			/* Enable Ext Int 1 */
			SET_BIT(GICR,GICR_INT1);
  d8:	eb e5       	ldi	r30, 0x5B	; 91
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	80 68       	ori	r24, 0x80	; 128
  e0:	80 83       	st	Z, r24
  e2:	08 95       	ret
	break;
	case EXTINT_INT2:
				switch(Copy_u8EdgeIntSource)
  e4:	61 30       	cpi	r22, 0x01	; 1
  e6:	01 f0       	breq	.+0      	; 0xe8 <EXTINT_voidEnable+0xe8>
  e8:	62 30       	cpi	r22, 0x02	; 2
  ea:	01 f4       	brne	.+0      	; 0xec <EXTINT_voidEnable+0xec>
  ec:	00 c0       	rjmp	.+0      	; 0xee <EXTINT_voidEnable+0xee>
				{
					case EXTINT_FALLING_EDGE: CLR_BIT( MCUCSR , MCUCSR_ISC2 ); break;
  ee:	e4 e5       	ldi	r30, 0x54	; 84
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	8f 7b       	andi	r24, 0xBF	; 191
  f6:	80 83       	st	Z, r24
  f8:	00 c0       	rjmp	.+0      	; 0xfa <EXTINT_voidEnable+0xfa>
					case EXTINT_RAISING_EDGE: SET_BIT( MCUCSR , MCUCSR_ISC2 ); break;
  fa:	e4 e5       	ldi	r30, 0x54	; 84
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	80 64       	ori	r24, 0x40	; 64
 102:	80 83       	st	Z, r24
				}
				/* Enable Ext Int 2 */
				SET_BIT(GICR,GICR_INT2);
 104:	eb e5       	ldi	r30, 0x5B	; 91
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	80 62       	ori	r24, 0x20	; 32
 10c:	80 83       	st	Z, r24
 10e:	08 95       	ret

Disassembly of section .text.EXTINT_voidDisable:

00000000 <EXTINT_voidDisable>:
	}
}

void EXTINT_voidDisable(u8 Copy_u8ExtIntNum)
{
	switch (Copy_u8ExtIntNum)
   0:	82 30       	cpi	r24, 0x02	; 2
   2:	01 f0       	breq	.+0      	; 0x4 <EXTINT_voidDisable+0x4>
   4:	83 30       	cpi	r24, 0x03	; 3
   6:	01 f0       	breq	.+0      	; 0x8 <EXTINT_voidDisable+0x8>
   8:	81 30       	cpi	r24, 0x01	; 1
   a:	01 f4       	brne	.+0      	; 0xc <EXTINT_voidDisable+0xc>
	{
		case EXTINT_INT0: CLR_BIT(GICR,GICR_INT0); break;
   c:	eb e5       	ldi	r30, 0x5B	; 91
   e:	f0 e0       	ldi	r31, 0x00	; 0
  10:	80 81       	ld	r24, Z
  12:	8f 7b       	andi	r24, 0xBF	; 191
  14:	80 83       	st	Z, r24
  16:	08 95       	ret
		case EXTINT_INT1: CLR_BIT(GICR,GICR_INT1); break;
  18:	eb e5       	ldi	r30, 0x5B	; 91
  1a:	f0 e0       	ldi	r31, 0x00	; 0
  1c:	80 81       	ld	r24, Z
  1e:	8f 77       	andi	r24, 0x7F	; 127
  20:	80 83       	st	Z, r24
  22:	08 95       	ret
		case EXTINT_INT2: CLR_BIT(GICR,GICR_INT2); break;
  24:	eb e5       	ldi	r30, 0x5B	; 91
  26:	f0 e0       	ldi	r31, 0x00	; 0
  28:	80 81       	ld	r24, Z
  2a:	8f 7d       	andi	r24, 0xDF	; 223
  2c:	80 83       	st	Z, r24
  2e:	08 95       	ret

Disassembly of section .text.EXTINT_voidSetCallBack:

00000000 <EXTINT_voidSetCallBack>:
}
//Copy_u8ExtIntIndex to select INT0 INT1 INT2
//Copy_pfun : the address of the function which will be existed inside ISR
void EXTINT_voidSetCallBack(void(*Copy_pfun)(void),u8 Copy_u8ExtIntIndex)
{
	EXTINT_ApfuncEXTINT[Copy_u8ExtIntIndex] = Copy_pfun;
   0:	e6 2f       	mov	r30, r22
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	ee 0f       	add	r30, r30
   6:	ff 1f       	adc	r31, r31
   8:	e0 50       	subi	r30, 0x00	; 0
   a:	f0 40       	sbci	r31, 0x00	; 0
   c:	91 83       	std	Z+1, r25	; 0x01
   e:	80 83       	st	Z, r24
}
  10:	08 95       	ret

Disassembly of section .text.__vector_1:

00000000 <__vector_1>:
/* ISR Function for External Interrupt 0 */
// __vector_1 for linker
// __attribute__((signal)) to prevent optimization
void __vector_1(void)  __attribute__((signal));
void __vector_1(void)
{
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	2f 93       	push	r18
   c:	3f 93       	push	r19
   e:	4f 93       	push	r20
  10:	5f 93       	push	r21
  12:	6f 93       	push	r22
  14:	7f 93       	push	r23
  16:	8f 93       	push	r24
  18:	9f 93       	push	r25
  1a:	af 93       	push	r26
  1c:	bf 93       	push	r27
  1e:	ef 93       	push	r30
  20:	ff 93       	push	r31
	EXTINT_ApfuncEXTINT[EXTINT_INT0]();
  22:	e0 91 00 00 	lds	r30, 0x0000
  26:	f0 91 00 00 	lds	r31, 0x0000
  2a:	09 95       	icall
	SET_BIT(GICR, GICR_INT0);
  2c:	eb e5       	ldi	r30, 0x5B	; 91
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	80 81       	ld	r24, Z
  32:	80 64       	ori	r24, 0x40	; 64
  34:	80 83       	st	Z, r24
}
  36:	ff 91       	pop	r31
  38:	ef 91       	pop	r30
  3a:	bf 91       	pop	r27
  3c:	af 91       	pop	r26
  3e:	9f 91       	pop	r25
  40:	8f 91       	pop	r24
  42:	7f 91       	pop	r23
  44:	6f 91       	pop	r22
  46:	5f 91       	pop	r21
  48:	4f 91       	pop	r20
  4a:	3f 91       	pop	r19
  4c:	2f 91       	pop	r18
  4e:	0f 90       	pop	r0
  50:	0f be       	out	0x3f, r0	; 63
  52:	0f 90       	pop	r0
  54:	1f 90       	pop	r1
  56:	18 95       	reti

Disassembly of section .text.__vector_2:

00000000 <__vector_2>:
/* ISR Function for External Interrupt 1 */
void __vector_2(void)  __attribute__((signal));
void __vector_2(void)
{
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	2f 93       	push	r18
   c:	3f 93       	push	r19
   e:	4f 93       	push	r20
  10:	5f 93       	push	r21
  12:	6f 93       	push	r22
  14:	7f 93       	push	r23
  16:	8f 93       	push	r24
  18:	9f 93       	push	r25
  1a:	af 93       	push	r26
  1c:	bf 93       	push	r27
  1e:	ef 93       	push	r30
  20:	ff 93       	push	r31
	EXTINT_ApfuncEXTINT[EXTINT_INT1]();
  22:	e0 91 00 00 	lds	r30, 0x0000
  26:	f0 91 00 00 	lds	r31, 0x0000
  2a:	09 95       	icall
	SET_BIT(GICR, GICR_INT1);
  2c:	eb e5       	ldi	r30, 0x5B	; 91
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	80 81       	ld	r24, Z
  32:	80 68       	ori	r24, 0x80	; 128
  34:	80 83       	st	Z, r24

}
  36:	ff 91       	pop	r31
  38:	ef 91       	pop	r30
  3a:	bf 91       	pop	r27
  3c:	af 91       	pop	r26
  3e:	9f 91       	pop	r25
  40:	8f 91       	pop	r24
  42:	7f 91       	pop	r23
  44:	6f 91       	pop	r22
  46:	5f 91       	pop	r21
  48:	4f 91       	pop	r20
  4a:	3f 91       	pop	r19
  4c:	2f 91       	pop	r18
  4e:	0f 90       	pop	r0
  50:	0f be       	out	0x3f, r0	; 63
  52:	0f 90       	pop	r0
  54:	1f 90       	pop	r1
  56:	18 95       	reti

Disassembly of section .text.__vector_3:

00000000 <__vector_3>:
/* ISR Function for External Interrupt 3 */
void __vector_3(void)  __attribute__((signal));
void __vector_3(void)
{
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	2f 93       	push	r18
   c:	3f 93       	push	r19
   e:	4f 93       	push	r20
  10:	5f 93       	push	r21
  12:	6f 93       	push	r22
  14:	7f 93       	push	r23
  16:	8f 93       	push	r24
  18:	9f 93       	push	r25
  1a:	af 93       	push	r26
  1c:	bf 93       	push	r27
  1e:	ef 93       	push	r30
  20:	ff 93       	push	r31
	EXTINT_ApfuncEXTINT[EXTINT_INT2]();
  22:	e0 91 00 00 	lds	r30, 0x0000
  26:	f0 91 00 00 	lds	r31, 0x0000
  2a:	09 95       	icall
	SET_BIT(GICR, GICR_INT2);
  2c:	eb e5       	ldi	r30, 0x5B	; 91
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	80 81       	ld	r24, Z
  32:	80 62       	ori	r24, 0x20	; 32
  34:	80 83       	st	Z, r24
}
  36:	ff 91       	pop	r31
  38:	ef 91       	pop	r30
  3a:	bf 91       	pop	r27
  3c:	af 91       	pop	r26
  3e:	9f 91       	pop	r25
  40:	8f 91       	pop	r24
  42:	7f 91       	pop	r23
  44:	6f 91       	pop	r22
  46:	5f 91       	pop	r21
  48:	4f 91       	pop	r20
  4a:	3f 91       	pop	r19
  4c:	2f 91       	pop	r18
  4e:	0f 90       	pop	r0
  50:	0f be       	out	0x3f, r0	; 63
  52:	0f 90       	pop	r0
  54:	1f 90       	pop	r1
  56:	18 95       	reti
