
Main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000dec  00000e60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001674  00000000  00000000  00000e78  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bee  00000000  00000000  000024ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
// f32 map(f32 value, f32 in_min, f32 in_max, f32 out_min, f32 out_max) {
//     return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
// }

int main()
{
  82:	8f 92       	push	r8
  84:	9f 92       	push	r9
  86:	af 92       	push	r10
  88:	bf 92       	push	r11
  8a:	cf 92       	push	r12
  8c:	df 92       	push	r13
  8e:	ef 92       	push	r14
  90:	ff 92       	push	r15
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	df 93       	push	r29
  98:	cf 93       	push	r28
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	28 97       	sbiw	r28, 0x08	; 8
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
    u32 val = 0;
    u8 l[] = {HART};
  aa:	de 01       	movw	r26, r28
  ac:	11 96       	adiw	r26, 0x01	; 1
  ae:	ed e6       	ldi	r30, 0x6D	; 109
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	88 e0       	ldi	r24, 0x08	; 8
  b4:	01 90       	ld	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	81 50       	subi	r24, 0x01	; 1
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x32>
    // u32 prev_val = 8000;
    // u32 ipart;
    // u32 dPart;

    LCD_init();
  bc:	0e 94 55 03 	call	0x6aa	; 0x6aa <LCD_init>
    ADC_init();
  c0:	0e 94 8c 03 	call	0x718	; 0x718 <ADC_init>

    LCD_displayString_XY(0,4,"Voltage (V):");
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	64 e0       	ldi	r22, 0x04	; 4
  c8:	40 e6       	ldi	r20, 0x60	; 96
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	0e 94 2f 03 	call	0x65e	; 0x65e <LCD_displayString_XY>
    LCD_sendSpecialChar(l,0,2,10);
  d0:	8e 01       	movw	r16, r28
  d2:	0f 5f       	subi	r16, 0xFF	; 255
  d4:	1f 4f       	sbci	r17, 0xFF	; 255
  d6:	c8 01       	movw	r24, r16
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	42 e0       	ldi	r20, 0x02	; 2
  dc:	2a e0       	ldi	r18, 0x0A	; 10
  de:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_sendSpecialChar>
    LCD_sendSpecialChar(l,0,3,10);
  e2:	c8 01       	movw	r24, r16
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	43 e0       	ldi	r20, 0x03	; 3
  e8:	2a e0       	ldi	r18, 0x0A	; 10
  ea:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_sendSpecialChar>
  ee:	aa 24       	eor	r10, r10
  f0:	bb 24       	eor	r11, r11
  f2:	65 01       	movw	r12, r10
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  f4:	90 e9       	ldi	r25, 0x90	; 144
  f6:	89 2e       	mov	r8, r25
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	99 2e       	mov	r9, r25

    while (1)
    {
        // val = ADC_readChannel(0);
        if (val != (u32) ADC_readChannel(0))
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	0e 94 93 03 	call	0x726	; 0x726 <ADC_readChannel>
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	a8 16       	cp	r10, r24
 108:	b9 06       	cpc	r11, r25
 10a:	ca 06       	cpc	r12, r26
 10c:	db 06       	cpc	r13, r27
 10e:	b1 f3       	breq	.-20     	; 0xfc <main+0x7a>
        {
            // prev_val = val;
            val = (u32) ADC_readChannel(0);
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	0e 94 93 03 	call	0x726	; 0x726 <ADC_readChannel>
 116:	5c 01       	movw	r10, r24
 118:	cc 24       	eor	r12, r12
 11a:	dd 24       	eor	r13, r13
            // ipart = (u32) map(val,0,1023,0,5);
            // dPart = (u32) ((map(val,0,1023,0,5) - ipart) * 100);
            LCD_moveCursor(1,7);
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	67 e0       	ldi	r22, 0x07	; 7
 120:	0e 94 db 02 	call	0x5b6	; 0x5b6 <LCD_moveCursor>
            // LCD_sendNumber(ipart);
            // LCD_displayCharacter('.');
            // LCD_sendNumber(dPart);
            LCD_sendNumber(((val * 5 * 1000) / 1024) / 1000);
 124:	c6 01       	movw	r24, r12
 126:	b5 01       	movw	r22, r10
 128:	28 e8       	ldi	r18, 0x88	; 136
 12a:	33 e1       	ldi	r19, 0x13	; 19
 12c:	40 e0       	ldi	r20, 0x00	; 0
 12e:	50 e0       	ldi	r21, 0x00	; 0
 130:	0e 94 b3 06 	call	0xd66	; 0xd66 <__mulsi3>
 134:	7b 01       	movw	r14, r22
 136:	8c 01       	movw	r16, r24
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	30 ea       	ldi	r19, 0xA0	; 160
 13c:	4f e0       	ldi	r20, 0x0F	; 15
 13e:	50 e0       	ldi	r21, 0x00	; 0
 140:	0e 94 d2 06 	call	0xda4	; 0xda4 <__udivmodsi4>
 144:	ca 01       	movw	r24, r20
 146:	b9 01       	movw	r22, r18
 148:	0e 94 ae 01 	call	0x35c	; 0x35c <LCD_sendNumber>
            LCD_displayCharacter('.');
 14c:	8e e2       	ldi	r24, 0x2E	; 46
 14e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
            LCD_sendNumber(((val * 5 * 1000) / 1024) % 1000);
 152:	8a e0       	ldi	r24, 0x0A	; 10
 154:	16 95       	lsr	r17
 156:	07 95       	ror	r16
 158:	f7 94       	ror	r15
 15a:	e7 94       	ror	r14
 15c:	8a 95       	dec	r24
 15e:	d1 f7       	brne	.-12     	; 0x154 <main+0xd2>
 160:	c8 01       	movw	r24, r16
 162:	b7 01       	movw	r22, r14
 164:	28 ee       	ldi	r18, 0xE8	; 232
 166:	33 e0       	ldi	r19, 0x03	; 3
 168:	40 e0       	ldi	r20, 0x00	; 0
 16a:	50 e0       	ldi	r21, 0x00	; 0
 16c:	0e 94 d2 06 	call	0xda4	; 0xda4 <__udivmodsi4>
 170:	0e 94 ae 01 	call	0x35c	; 0x35c <LCD_sendNumber>
 174:	88 ee       	ldi	r24, 0xE8	; 232
 176:	93 e0       	ldi	r25, 0x03	; 3
 178:	f4 01       	movw	r30, r8
 17a:	31 97       	sbiw	r30, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <main+0xf8>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 17e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 180:	d9 f7       	brne	.-10     	; 0x178 <main+0xf6>
 182:	bc cf       	rjmp	.-136    	; 0xfc <main+0x7a>

00000184 <power_int>:
 184:	6f 92       	push	r6
 186:	7f 92       	push	r7
 188:	8f 92       	push	r8
 18a:	9f 92       	push	r9
 18c:	af 92       	push	r10
 18e:	bf 92       	push	r11
 190:	cf 92       	push	r12
 192:	df 92       	push	r13
 194:	ef 92       	push	r14
 196:	ff 92       	push	r15
 198:	0f 93       	push	r16
 19a:	1f 93       	push	r17
 19c:	3b 01       	movw	r6, r22
 19e:	4c 01       	movw	r8, r24
 1a0:	59 01       	movw	r10, r18
 1a2:	6a 01       	movw	r12, r20
 1a4:	21 e0       	ldi	r18, 0x01	; 1
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	40 e0       	ldi	r20, 0x00	; 0
 1aa:	50 e0       	ldi	r21, 0x00	; 0
 1ac:	ee 24       	eor	r14, r14
 1ae:	ff 24       	eor	r15, r15
 1b0:	87 01       	movw	r16, r14
 1b2:	0d c0       	rjmp	.+26     	; 0x1ce <power_int+0x4a>
 1b4:	ca 01       	movw	r24, r20
 1b6:	b9 01       	movw	r22, r18
 1b8:	a4 01       	movw	r20, r8
 1ba:	93 01       	movw	r18, r6
 1bc:	0e 94 b3 06 	call	0xd66	; 0xd66 <__mulsi3>
 1c0:	9b 01       	movw	r18, r22
 1c2:	ac 01       	movw	r20, r24
 1c4:	08 94       	sec
 1c6:	e1 1c       	adc	r14, r1
 1c8:	f1 1c       	adc	r15, r1
 1ca:	01 1d       	adc	r16, r1
 1cc:	11 1d       	adc	r17, r1
 1ce:	ea 14       	cp	r14, r10
 1d0:	fb 04       	cpc	r15, r11
 1d2:	0c 05       	cpc	r16, r12
 1d4:	1d 05       	cpc	r17, r13
 1d6:	74 f3       	brlt	.-36     	; 0x1b4 <power_int+0x30>
 1d8:	b9 01       	movw	r22, r18
 1da:	ca 01       	movw	r24, r20
 1dc:	1f 91       	pop	r17
 1de:	0f 91       	pop	r16
 1e0:	ff 90       	pop	r15
 1e2:	ef 90       	pop	r14
 1e4:	df 90       	pop	r13
 1e6:	cf 90       	pop	r12
 1e8:	bf 90       	pop	r11
 1ea:	af 90       	pop	r10
 1ec:	9f 90       	pop	r9
 1ee:	8f 90       	pop	r8
 1f0:	7f 90       	pop	r7
 1f2:	6f 90       	pop	r6
 1f4:	08 95       	ret

000001f6 <rev_num>:
 1f6:	6f 92       	push	r6
 1f8:	7f 92       	push	r7
 1fa:	8f 92       	push	r8
 1fc:	9f 92       	push	r9
 1fe:	af 92       	push	r10
 200:	bf 92       	push	r11
 202:	cf 92       	push	r12
 204:	df 92       	push	r13
 206:	ef 92       	push	r14
 208:	ff 92       	push	r15
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	3b 01       	movw	r6, r22
 210:	4c 01       	movw	r8, r24
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	a8 2e       	mov	r10, r24
 216:	b1 2c       	mov	r11, r1
 218:	c1 2c       	mov	r12, r1
 21a:	d1 2c       	mov	r13, r1
 21c:	20 c0       	rjmp	.+64     	; 0x25e <rev_num+0x68>
 21e:	c6 01       	movw	r24, r12
 220:	b5 01       	movw	r22, r10
 222:	2a e0       	ldi	r18, 0x0A	; 10
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	40 e0       	ldi	r20, 0x00	; 0
 228:	50 e0       	ldi	r21, 0x00	; 0
 22a:	0e 94 b3 06 	call	0xd66	; 0xd66 <__mulsi3>
 22e:	7b 01       	movw	r14, r22
 230:	8c 01       	movw	r16, r24
 232:	c4 01       	movw	r24, r8
 234:	b3 01       	movw	r22, r6
 236:	0e 94 d2 06 	call	0xda4	; 0xda4 <__udivmodsi4>
 23a:	5b 01       	movw	r10, r22
 23c:	6c 01       	movw	r12, r24
 23e:	ae 0c       	add	r10, r14
 240:	bf 1c       	adc	r11, r15
 242:	c0 1e       	adc	r12, r16
 244:	d1 1e       	adc	r13, r17
 246:	c4 01       	movw	r24, r8
 248:	b3 01       	movw	r22, r6
 24a:	2a e0       	ldi	r18, 0x0A	; 10
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	40 e0       	ldi	r20, 0x00	; 0
 250:	50 e0       	ldi	r21, 0x00	; 0
 252:	0e 94 d2 06 	call	0xda4	; 0xda4 <__udivmodsi4>
 256:	c9 01       	movw	r24, r18
 258:	da 01       	movw	r26, r20
 25a:	3c 01       	movw	r6, r24
 25c:	4d 01       	movw	r8, r26
 25e:	61 14       	cp	r6, r1
 260:	71 04       	cpc	r7, r1
 262:	81 04       	cpc	r8, r1
 264:	91 04       	cpc	r9, r1
 266:	d9 f6       	brne	.-74     	; 0x21e <rev_num+0x28>
 268:	b5 01       	movw	r22, r10
 26a:	c6 01       	movw	r24, r12
 26c:	1f 91       	pop	r17
 26e:	0f 91       	pop	r16
 270:	ff 90       	pop	r15
 272:	ef 90       	pop	r14
 274:	df 90       	pop	r13
 276:	cf 90       	pop	r12
 278:	bf 90       	pop	r11
 27a:	af 90       	pop	r10
 27c:	9f 90       	pop	r9
 27e:	8f 90       	pop	r8
 280:	7f 90       	pop	r7
 282:	6f 90       	pop	r6
 284:	08 95       	ret

00000286 <LCD_SendFallingEdge>:
 286:	0f 93       	push	r16
 288:	1f 93       	push	r17
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	62 e0       	ldi	r22, 0x02	; 2
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 294:	00 ea       	ldi	r16, 0xA0	; 160
 296:	1f e0       	ldi	r17, 0x0F	; 15
 298:	c8 01       	movw	r24, r16
 29a:	01 97       	sbiw	r24, 0x01	; 1
 29c:	f1 f7       	brne	.-4      	; 0x29a <LCD_SendFallingEdge+0x14>
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	62 e0       	ldi	r22, 0x02	; 2
 2a2:	40 e0       	ldi	r20, 0x00	; 0
 2a4:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 2a8:	c8 01       	movw	r24, r16
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <LCD_SendFallingEdge+0x24>
 2ae:	1f 91       	pop	r17
 2b0:	0f 91       	pop	r16
 2b2:	08 95       	ret

000002b4 <LCD_displayCharacter>:
 2b4:	1f 93       	push	r17
 2b6:	18 2f       	mov	r17, r24
 2b8:	48 2f       	mov	r20, r24
 2ba:	44 1f       	adc	r20, r20
 2bc:	44 27       	eor	r20, r20
 2be:	44 1f       	adc	r20, r20
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	64 e0       	ldi	r22, 0x04	; 4
 2c4:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 2c8:	41 2f       	mov	r20, r17
 2ca:	42 95       	swap	r20
 2cc:	46 95       	lsr	r20
 2ce:	46 95       	lsr	r20
 2d0:	41 70       	andi	r20, 0x01	; 1
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	62 e0       	ldi	r22, 0x02	; 2
 2d6:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 2da:	41 2f       	mov	r20, r17
 2dc:	42 95       	swap	r20
 2de:	46 95       	lsr	r20
 2e0:	41 70       	andi	r20, 0x01	; 1
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	61 e0       	ldi	r22, 0x01	; 1
 2e6:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 2ea:	41 2f       	mov	r20, r17
 2ec:	42 95       	swap	r20
 2ee:	41 70       	andi	r20, 0x01	; 1
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	60 e0       	ldi	r22, 0x00	; 0
 2f4:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	63 e0       	ldi	r22, 0x03	; 3
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 302:	0e 94 43 01 	call	0x286	; 0x286 <LCD_SendFallingEdge>
 306:	41 2f       	mov	r20, r17
 308:	46 95       	lsr	r20
 30a:	46 95       	lsr	r20
 30c:	46 95       	lsr	r20
 30e:	41 70       	andi	r20, 0x01	; 1
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	64 e0       	ldi	r22, 0x04	; 4
 314:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 318:	41 2f       	mov	r20, r17
 31a:	46 95       	lsr	r20
 31c:	46 95       	lsr	r20
 31e:	41 70       	andi	r20, 0x01	; 1
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	62 e0       	ldi	r22, 0x02	; 2
 324:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 328:	41 2f       	mov	r20, r17
 32a:	46 95       	lsr	r20
 32c:	41 70       	andi	r20, 0x01	; 1
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	61 e0       	ldi	r22, 0x01	; 1
 332:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 336:	11 70       	andi	r17, 0x01	; 1
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	60 e0       	ldi	r22, 0x00	; 0
 33c:	41 2f       	mov	r20, r17
 33e:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	63 e0       	ldi	r22, 0x03	; 3
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 34c:	0e 94 43 01 	call	0x286	; 0x286 <LCD_SendFallingEdge>
 350:	80 ea       	ldi	r24, 0xA0	; 160
 352:	9f e0       	ldi	r25, 0x0F	; 15
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	f1 f7       	brne	.-4      	; 0x354 <LCD_displayCharacter+0xa0>
 358:	1f 91       	pop	r17
 35a:	08 95       	ret

0000035c <LCD_sendNumber>:
 35c:	ef 92       	push	r14
 35e:	ff 92       	push	r15
 360:	0f 93       	push	r16
 362:	1f 93       	push	r17
 364:	61 15       	cp	r22, r1
 366:	71 05       	cpc	r23, r1
 368:	81 05       	cpc	r24, r1
 36a:	91 05       	cpc	r25, r1
 36c:	21 f4       	brne	.+8      	; 0x376 <LCD_sendNumber+0x1a>
 36e:	80 e3       	ldi	r24, 0x30	; 48
 370:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 374:	34 c0       	rjmp	.+104    	; 0x3de <LCD_sendNumber+0x82>
 376:	97 ff       	sbrs	r25, 7
 378:	0b c0       	rjmp	.+22     	; 0x390 <LCD_sendNumber+0x34>
 37a:	ee 24       	eor	r14, r14
 37c:	ff 24       	eor	r15, r15
 37e:	87 01       	movw	r16, r14
 380:	e6 1a       	sub	r14, r22
 382:	f7 0a       	sbc	r15, r23
 384:	08 0b       	sbc	r16, r24
 386:	19 0b       	sbc	r17, r25
 388:	8d e2       	ldi	r24, 0x2D	; 45
 38a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 38e:	02 c0       	rjmp	.+4      	; 0x394 <LCD_sendNumber+0x38>
 390:	7b 01       	movw	r14, r22
 392:	8c 01       	movw	r16, r24
 394:	c8 01       	movw	r24, r16
 396:	b7 01       	movw	r22, r14
 398:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <rev_num>
 39c:	7b 01       	movw	r14, r22
 39e:	8c 01       	movw	r16, r24
 3a0:	18 c0       	rjmp	.+48     	; 0x3d2 <LCD_sendNumber+0x76>
 3a2:	c8 01       	movw	r24, r16
 3a4:	b7 01       	movw	r22, r14
 3a6:	2a e0       	ldi	r18, 0x0A	; 10
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	40 e0       	ldi	r20, 0x00	; 0
 3ac:	50 e0       	ldi	r21, 0x00	; 0
 3ae:	0e 94 d2 06 	call	0xda4	; 0xda4 <__udivmodsi4>
 3b2:	86 2f       	mov	r24, r22
 3b4:	80 5d       	subi	r24, 0xD0	; 208
 3b6:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 3ba:	c8 01       	movw	r24, r16
 3bc:	b7 01       	movw	r22, r14
 3be:	2a e0       	ldi	r18, 0x0A	; 10
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	50 e0       	ldi	r21, 0x00	; 0
 3c6:	0e 94 d2 06 	call	0xda4	; 0xda4 <__udivmodsi4>
 3ca:	c9 01       	movw	r24, r18
 3cc:	da 01       	movw	r26, r20
 3ce:	7c 01       	movw	r14, r24
 3d0:	8d 01       	movw	r16, r26
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	e8 16       	cp	r14, r24
 3d6:	f1 04       	cpc	r15, r1
 3d8:	01 05       	cpc	r16, r1
 3da:	11 05       	cpc	r17, r1
 3dc:	11 f7       	brne	.-60     	; 0x3a2 <LCD_sendNumber+0x46>
 3de:	1f 91       	pop	r17
 3e0:	0f 91       	pop	r16
 3e2:	ff 90       	pop	r15
 3e4:	ef 90       	pop	r14
 3e6:	08 95       	ret

000003e8 <LCD_sendFloatNumber>:
 3e8:	2f 92       	push	r2
 3ea:	3f 92       	push	r3
 3ec:	4f 92       	push	r4
 3ee:	5f 92       	push	r5
 3f0:	6f 92       	push	r6
 3f2:	7f 92       	push	r7
 3f4:	8f 92       	push	r8
 3f6:	9f 92       	push	r9
 3f8:	af 92       	push	r10
 3fa:	bf 92       	push	r11
 3fc:	cf 92       	push	r12
 3fe:	df 92       	push	r13
 400:	ef 92       	push	r14
 402:	ff 92       	push	r15
 404:	0f 93       	push	r16
 406:	1f 93       	push	r17
 408:	df 93       	push	r29
 40a:	cf 93       	push	r28
 40c:	00 d0       	rcall	.+0      	; 0x40e <LCD_sendFloatNumber+0x26>
 40e:	00 d0       	rcall	.+0      	; 0x410 <LCD_sendFloatNumber+0x28>
 410:	cd b7       	in	r28, 0x3d	; 61
 412:	de b7       	in	r29, 0x3e	; 62
 414:	69 83       	std	Y+1, r22	; 0x01
 416:	7a 83       	std	Y+2, r23	; 0x02
 418:	8b 83       	std	Y+3, r24	; 0x03
 41a:	9c 83       	std	Y+4, r25	; 0x04
 41c:	19 01       	movw	r2, r18
 41e:	2a 01       	movw	r4, r20
 420:	12 16       	cp	r1, r18
 422:	13 06       	cpc	r1, r19
 424:	14 06       	cpc	r1, r20
 426:	15 06       	cpc	r1, r21
 428:	0c f0       	brlt	.+2      	; 0x42c <LCD_sendFloatNumber+0x44>
 42a:	43 c0       	rjmp	.+134    	; 0x4b2 <LCD_sendFloatNumber+0xca>
 42c:	0e 94 91 05 	call	0xb22	; 0xb22 <__fixsfsi>
 430:	3b 01       	movw	r6, r22
 432:	4c 01       	movw	r8, r24
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	a9 2e       	mov	r10, r25
 438:	b1 2c       	mov	r11, r1
 43a:	c1 2c       	mov	r12, r1
 43c:	d1 2c       	mov	r13, r1
 43e:	ee 24       	eor	r14, r14
 440:	ff 24       	eor	r15, r15
 442:	87 01       	movw	r16, r14
 444:	c6 01       	movw	r24, r12
 446:	b5 01       	movw	r22, r10
 448:	2a e0       	ldi	r18, 0x0A	; 10
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	40 e0       	ldi	r20, 0x00	; 0
 44e:	50 e0       	ldi	r21, 0x00	; 0
 450:	0e 94 b3 06 	call	0xd66	; 0xd66 <__mulsi3>
 454:	5b 01       	movw	r10, r22
 456:	6c 01       	movw	r12, r24
 458:	08 94       	sec
 45a:	e1 1c       	adc	r14, r1
 45c:	f1 1c       	adc	r15, r1
 45e:	01 1d       	adc	r16, r1
 460:	11 1d       	adc	r17, r1
 462:	e2 14       	cp	r14, r2
 464:	f3 04       	cpc	r15, r3
 466:	04 05       	cpc	r16, r4
 468:	15 05       	cpc	r17, r5
 46a:	64 f3       	brlt	.-40     	; 0x444 <LCD_sendFloatNumber+0x5c>
 46c:	c4 01       	movw	r24, r8
 46e:	b3 01       	movw	r22, r6
 470:	0e 94 ae 01 	call	0x35c	; 0x35c <LCD_sendNumber>
 474:	8e e2       	ldi	r24, 0x2E	; 46
 476:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 47a:	c4 01       	movw	r24, r8
 47c:	b3 01       	movw	r22, r6
 47e:	0e 94 c4 05 	call	0xb88	; 0xb88 <__floatsisf>
 482:	9b 01       	movw	r18, r22
 484:	ac 01       	movw	r20, r24
 486:	69 81       	ldd	r22, Y+1	; 0x01
 488:	7a 81       	ldd	r23, Y+2	; 0x02
 48a:	8b 81       	ldd	r24, Y+3	; 0x03
 48c:	9c 81       	ldd	r25, Y+4	; 0x04
 48e:	0e 94 2c 05 	call	0xa58	; 0xa58 <__subsf3>
 492:	7b 01       	movw	r14, r22
 494:	8c 01       	movw	r16, r24
 496:	c6 01       	movw	r24, r12
 498:	b5 01       	movw	r22, r10
 49a:	0e 94 c4 05 	call	0xb88	; 0xb88 <__floatsisf>
 49e:	9b 01       	movw	r18, r22
 4a0:	ac 01       	movw	r20, r24
 4a2:	c8 01       	movw	r24, r16
 4a4:	b7 01       	movw	r22, r14
 4a6:	0e 94 50 06 	call	0xca0	; 0xca0 <__mulsf3>
 4aa:	0e 94 91 05 	call	0xb22	; 0xb22 <__fixsfsi>
 4ae:	0e 94 ae 01 	call	0x35c	; 0x35c <LCD_sendNumber>
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	0f 90       	pop	r0
 4b8:	0f 90       	pop	r0
 4ba:	cf 91       	pop	r28
 4bc:	df 91       	pop	r29
 4be:	1f 91       	pop	r17
 4c0:	0f 91       	pop	r16
 4c2:	ff 90       	pop	r15
 4c4:	ef 90       	pop	r14
 4c6:	df 90       	pop	r13
 4c8:	cf 90       	pop	r12
 4ca:	bf 90       	pop	r11
 4cc:	af 90       	pop	r10
 4ce:	9f 90       	pop	r9
 4d0:	8f 90       	pop	r8
 4d2:	7f 90       	pop	r7
 4d4:	6f 90       	pop	r6
 4d6:	5f 90       	pop	r5
 4d8:	4f 90       	pop	r4
 4da:	3f 90       	pop	r3
 4dc:	2f 90       	pop	r2
 4de:	08 95       	ret

000004e0 <LCD_SendString>:
 4e0:	1f 93       	push	r17
 4e2:	cf 93       	push	r28
 4e4:	df 93       	push	r29
 4e6:	ec 01       	movw	r28, r24
 4e8:	10 e0       	ldi	r17, 0x00	; 0
 4ea:	03 c0       	rjmp	.+6      	; 0x4f2 <LCD_SendString+0x12>
 4ec:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 4f0:	1f 5f       	subi	r17, 0xFF	; 255
 4f2:	fe 01       	movw	r30, r28
 4f4:	e1 0f       	add	r30, r17
 4f6:	f1 1d       	adc	r31, r1
 4f8:	80 81       	ld	r24, Z
 4fa:	88 23       	and	r24, r24
 4fc:	b9 f7       	brne	.-18     	; 0x4ec <LCD_SendString+0xc>
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	1f 91       	pop	r17
 504:	08 95       	ret

00000506 <LCD_sendCommand>:
 506:	1f 93       	push	r17
 508:	18 2f       	mov	r17, r24
 50a:	48 2f       	mov	r20, r24
 50c:	44 1f       	adc	r20, r20
 50e:	44 27       	eor	r20, r20
 510:	44 1f       	adc	r20, r20
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	64 e0       	ldi	r22, 0x04	; 4
 516:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 51a:	41 2f       	mov	r20, r17
 51c:	42 95       	swap	r20
 51e:	46 95       	lsr	r20
 520:	46 95       	lsr	r20
 522:	41 70       	andi	r20, 0x01	; 1
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	62 e0       	ldi	r22, 0x02	; 2
 528:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 52c:	41 2f       	mov	r20, r17
 52e:	42 95       	swap	r20
 530:	46 95       	lsr	r20
 532:	41 70       	andi	r20, 0x01	; 1
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	61 e0       	ldi	r22, 0x01	; 1
 538:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 53c:	41 2f       	mov	r20, r17
 53e:	42 95       	swap	r20
 540:	41 70       	andi	r20, 0x01	; 1
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	63 e0       	ldi	r22, 0x03	; 3
 54e:	40 e0       	ldi	r20, 0x00	; 0
 550:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 554:	0e 94 43 01 	call	0x286	; 0x286 <LCD_SendFallingEdge>
 558:	41 2f       	mov	r20, r17
 55a:	46 95       	lsr	r20
 55c:	46 95       	lsr	r20
 55e:	46 95       	lsr	r20
 560:	41 70       	andi	r20, 0x01	; 1
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	64 e0       	ldi	r22, 0x04	; 4
 566:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 56a:	41 2f       	mov	r20, r17
 56c:	46 95       	lsr	r20
 56e:	46 95       	lsr	r20
 570:	41 70       	andi	r20, 0x01	; 1
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	62 e0       	ldi	r22, 0x02	; 2
 576:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 57a:	41 2f       	mov	r20, r17
 57c:	46 95       	lsr	r20
 57e:	41 70       	andi	r20, 0x01	; 1
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	61 e0       	ldi	r22, 0x01	; 1
 584:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 588:	11 70       	andi	r17, 0x01	; 1
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	41 2f       	mov	r20, r17
 590:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 594:	80 e0       	ldi	r24, 0x00	; 0
 596:	63 e0       	ldi	r22, 0x03	; 3
 598:	40 e0       	ldi	r20, 0x00	; 0
 59a:	0e 94 a5 03 	call	0x74a	; 0x74a <DIO_voidSetPinValue>
 59e:	0e 94 43 01 	call	0x286	; 0x286 <LCD_SendFallingEdge>
 5a2:	80 ea       	ldi	r24, 0xA0	; 160
 5a4:	9f e0       	ldi	r25, 0x0F	; 15
 5a6:	01 97       	sbiw	r24, 0x01	; 1
 5a8:	f1 f7       	brne	.-4      	; 0x5a6 <LCD_sendCommand+0xa0>
 5aa:	1f 91       	pop	r17
 5ac:	08 95       	ret

000005ae <LCD_clearScreen>:
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 5b4:	08 95       	ret

000005b6 <LCD_moveCursor>:
 5b6:	88 23       	and	r24, r24
 5b8:	29 f4       	brne	.+10     	; 0x5c4 <LCD_moveCursor+0xe>
 5ba:	64 31       	cpi	r22, 0x14	; 20
 5bc:	d8 f4       	brcc	.+54     	; 0x5f4 <LCD_moveCursor+0x3e>
 5be:	86 2f       	mov	r24, r22
 5c0:	80 58       	subi	r24, 0x80	; 128
 5c2:	0d c0       	rjmp	.+26     	; 0x5de <LCD_moveCursor+0x28>
 5c4:	81 30       	cpi	r24, 0x01	; 1
 5c6:	29 f4       	brne	.+10     	; 0x5d2 <LCD_moveCursor+0x1c>
 5c8:	64 31       	cpi	r22, 0x14	; 20
 5ca:	a0 f4       	brcc	.+40     	; 0x5f4 <LCD_moveCursor+0x3e>
 5cc:	86 2f       	mov	r24, r22
 5ce:	80 54       	subi	r24, 0x40	; 64
 5d0:	06 c0       	rjmp	.+12     	; 0x5de <LCD_moveCursor+0x28>
 5d2:	82 30       	cpi	r24, 0x02	; 2
 5d4:	39 f4       	brne	.+14     	; 0x5e4 <LCD_moveCursor+0x2e>
 5d6:	64 31       	cpi	r22, 0x14	; 20
 5d8:	68 f4       	brcc	.+26     	; 0x5f4 <LCD_moveCursor+0x3e>
 5da:	86 2f       	mov	r24, r22
 5dc:	8c 56       	subi	r24, 0x6C	; 108
 5de:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 5e2:	08 95       	ret
 5e4:	83 30       	cpi	r24, 0x03	; 3
 5e6:	31 f4       	brne	.+12     	; 0x5f4 <LCD_moveCursor+0x3e>
 5e8:	64 31       	cpi	r22, 0x14	; 20
 5ea:	20 f4       	brcc	.+8      	; 0x5f4 <LCD_moveCursor+0x3e>
 5ec:	86 2f       	mov	r24, r22
 5ee:	8c 52       	subi	r24, 0x2C	; 44
 5f0:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 5f4:	08 95       	ret

000005f6 <LCD_sendSpecialChar>:
 5f6:	df 92       	push	r13
 5f8:	ef 92       	push	r14
 5fa:	ff 92       	push	r15
 5fc:	0f 93       	push	r16
 5fe:	1f 93       	push	r17
 600:	cf 93       	push	r28
 602:	df 93       	push	r29
 604:	7c 01       	movw	r14, r24
 606:	16 2f       	mov	r17, r22
 608:	04 2f       	mov	r16, r20
 60a:	d2 2e       	mov	r13, r18
 60c:	44 30       	cpi	r20, 0x04	; 4
 60e:	f8 f4       	brcc	.+62     	; 0x64e <LCD_sendSpecialChar+0x58>
 610:	83 e1       	ldi	r24, 0x13	; 19
 612:	82 17       	cp	r24, r18
 614:	e0 f0       	brcs	.+56     	; 0x64e <LCD_sendSpecialChar+0x58>
 616:	68 30       	cpi	r22, 0x08	; 8
 618:	d0 f4       	brcc	.+52     	; 0x64e <LCD_sendSpecialChar+0x58>
 61a:	86 2f       	mov	r24, r22
 61c:	88 0f       	add	r24, r24
 61e:	88 0f       	add	r24, r24
 620:	88 0f       	add	r24, r24
 622:	80 5c       	subi	r24, 0xC0	; 192
 624:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 628:	c0 e0       	ldi	r28, 0x00	; 0
 62a:	d0 e0       	ldi	r29, 0x00	; 0
 62c:	f7 01       	movw	r30, r14
 62e:	ec 0f       	add	r30, r28
 630:	fd 1f       	adc	r31, r29
 632:	80 81       	ld	r24, Z
 634:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 638:	21 96       	adiw	r28, 0x01	; 1
 63a:	c8 30       	cpi	r28, 0x08	; 8
 63c:	d1 05       	cpc	r29, r1
 63e:	b1 f7       	brne	.-20     	; 0x62c <LCD_sendSpecialChar+0x36>
 640:	80 2f       	mov	r24, r16
 642:	6d 2d       	mov	r22, r13
 644:	0e 94 db 02 	call	0x5b6	; 0x5b6 <LCD_moveCursor>
 648:	81 2f       	mov	r24, r17
 64a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_displayCharacter>
 64e:	df 91       	pop	r29
 650:	cf 91       	pop	r28
 652:	1f 91       	pop	r17
 654:	0f 91       	pop	r16
 656:	ff 90       	pop	r15
 658:	ef 90       	pop	r14
 65a:	df 90       	pop	r13
 65c:	08 95       	ret

0000065e <LCD_displayString_XY>:
 65e:	cf 93       	push	r28
 660:	df 93       	push	r29
 662:	ea 01       	movw	r28, r20
 664:	88 23       	and	r24, r24
 666:	29 f4       	brne	.+10     	; 0x672 <LCD_displayString_XY+0x14>
 668:	64 31       	cpi	r22, 0x14	; 20
 66a:	c8 f4       	brcc	.+50     	; 0x69e <LCD_displayString_XY+0x40>
 66c:	86 2f       	mov	r24, r22
 66e:	80 58       	subi	r24, 0x80	; 128
 670:	14 c0       	rjmp	.+40     	; 0x69a <LCD_displayString_XY+0x3c>
 672:	81 30       	cpi	r24, 0x01	; 1
 674:	29 f4       	brne	.+10     	; 0x680 <LCD_displayString_XY+0x22>
 676:	64 31       	cpi	r22, 0x14	; 20
 678:	90 f4       	brcc	.+36     	; 0x69e <LCD_displayString_XY+0x40>
 67a:	86 2f       	mov	r24, r22
 67c:	80 54       	subi	r24, 0x40	; 64
 67e:	0d c0       	rjmp	.+26     	; 0x69a <LCD_displayString_XY+0x3c>
 680:	82 30       	cpi	r24, 0x02	; 2
 682:	29 f4       	brne	.+10     	; 0x68e <LCD_displayString_XY+0x30>
 684:	64 31       	cpi	r22, 0x14	; 20
 686:	58 f4       	brcc	.+22     	; 0x69e <LCD_displayString_XY+0x40>
 688:	86 2f       	mov	r24, r22
 68a:	8c 56       	subi	r24, 0x6C	; 108
 68c:	06 c0       	rjmp	.+12     	; 0x69a <LCD_displayString_XY+0x3c>
 68e:	83 30       	cpi	r24, 0x03	; 3
 690:	31 f4       	brne	.+12     	; 0x69e <LCD_displayString_XY+0x40>
 692:	64 31       	cpi	r22, 0x14	; 20
 694:	20 f4       	brcc	.+8      	; 0x69e <LCD_displayString_XY+0x40>
 696:	86 2f       	mov	r24, r22
 698:	8c 52       	subi	r24, 0x2C	; 44
 69a:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 69e:	ce 01       	movw	r24, r28
 6a0:	0e 94 70 02 	call	0x4e0	; 0x4e0 <LCD_SendString>
 6a4:	df 91       	pop	r29
 6a6:	cf 91       	pop	r28
 6a8:	08 95       	ret

000006aa <LCD_init>:
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	63 e0       	ldi	r22, 0x03	; 3
 6ae:	41 e0       	ldi	r20, 0x01	; 1
 6b0:	0e 94 28 04 	call	0x850	; 0x850 <DIO_voidSetPinDirection>
 6b4:	80 e0       	ldi	r24, 0x00	; 0
 6b6:	62 e0       	ldi	r22, 0x02	; 2
 6b8:	41 e0       	ldi	r20, 0x01	; 1
 6ba:	0e 94 28 04 	call	0x850	; 0x850 <DIO_voidSetPinDirection>
 6be:	88 ec       	ldi	r24, 0xC8	; 200
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	20 e9       	ldi	r18, 0x90	; 144
 6c4:	31 e0       	ldi	r19, 0x01	; 1
 6c6:	f9 01       	movw	r30, r18
 6c8:	31 97       	sbiw	r30, 0x01	; 1
 6ca:	f1 f7       	brne	.-4      	; 0x6c8 <LCD_init+0x1e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 6cc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 6ce:	d9 f7       	brne	.-10     	; 0x6c6 <LCD_init+0x1c>
 6d0:	81 e0       	ldi	r24, 0x01	; 1
 6d2:	60 e0       	ldi	r22, 0x00	; 0
 6d4:	41 e0       	ldi	r20, 0x01	; 1
 6d6:	0e 94 28 04 	call	0x850	; 0x850 <DIO_voidSetPinDirection>
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	61 e0       	ldi	r22, 0x01	; 1
 6de:	41 e0       	ldi	r20, 0x01	; 1
 6e0:	0e 94 28 04 	call	0x850	; 0x850 <DIO_voidSetPinDirection>
 6e4:	81 e0       	ldi	r24, 0x01	; 1
 6e6:	62 e0       	ldi	r22, 0x02	; 2
 6e8:	41 e0       	ldi	r20, 0x01	; 1
 6ea:	0e 94 28 04 	call	0x850	; 0x850 <DIO_voidSetPinDirection>
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	64 e0       	ldi	r22, 0x04	; 4
 6f2:	41 e0       	ldi	r20, 0x01	; 1
 6f4:	0e 94 28 04 	call	0x850	; 0x850 <DIO_voidSetPinDirection>
 6f8:	83 e3       	ldi	r24, 0x33	; 51
 6fa:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 6fe:	82 e3       	ldi	r24, 0x32	; 50
 700:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 704:	88 e2       	ldi	r24, 0x28	; 40
 706:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 70a:	8c e0       	ldi	r24, 0x0C	; 12
 70c:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 710:	81 e0       	ldi	r24, 0x01	; 1
 712:	0e 94 83 02 	call	0x506	; 0x506 <LCD_sendCommand>
 716:	08 95       	ret

00000718 <ADC_init>:
 718:	d0 98       	cbi	0x1a, 0	; 26
 71a:	d1 98       	cbi	0x1a, 1	; 26
 71c:	80 e4       	ldi	r24, 0x40	; 64
 71e:	87 b9       	out	0x07, r24	; 7
 720:	87 e8       	ldi	r24, 0x87	; 135
 722:	86 b9       	out	0x06, r24	; 6
 724:	08 95       	ret

00000726 <ADC_readChannel>:
 726:	97 b1       	in	r25, 0x07	; 7
 728:	8f 70       	andi	r24, 0x0F	; 15
 72a:	89 2b       	or	r24, r25
 72c:	87 b9       	out	0x07, r24	; 7
 72e:	36 9a       	sbi	0x06, 6	; 6
 730:	34 9b       	sbis	0x06, 4	; 6
 732:	fe cf       	rjmp	.-4      	; 0x730 <ADC_readChannel+0xa>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 734:	85 e3       	ldi	r24, 0x35	; 53
 736:	8a 95       	dec	r24
 738:	f1 f7       	brne	.-4      	; 0x736 <ADC_readChannel+0x10>
 73a:	94 b1       	in	r25, 0x04	; 4
 73c:	85 b1       	in	r24, 0x05	; 5
 73e:	38 2f       	mov	r19, r24
 740:	20 e0       	ldi	r18, 0x00	; 0
 742:	29 0f       	add	r18, r25
 744:	31 1d       	adc	r19, r1
 746:	c9 01       	movw	r24, r18
 748:	08 95       	ret

0000074a <DIO_voidSetPinValue>:
 74a:	84 30       	cpi	r24, 0x04	; 4
 74c:	08 f0       	brcs	.+2      	; 0x750 <DIO_voidSetPinValue+0x6>
 74e:	7f c0       	rjmp	.+254    	; 0x84e <DIO_voidSetPinValue+0x104>
 750:	68 30       	cpi	r22, 0x08	; 8
 752:	08 f0       	brcs	.+2      	; 0x756 <DIO_voidSetPinValue+0xc>
 754:	7c c0       	rjmp	.+248    	; 0x84e <DIO_voidSetPinValue+0x104>
 756:	81 30       	cpi	r24, 0x01	; 1
 758:	31 f1       	breq	.+76     	; 0x7a6 <DIO_voidSetPinValue+0x5c>
 75a:	81 30       	cpi	r24, 0x01	; 1
 75c:	38 f0       	brcs	.+14     	; 0x76c <DIO_voidSetPinValue+0x22>
 75e:	82 30       	cpi	r24, 0x02	; 2
 760:	09 f4       	brne	.+2      	; 0x764 <DIO_voidSetPinValue+0x1a>
 762:	3e c0       	rjmp	.+124    	; 0x7e0 <DIO_voidSetPinValue+0x96>
 764:	83 30       	cpi	r24, 0x03	; 3
 766:	09 f0       	breq	.+2      	; 0x76a <DIO_voidSetPinValue+0x20>
 768:	72 c0       	rjmp	.+228    	; 0x84e <DIO_voidSetPinValue+0x104>
 76a:	56 c0       	rjmp	.+172    	; 0x818 <DIO_voidSetPinValue+0xce>
 76c:	44 23       	and	r20, r20
 76e:	21 f0       	breq	.+8      	; 0x778 <DIO_voidSetPinValue+0x2e>
 770:	41 30       	cpi	r20, 0x01	; 1
 772:	09 f0       	breq	.+2      	; 0x776 <DIO_voidSetPinValue+0x2c>
 774:	6c c0       	rjmp	.+216    	; 0x84e <DIO_voidSetPinValue+0x104>
 776:	0c c0       	rjmp	.+24     	; 0x790 <DIO_voidSetPinValue+0x46>
 778:	2b b3       	in	r18, 0x1b	; 27
 77a:	81 e0       	ldi	r24, 0x01	; 1
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	02 c0       	rjmp	.+4      	; 0x784 <DIO_voidSetPinValue+0x3a>
 780:	88 0f       	add	r24, r24
 782:	99 1f       	adc	r25, r25
 784:	6a 95       	dec	r22
 786:	e2 f7       	brpl	.-8      	; 0x780 <DIO_voidSetPinValue+0x36>
 788:	80 95       	com	r24
 78a:	82 23       	and	r24, r18
 78c:	8b bb       	out	0x1b, r24	; 27
 78e:	08 95       	ret
 790:	2b b3       	in	r18, 0x1b	; 27
 792:	81 e0       	ldi	r24, 0x01	; 1
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	02 c0       	rjmp	.+4      	; 0x79c <DIO_voidSetPinValue+0x52>
 798:	88 0f       	add	r24, r24
 79a:	99 1f       	adc	r25, r25
 79c:	6a 95       	dec	r22
 79e:	e2 f7       	brpl	.-8      	; 0x798 <DIO_voidSetPinValue+0x4e>
 7a0:	28 2b       	or	r18, r24
 7a2:	2b bb       	out	0x1b, r18	; 27
 7a4:	08 95       	ret
 7a6:	44 23       	and	r20, r20
 7a8:	21 f0       	breq	.+8      	; 0x7b2 <DIO_voidSetPinValue+0x68>
 7aa:	41 30       	cpi	r20, 0x01	; 1
 7ac:	09 f0       	breq	.+2      	; 0x7b0 <DIO_voidSetPinValue+0x66>
 7ae:	4f c0       	rjmp	.+158    	; 0x84e <DIO_voidSetPinValue+0x104>
 7b0:	0c c0       	rjmp	.+24     	; 0x7ca <DIO_voidSetPinValue+0x80>
 7b2:	28 b3       	in	r18, 0x18	; 24
 7b4:	81 e0       	ldi	r24, 0x01	; 1
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	02 c0       	rjmp	.+4      	; 0x7be <DIO_voidSetPinValue+0x74>
 7ba:	88 0f       	add	r24, r24
 7bc:	99 1f       	adc	r25, r25
 7be:	6a 95       	dec	r22
 7c0:	e2 f7       	brpl	.-8      	; 0x7ba <DIO_voidSetPinValue+0x70>
 7c2:	80 95       	com	r24
 7c4:	82 23       	and	r24, r18
 7c6:	88 bb       	out	0x18, r24	; 24
 7c8:	08 95       	ret
 7ca:	28 b3       	in	r18, 0x18	; 24
 7cc:	81 e0       	ldi	r24, 0x01	; 1
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <DIO_voidSetPinValue+0x8c>
 7d2:	88 0f       	add	r24, r24
 7d4:	99 1f       	adc	r25, r25
 7d6:	6a 95       	dec	r22
 7d8:	e2 f7       	brpl	.-8      	; 0x7d2 <DIO_voidSetPinValue+0x88>
 7da:	28 2b       	or	r18, r24
 7dc:	28 bb       	out	0x18, r18	; 24
 7de:	08 95       	ret
 7e0:	44 23       	and	r20, r20
 7e2:	19 f0       	breq	.+6      	; 0x7ea <DIO_voidSetPinValue+0xa0>
 7e4:	41 30       	cpi	r20, 0x01	; 1
 7e6:	99 f5       	brne	.+102    	; 0x84e <DIO_voidSetPinValue+0x104>
 7e8:	0c c0       	rjmp	.+24     	; 0x802 <DIO_voidSetPinValue+0xb8>
 7ea:	25 b3       	in	r18, 0x15	; 21
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <DIO_voidSetPinValue+0xac>
 7f2:	88 0f       	add	r24, r24
 7f4:	99 1f       	adc	r25, r25
 7f6:	6a 95       	dec	r22
 7f8:	e2 f7       	brpl	.-8      	; 0x7f2 <DIO_voidSetPinValue+0xa8>
 7fa:	80 95       	com	r24
 7fc:	82 23       	and	r24, r18
 7fe:	85 bb       	out	0x15, r24	; 21
 800:	08 95       	ret
 802:	25 b3       	in	r18, 0x15	; 21
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	02 c0       	rjmp	.+4      	; 0x80e <DIO_voidSetPinValue+0xc4>
 80a:	88 0f       	add	r24, r24
 80c:	99 1f       	adc	r25, r25
 80e:	6a 95       	dec	r22
 810:	e2 f7       	brpl	.-8      	; 0x80a <DIO_voidSetPinValue+0xc0>
 812:	28 2b       	or	r18, r24
 814:	25 bb       	out	0x15, r18	; 21
 816:	08 95       	ret
 818:	44 23       	and	r20, r20
 81a:	19 f0       	breq	.+6      	; 0x822 <DIO_voidSetPinValue+0xd8>
 81c:	41 30       	cpi	r20, 0x01	; 1
 81e:	b9 f4       	brne	.+46     	; 0x84e <DIO_voidSetPinValue+0x104>
 820:	0c c0       	rjmp	.+24     	; 0x83a <DIO_voidSetPinValue+0xf0>
 822:	22 b3       	in	r18, 0x12	; 18
 824:	81 e0       	ldi	r24, 0x01	; 1
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	02 c0       	rjmp	.+4      	; 0x82e <DIO_voidSetPinValue+0xe4>
 82a:	88 0f       	add	r24, r24
 82c:	99 1f       	adc	r25, r25
 82e:	6a 95       	dec	r22
 830:	e2 f7       	brpl	.-8      	; 0x82a <DIO_voidSetPinValue+0xe0>
 832:	80 95       	com	r24
 834:	82 23       	and	r24, r18
 836:	82 bb       	out	0x12, r24	; 18
 838:	08 95       	ret
 83a:	22 b3       	in	r18, 0x12	; 18
 83c:	81 e0       	ldi	r24, 0x01	; 1
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	02 c0       	rjmp	.+4      	; 0x846 <DIO_voidSetPinValue+0xfc>
 842:	88 0f       	add	r24, r24
 844:	99 1f       	adc	r25, r25
 846:	6a 95       	dec	r22
 848:	e2 f7       	brpl	.-8      	; 0x842 <DIO_voidSetPinValue+0xf8>
 84a:	28 2b       	or	r18, r24
 84c:	22 bb       	out	0x12, r18	; 18
 84e:	08 95       	ret

00000850 <DIO_voidSetPinDirection>:
 850:	84 30       	cpi	r24, 0x04	; 4
 852:	08 f0       	brcs	.+2      	; 0x856 <DIO_voidSetPinDirection+0x6>
 854:	7f c0       	rjmp	.+254    	; 0x954 <__stack+0xf5>
 856:	68 30       	cpi	r22, 0x08	; 8
 858:	08 f0       	brcs	.+2      	; 0x85c <DIO_voidSetPinDirection+0xc>
 85a:	7c c0       	rjmp	.+248    	; 0x954 <__stack+0xf5>
 85c:	81 30       	cpi	r24, 0x01	; 1
 85e:	31 f1       	breq	.+76     	; 0x8ac <__stack+0x4d>
 860:	81 30       	cpi	r24, 0x01	; 1
 862:	38 f0       	brcs	.+14     	; 0x872 <__stack+0x13>
 864:	82 30       	cpi	r24, 0x02	; 2
 866:	09 f4       	brne	.+2      	; 0x86a <__stack+0xb>
 868:	3e c0       	rjmp	.+124    	; 0x8e6 <__stack+0x87>
 86a:	83 30       	cpi	r24, 0x03	; 3
 86c:	09 f0       	breq	.+2      	; 0x870 <__stack+0x11>
 86e:	72 c0       	rjmp	.+228    	; 0x954 <__stack+0xf5>
 870:	56 c0       	rjmp	.+172    	; 0x91e <__stack+0xbf>
 872:	44 23       	and	r20, r20
 874:	21 f0       	breq	.+8      	; 0x87e <__stack+0x1f>
 876:	41 30       	cpi	r20, 0x01	; 1
 878:	09 f0       	breq	.+2      	; 0x87c <__stack+0x1d>
 87a:	6c c0       	rjmp	.+216    	; 0x954 <__stack+0xf5>
 87c:	0c c0       	rjmp	.+24     	; 0x896 <__stack+0x37>
 87e:	2a b3       	in	r18, 0x1a	; 26
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	02 c0       	rjmp	.+4      	; 0x88a <__stack+0x2b>
 886:	88 0f       	add	r24, r24
 888:	99 1f       	adc	r25, r25
 88a:	6a 95       	dec	r22
 88c:	e2 f7       	brpl	.-8      	; 0x886 <__stack+0x27>
 88e:	80 95       	com	r24
 890:	82 23       	and	r24, r18
 892:	8a bb       	out	0x1a, r24	; 26
 894:	08 95       	ret
 896:	2a b3       	in	r18, 0x1a	; 26
 898:	81 e0       	ldi	r24, 0x01	; 1
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <__stack+0x43>
 89e:	88 0f       	add	r24, r24
 8a0:	99 1f       	adc	r25, r25
 8a2:	6a 95       	dec	r22
 8a4:	e2 f7       	brpl	.-8      	; 0x89e <__stack+0x3f>
 8a6:	28 2b       	or	r18, r24
 8a8:	2a bb       	out	0x1a, r18	; 26
 8aa:	08 95       	ret
 8ac:	44 23       	and	r20, r20
 8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
 8b0:	41 30       	cpi	r20, 0x01	; 1
 8b2:	09 f0       	breq	.+2      	; 0x8b6 <__stack+0x57>
 8b4:	4f c0       	rjmp	.+158    	; 0x954 <__stack+0xf5>
 8b6:	0c c0       	rjmp	.+24     	; 0x8d0 <__stack+0x71>
 8b8:	27 b3       	in	r18, 0x17	; 23
 8ba:	81 e0       	ldi	r24, 0x01	; 1
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	02 c0       	rjmp	.+4      	; 0x8c4 <__stack+0x65>
 8c0:	88 0f       	add	r24, r24
 8c2:	99 1f       	adc	r25, r25
 8c4:	6a 95       	dec	r22
 8c6:	e2 f7       	brpl	.-8      	; 0x8c0 <__stack+0x61>
 8c8:	80 95       	com	r24
 8ca:	82 23       	and	r24, r18
 8cc:	87 bb       	out	0x17, r24	; 23
 8ce:	08 95       	ret
 8d0:	27 b3       	in	r18, 0x17	; 23
 8d2:	81 e0       	ldi	r24, 0x01	; 1
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	02 c0       	rjmp	.+4      	; 0x8dc <__stack+0x7d>
 8d8:	88 0f       	add	r24, r24
 8da:	99 1f       	adc	r25, r25
 8dc:	6a 95       	dec	r22
 8de:	e2 f7       	brpl	.-8      	; 0x8d8 <__stack+0x79>
 8e0:	28 2b       	or	r18, r24
 8e2:	27 bb       	out	0x17, r18	; 23
 8e4:	08 95       	ret
 8e6:	44 23       	and	r20, r20
 8e8:	19 f0       	breq	.+6      	; 0x8f0 <__stack+0x91>
 8ea:	41 30       	cpi	r20, 0x01	; 1
 8ec:	99 f5       	brne	.+102    	; 0x954 <__stack+0xf5>
 8ee:	0c c0       	rjmp	.+24     	; 0x908 <__stack+0xa9>
 8f0:	24 b3       	in	r18, 0x14	; 20
 8f2:	81 e0       	ldi	r24, 0x01	; 1
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <__stack+0x9d>
 8f8:	88 0f       	add	r24, r24
 8fa:	99 1f       	adc	r25, r25
 8fc:	6a 95       	dec	r22
 8fe:	e2 f7       	brpl	.-8      	; 0x8f8 <__stack+0x99>
 900:	80 95       	com	r24
 902:	82 23       	and	r24, r18
 904:	84 bb       	out	0x14, r24	; 20
 906:	08 95       	ret
 908:	24 b3       	in	r18, 0x14	; 20
 90a:	81 e0       	ldi	r24, 0x01	; 1
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	02 c0       	rjmp	.+4      	; 0x914 <__stack+0xb5>
 910:	88 0f       	add	r24, r24
 912:	99 1f       	adc	r25, r25
 914:	6a 95       	dec	r22
 916:	e2 f7       	brpl	.-8      	; 0x910 <__stack+0xb1>
 918:	28 2b       	or	r18, r24
 91a:	24 bb       	out	0x14, r18	; 20
 91c:	08 95       	ret
 91e:	44 23       	and	r20, r20
 920:	19 f0       	breq	.+6      	; 0x928 <__stack+0xc9>
 922:	41 30       	cpi	r20, 0x01	; 1
 924:	b9 f4       	brne	.+46     	; 0x954 <__stack+0xf5>
 926:	0c c0       	rjmp	.+24     	; 0x940 <__stack+0xe1>
 928:	21 b3       	in	r18, 0x11	; 17
 92a:	81 e0       	ldi	r24, 0x01	; 1
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	02 c0       	rjmp	.+4      	; 0x934 <__stack+0xd5>
 930:	88 0f       	add	r24, r24
 932:	99 1f       	adc	r25, r25
 934:	6a 95       	dec	r22
 936:	e2 f7       	brpl	.-8      	; 0x930 <__stack+0xd1>
 938:	80 95       	com	r24
 93a:	82 23       	and	r24, r18
 93c:	81 bb       	out	0x11, r24	; 17
 93e:	08 95       	ret
 940:	21 b3       	in	r18, 0x11	; 17
 942:	81 e0       	ldi	r24, 0x01	; 1
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	02 c0       	rjmp	.+4      	; 0x94c <__stack+0xed>
 948:	88 0f       	add	r24, r24
 94a:	99 1f       	adc	r25, r25
 94c:	6a 95       	dec	r22
 94e:	e2 f7       	brpl	.-8      	; 0x948 <__stack+0xe9>
 950:	28 2b       	or	r18, r24
 952:	21 bb       	out	0x11, r18	; 17
 954:	08 95       	ret

00000956 <DIO_voidGetPinValue>:
 956:	84 30       	cpi	r24, 0x04	; 4
 958:	d0 f4       	brcc	.+52     	; 0x98e <DIO_voidGetPinValue+0x38>
 95a:	68 30       	cpi	r22, 0x08	; 8
 95c:	c0 f4       	brcc	.+48     	; 0x98e <DIO_voidGetPinValue+0x38>
 95e:	81 30       	cpi	r24, 0x01	; 1
 960:	49 f0       	breq	.+18     	; 0x974 <DIO_voidGetPinValue+0x1e>
 962:	81 30       	cpi	r24, 0x01	; 1
 964:	28 f0       	brcs	.+10     	; 0x970 <DIO_voidGetPinValue+0x1a>
 966:	82 30       	cpi	r24, 0x02	; 2
 968:	39 f0       	breq	.+14     	; 0x978 <DIO_voidGetPinValue+0x22>
 96a:	83 30       	cpi	r24, 0x03	; 3
 96c:	81 f4       	brne	.+32     	; 0x98e <DIO_voidGetPinValue+0x38>
 96e:	06 c0       	rjmp	.+12     	; 0x97c <DIO_voidGetPinValue+0x26>
 970:	89 b3       	in	r24, 0x19	; 25
 972:	05 c0       	rjmp	.+10     	; 0x97e <DIO_voidGetPinValue+0x28>
 974:	86 b3       	in	r24, 0x16	; 22
 976:	03 c0       	rjmp	.+6      	; 0x97e <DIO_voidGetPinValue+0x28>
 978:	83 b3       	in	r24, 0x13	; 19
 97a:	01 c0       	rjmp	.+2      	; 0x97e <DIO_voidGetPinValue+0x28>
 97c:	80 b3       	in	r24, 0x10	; 16
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	02 c0       	rjmp	.+4      	; 0x986 <DIO_voidGetPinValue+0x30>
 982:	95 95       	asr	r25
 984:	87 95       	ror	r24
 986:	6a 95       	dec	r22
 988:	e2 f7       	brpl	.-8      	; 0x982 <DIO_voidGetPinValue+0x2c>
 98a:	81 70       	andi	r24, 0x01	; 1
 98c:	08 95       	ret
 98e:	85 e0       	ldi	r24, 0x05	; 5
 990:	08 95       	ret

00000992 <DIO_voidSetPortValue>:
 992:	84 30       	cpi	r24, 0x04	; 4
 994:	80 f4       	brcc	.+32     	; 0x9b6 <DIO_voidSetPortValue+0x24>
 996:	81 30       	cpi	r24, 0x01	; 1
 998:	49 f0       	breq	.+18     	; 0x9ac <DIO_voidSetPortValue+0x1a>
 99a:	81 30       	cpi	r24, 0x01	; 1
 99c:	28 f0       	brcs	.+10     	; 0x9a8 <DIO_voidSetPortValue+0x16>
 99e:	82 30       	cpi	r24, 0x02	; 2
 9a0:	39 f0       	breq	.+14     	; 0x9b0 <DIO_voidSetPortValue+0x1e>
 9a2:	83 30       	cpi	r24, 0x03	; 3
 9a4:	41 f4       	brne	.+16     	; 0x9b6 <DIO_voidSetPortValue+0x24>
 9a6:	06 c0       	rjmp	.+12     	; 0x9b4 <DIO_voidSetPortValue+0x22>
 9a8:	6b bb       	out	0x1b, r22	; 27
 9aa:	08 95       	ret
 9ac:	68 bb       	out	0x18, r22	; 24
 9ae:	08 95       	ret
 9b0:	65 bb       	out	0x15, r22	; 21
 9b2:	08 95       	ret
 9b4:	62 bb       	out	0x12, r22	; 18
 9b6:	08 95       	ret

000009b8 <DIO_voidSetPortDirection>:
 9b8:	84 30       	cpi	r24, 0x04	; 4
 9ba:	c0 f5       	brcc	.+112    	; 0xa2c <DIO_voidSetPortDirection+0x74>
 9bc:	81 30       	cpi	r24, 0x01	; 1
 9be:	99 f0       	breq	.+38     	; 0x9e6 <DIO_voidSetPortDirection+0x2e>
 9c0:	81 30       	cpi	r24, 0x01	; 1
 9c2:	28 f0       	brcs	.+10     	; 0x9ce <DIO_voidSetPortDirection+0x16>
 9c4:	82 30       	cpi	r24, 0x02	; 2
 9c6:	d9 f0       	breq	.+54     	; 0x9fe <DIO_voidSetPortDirection+0x46>
 9c8:	83 30       	cpi	r24, 0x03	; 3
 9ca:	81 f5       	brne	.+96     	; 0xa2c <DIO_voidSetPortDirection+0x74>
 9cc:	24 c0       	rjmp	.+72     	; 0xa16 <DIO_voidSetPortDirection+0x5e>
 9ce:	66 23       	and	r22, r22
 9d0:	19 f0       	breq	.+6      	; 0x9d8 <DIO_voidSetPortDirection+0x20>
 9d2:	61 30       	cpi	r22, 0x01	; 1
 9d4:	59 f5       	brne	.+86     	; 0xa2c <DIO_voidSetPortDirection+0x74>
 9d6:	03 c0       	rjmp	.+6      	; 0x9de <DIO_voidSetPortDirection+0x26>
 9d8:	8a b3       	in	r24, 0x1a	; 26
 9da:	1a ba       	out	0x1a, r1	; 26
 9dc:	08 95       	ret
 9de:	8a b3       	in	r24, 0x1a	; 26
 9e0:	8f ef       	ldi	r24, 0xFF	; 255
 9e2:	8a bb       	out	0x1a, r24	; 26
 9e4:	08 95       	ret
 9e6:	66 23       	and	r22, r22
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <DIO_voidSetPortDirection+0x38>
 9ea:	61 30       	cpi	r22, 0x01	; 1
 9ec:	f9 f4       	brne	.+62     	; 0xa2c <DIO_voidSetPortDirection+0x74>
 9ee:	03 c0       	rjmp	.+6      	; 0x9f6 <DIO_voidSetPortDirection+0x3e>
 9f0:	87 b3       	in	r24, 0x17	; 23
 9f2:	17 ba       	out	0x17, r1	; 23
 9f4:	08 95       	ret
 9f6:	87 b3       	in	r24, 0x17	; 23
 9f8:	8f ef       	ldi	r24, 0xFF	; 255
 9fa:	87 bb       	out	0x17, r24	; 23
 9fc:	08 95       	ret
 9fe:	66 23       	and	r22, r22
 a00:	19 f0       	breq	.+6      	; 0xa08 <DIO_voidSetPortDirection+0x50>
 a02:	61 30       	cpi	r22, 0x01	; 1
 a04:	99 f4       	brne	.+38     	; 0xa2c <DIO_voidSetPortDirection+0x74>
 a06:	03 c0       	rjmp	.+6      	; 0xa0e <DIO_voidSetPortDirection+0x56>
 a08:	84 b3       	in	r24, 0x14	; 20
 a0a:	14 ba       	out	0x14, r1	; 20
 a0c:	08 95       	ret
 a0e:	84 b3       	in	r24, 0x14	; 20
 a10:	8f ef       	ldi	r24, 0xFF	; 255
 a12:	84 bb       	out	0x14, r24	; 20
 a14:	08 95       	ret
 a16:	66 23       	and	r22, r22
 a18:	19 f0       	breq	.+6      	; 0xa20 <DIO_voidSetPortDirection+0x68>
 a1a:	61 30       	cpi	r22, 0x01	; 1
 a1c:	39 f4       	brne	.+14     	; 0xa2c <DIO_voidSetPortDirection+0x74>
 a1e:	03 c0       	rjmp	.+6      	; 0xa26 <DIO_voidSetPortDirection+0x6e>
 a20:	81 b3       	in	r24, 0x11	; 17
 a22:	11 ba       	out	0x11, r1	; 17
 a24:	08 95       	ret
 a26:	81 b3       	in	r24, 0x11	; 17
 a28:	8f ef       	ldi	r24, 0xFF	; 255
 a2a:	81 bb       	out	0x11, r24	; 17
 a2c:	08 95       	ret

00000a2e <DIO_voidGetPortValue>:
 a2e:	84 30       	cpi	r24, 0x04	; 4
 a30:	88 f4       	brcc	.+34     	; 0xa54 <DIO_voidGetPortValue+0x26>
 a32:	81 30       	cpi	r24, 0x01	; 1
 a34:	49 f0       	breq	.+18     	; 0xa48 <DIO_voidGetPortValue+0x1a>
 a36:	81 30       	cpi	r24, 0x01	; 1
 a38:	28 f0       	brcs	.+10     	; 0xa44 <DIO_voidGetPortValue+0x16>
 a3a:	82 30       	cpi	r24, 0x02	; 2
 a3c:	39 f0       	breq	.+14     	; 0xa4c <DIO_voidGetPortValue+0x1e>
 a3e:	83 30       	cpi	r24, 0x03	; 3
 a40:	49 f4       	brne	.+18     	; 0xa54 <DIO_voidGetPortValue+0x26>
 a42:	06 c0       	rjmp	.+12     	; 0xa50 <DIO_voidGetPortValue+0x22>
 a44:	89 b3       	in	r24, 0x19	; 25
 a46:	08 95       	ret
 a48:	86 b3       	in	r24, 0x16	; 22
 a4a:	08 95       	ret
 a4c:	83 b3       	in	r24, 0x13	; 19
 a4e:	08 95       	ret
 a50:	80 b3       	in	r24, 0x10	; 16
 a52:	08 95       	ret
 a54:	85 e0       	ldi	r24, 0x05	; 5
 a56:	08 95       	ret

00000a58 <__subsf3>:
 a58:	50 58       	subi	r21, 0x80	; 128

00000a5a <__addsf3>:
 a5a:	bb 27       	eor	r27, r27
 a5c:	aa 27       	eor	r26, r26
 a5e:	0e d0       	rcall	.+28     	; 0xa7c <__addsf3x>
 a60:	e5 c0       	rjmp	.+458    	; 0xc2c <__fp_round>
 a62:	d6 d0       	rcall	.+428    	; 0xc10 <__fp_pscA>
 a64:	30 f0       	brcs	.+12     	; 0xa72 <__addsf3+0x18>
 a66:	db d0       	rcall	.+438    	; 0xc1e <__fp_pscB>
 a68:	20 f0       	brcs	.+8      	; 0xa72 <__addsf3+0x18>
 a6a:	31 f4       	brne	.+12     	; 0xa78 <__addsf3+0x1e>
 a6c:	9f 3f       	cpi	r25, 0xFF	; 255
 a6e:	11 f4       	brne	.+4      	; 0xa74 <__addsf3+0x1a>
 a70:	1e f4       	brtc	.+6      	; 0xa78 <__addsf3+0x1e>
 a72:	cb c0       	rjmp	.+406    	; 0xc0a <__fp_nan>
 a74:	0e f4       	brtc	.+2      	; 0xa78 <__addsf3+0x1e>
 a76:	e0 95       	com	r30
 a78:	e7 fb       	bst	r30, 7
 a7a:	c1 c0       	rjmp	.+386    	; 0xbfe <__fp_inf>

00000a7c <__addsf3x>:
 a7c:	e9 2f       	mov	r30, r25
 a7e:	e7 d0       	rcall	.+462    	; 0xc4e <__fp_split3>
 a80:	80 f3       	brcs	.-32     	; 0xa62 <__addsf3+0x8>
 a82:	ba 17       	cp	r27, r26
 a84:	62 07       	cpc	r22, r18
 a86:	73 07       	cpc	r23, r19
 a88:	84 07       	cpc	r24, r20
 a8a:	95 07       	cpc	r25, r21
 a8c:	18 f0       	brcs	.+6      	; 0xa94 <__addsf3x+0x18>
 a8e:	71 f4       	brne	.+28     	; 0xaac <__addsf3x+0x30>
 a90:	9e f5       	brtc	.+102    	; 0xaf8 <__addsf3x+0x7c>
 a92:	ff c0       	rjmp	.+510    	; 0xc92 <__fp_zero>
 a94:	0e f4       	brtc	.+2      	; 0xa98 <__addsf3x+0x1c>
 a96:	e0 95       	com	r30
 a98:	0b 2e       	mov	r0, r27
 a9a:	ba 2f       	mov	r27, r26
 a9c:	a0 2d       	mov	r26, r0
 a9e:	0b 01       	movw	r0, r22
 aa0:	b9 01       	movw	r22, r18
 aa2:	90 01       	movw	r18, r0
 aa4:	0c 01       	movw	r0, r24
 aa6:	ca 01       	movw	r24, r20
 aa8:	a0 01       	movw	r20, r0
 aaa:	11 24       	eor	r1, r1
 aac:	ff 27       	eor	r31, r31
 aae:	59 1b       	sub	r21, r25
 ab0:	99 f0       	breq	.+38     	; 0xad8 <__addsf3x+0x5c>
 ab2:	59 3f       	cpi	r21, 0xF9	; 249
 ab4:	50 f4       	brcc	.+20     	; 0xaca <__addsf3x+0x4e>
 ab6:	50 3e       	cpi	r21, 0xE0	; 224
 ab8:	68 f1       	brcs	.+90     	; 0xb14 <__addsf3x+0x98>
 aba:	1a 16       	cp	r1, r26
 abc:	f0 40       	sbci	r31, 0x00	; 0
 abe:	a2 2f       	mov	r26, r18
 ac0:	23 2f       	mov	r18, r19
 ac2:	34 2f       	mov	r19, r20
 ac4:	44 27       	eor	r20, r20
 ac6:	58 5f       	subi	r21, 0xF8	; 248
 ac8:	f3 cf       	rjmp	.-26     	; 0xab0 <__addsf3x+0x34>
 aca:	46 95       	lsr	r20
 acc:	37 95       	ror	r19
 ace:	27 95       	ror	r18
 ad0:	a7 95       	ror	r26
 ad2:	f0 40       	sbci	r31, 0x00	; 0
 ad4:	53 95       	inc	r21
 ad6:	c9 f7       	brne	.-14     	; 0xaca <__addsf3x+0x4e>
 ad8:	7e f4       	brtc	.+30     	; 0xaf8 <__addsf3x+0x7c>
 ada:	1f 16       	cp	r1, r31
 adc:	ba 0b       	sbc	r27, r26
 ade:	62 0b       	sbc	r22, r18
 ae0:	73 0b       	sbc	r23, r19
 ae2:	84 0b       	sbc	r24, r20
 ae4:	ba f0       	brmi	.+46     	; 0xb14 <__addsf3x+0x98>
 ae6:	91 50       	subi	r25, 0x01	; 1
 ae8:	a1 f0       	breq	.+40     	; 0xb12 <__addsf3x+0x96>
 aea:	ff 0f       	add	r31, r31
 aec:	bb 1f       	adc	r27, r27
 aee:	66 1f       	adc	r22, r22
 af0:	77 1f       	adc	r23, r23
 af2:	88 1f       	adc	r24, r24
 af4:	c2 f7       	brpl	.-16     	; 0xae6 <__addsf3x+0x6a>
 af6:	0e c0       	rjmp	.+28     	; 0xb14 <__addsf3x+0x98>
 af8:	ba 0f       	add	r27, r26
 afa:	62 1f       	adc	r22, r18
 afc:	73 1f       	adc	r23, r19
 afe:	84 1f       	adc	r24, r20
 b00:	48 f4       	brcc	.+18     	; 0xb14 <__addsf3x+0x98>
 b02:	87 95       	ror	r24
 b04:	77 95       	ror	r23
 b06:	67 95       	ror	r22
 b08:	b7 95       	ror	r27
 b0a:	f7 95       	ror	r31
 b0c:	9e 3f       	cpi	r25, 0xFE	; 254
 b0e:	08 f0       	brcs	.+2      	; 0xb12 <__addsf3x+0x96>
 b10:	b3 cf       	rjmp	.-154    	; 0xa78 <__addsf3+0x1e>
 b12:	93 95       	inc	r25
 b14:	88 0f       	add	r24, r24
 b16:	08 f0       	brcs	.+2      	; 0xb1a <__addsf3x+0x9e>
 b18:	99 27       	eor	r25, r25
 b1a:	ee 0f       	add	r30, r30
 b1c:	97 95       	ror	r25
 b1e:	87 95       	ror	r24
 b20:	08 95       	ret

00000b22 <__fixsfsi>:
 b22:	04 d0       	rcall	.+8      	; 0xb2c <__fixunssfsi>
 b24:	68 94       	set
 b26:	b1 11       	cpse	r27, r1
 b28:	b5 c0       	rjmp	.+362    	; 0xc94 <__fp_szero>
 b2a:	08 95       	ret

00000b2c <__fixunssfsi>:
 b2c:	98 d0       	rcall	.+304    	; 0xc5e <__fp_splitA>
 b2e:	88 f0       	brcs	.+34     	; 0xb52 <__fixunssfsi+0x26>
 b30:	9f 57       	subi	r25, 0x7F	; 127
 b32:	90 f0       	brcs	.+36     	; 0xb58 <__fixunssfsi+0x2c>
 b34:	b9 2f       	mov	r27, r25
 b36:	99 27       	eor	r25, r25
 b38:	b7 51       	subi	r27, 0x17	; 23
 b3a:	a0 f0       	brcs	.+40     	; 0xb64 <__fixunssfsi+0x38>
 b3c:	d1 f0       	breq	.+52     	; 0xb72 <__fixunssfsi+0x46>
 b3e:	66 0f       	add	r22, r22
 b40:	77 1f       	adc	r23, r23
 b42:	88 1f       	adc	r24, r24
 b44:	99 1f       	adc	r25, r25
 b46:	1a f0       	brmi	.+6      	; 0xb4e <__fixunssfsi+0x22>
 b48:	ba 95       	dec	r27
 b4a:	c9 f7       	brne	.-14     	; 0xb3e <__fixunssfsi+0x12>
 b4c:	12 c0       	rjmp	.+36     	; 0xb72 <__fixunssfsi+0x46>
 b4e:	b1 30       	cpi	r27, 0x01	; 1
 b50:	81 f0       	breq	.+32     	; 0xb72 <__fixunssfsi+0x46>
 b52:	9f d0       	rcall	.+318    	; 0xc92 <__fp_zero>
 b54:	b1 e0       	ldi	r27, 0x01	; 1
 b56:	08 95       	ret
 b58:	9c c0       	rjmp	.+312    	; 0xc92 <__fp_zero>
 b5a:	67 2f       	mov	r22, r23
 b5c:	78 2f       	mov	r23, r24
 b5e:	88 27       	eor	r24, r24
 b60:	b8 5f       	subi	r27, 0xF8	; 248
 b62:	39 f0       	breq	.+14     	; 0xb72 <__fixunssfsi+0x46>
 b64:	b9 3f       	cpi	r27, 0xF9	; 249
 b66:	cc f3       	brlt	.-14     	; 0xb5a <__fixunssfsi+0x2e>
 b68:	86 95       	lsr	r24
 b6a:	77 95       	ror	r23
 b6c:	67 95       	ror	r22
 b6e:	b3 95       	inc	r27
 b70:	d9 f7       	brne	.-10     	; 0xb68 <__fixunssfsi+0x3c>
 b72:	3e f4       	brtc	.+14     	; 0xb82 <__fixunssfsi+0x56>
 b74:	90 95       	com	r25
 b76:	80 95       	com	r24
 b78:	70 95       	com	r23
 b7a:	61 95       	neg	r22
 b7c:	7f 4f       	sbci	r23, 0xFF	; 255
 b7e:	8f 4f       	sbci	r24, 0xFF	; 255
 b80:	9f 4f       	sbci	r25, 0xFF	; 255
 b82:	08 95       	ret

00000b84 <__floatunsisf>:
 b84:	e8 94       	clt
 b86:	09 c0       	rjmp	.+18     	; 0xb9a <__floatsisf+0x12>

00000b88 <__floatsisf>:
 b88:	97 fb       	bst	r25, 7
 b8a:	3e f4       	brtc	.+14     	; 0xb9a <__floatsisf+0x12>
 b8c:	90 95       	com	r25
 b8e:	80 95       	com	r24
 b90:	70 95       	com	r23
 b92:	61 95       	neg	r22
 b94:	7f 4f       	sbci	r23, 0xFF	; 255
 b96:	8f 4f       	sbci	r24, 0xFF	; 255
 b98:	9f 4f       	sbci	r25, 0xFF	; 255
 b9a:	99 23       	and	r25, r25
 b9c:	a9 f0       	breq	.+42     	; 0xbc8 <__floatsisf+0x40>
 b9e:	f9 2f       	mov	r31, r25
 ba0:	96 e9       	ldi	r25, 0x96	; 150
 ba2:	bb 27       	eor	r27, r27
 ba4:	93 95       	inc	r25
 ba6:	f6 95       	lsr	r31
 ba8:	87 95       	ror	r24
 baa:	77 95       	ror	r23
 bac:	67 95       	ror	r22
 bae:	b7 95       	ror	r27
 bb0:	f1 11       	cpse	r31, r1
 bb2:	f8 cf       	rjmp	.-16     	; 0xba4 <__floatsisf+0x1c>
 bb4:	fa f4       	brpl	.+62     	; 0xbf4 <__floatsisf+0x6c>
 bb6:	bb 0f       	add	r27, r27
 bb8:	11 f4       	brne	.+4      	; 0xbbe <__floatsisf+0x36>
 bba:	60 ff       	sbrs	r22, 0
 bbc:	1b c0       	rjmp	.+54     	; 0xbf4 <__floatsisf+0x6c>
 bbe:	6f 5f       	subi	r22, 0xFF	; 255
 bc0:	7f 4f       	sbci	r23, 0xFF	; 255
 bc2:	8f 4f       	sbci	r24, 0xFF	; 255
 bc4:	9f 4f       	sbci	r25, 0xFF	; 255
 bc6:	16 c0       	rjmp	.+44     	; 0xbf4 <__floatsisf+0x6c>
 bc8:	88 23       	and	r24, r24
 bca:	11 f0       	breq	.+4      	; 0xbd0 <__floatsisf+0x48>
 bcc:	96 e9       	ldi	r25, 0x96	; 150
 bce:	11 c0       	rjmp	.+34     	; 0xbf2 <__floatsisf+0x6a>
 bd0:	77 23       	and	r23, r23
 bd2:	21 f0       	breq	.+8      	; 0xbdc <__floatsisf+0x54>
 bd4:	9e e8       	ldi	r25, 0x8E	; 142
 bd6:	87 2f       	mov	r24, r23
 bd8:	76 2f       	mov	r23, r22
 bda:	05 c0       	rjmp	.+10     	; 0xbe6 <__floatsisf+0x5e>
 bdc:	66 23       	and	r22, r22
 bde:	71 f0       	breq	.+28     	; 0xbfc <__floatsisf+0x74>
 be0:	96 e8       	ldi	r25, 0x86	; 134
 be2:	86 2f       	mov	r24, r22
 be4:	70 e0       	ldi	r23, 0x00	; 0
 be6:	60 e0       	ldi	r22, 0x00	; 0
 be8:	2a f0       	brmi	.+10     	; 0xbf4 <__floatsisf+0x6c>
 bea:	9a 95       	dec	r25
 bec:	66 0f       	add	r22, r22
 bee:	77 1f       	adc	r23, r23
 bf0:	88 1f       	adc	r24, r24
 bf2:	da f7       	brpl	.-10     	; 0xbea <__floatsisf+0x62>
 bf4:	88 0f       	add	r24, r24
 bf6:	96 95       	lsr	r25
 bf8:	87 95       	ror	r24
 bfa:	97 f9       	bld	r25, 7
 bfc:	08 95       	ret

00000bfe <__fp_inf>:
 bfe:	97 f9       	bld	r25, 7
 c00:	9f 67       	ori	r25, 0x7F	; 127
 c02:	80 e8       	ldi	r24, 0x80	; 128
 c04:	70 e0       	ldi	r23, 0x00	; 0
 c06:	60 e0       	ldi	r22, 0x00	; 0
 c08:	08 95       	ret

00000c0a <__fp_nan>:
 c0a:	9f ef       	ldi	r25, 0xFF	; 255
 c0c:	80 ec       	ldi	r24, 0xC0	; 192
 c0e:	08 95       	ret

00000c10 <__fp_pscA>:
 c10:	00 24       	eor	r0, r0
 c12:	0a 94       	dec	r0
 c14:	16 16       	cp	r1, r22
 c16:	17 06       	cpc	r1, r23
 c18:	18 06       	cpc	r1, r24
 c1a:	09 06       	cpc	r0, r25
 c1c:	08 95       	ret

00000c1e <__fp_pscB>:
 c1e:	00 24       	eor	r0, r0
 c20:	0a 94       	dec	r0
 c22:	12 16       	cp	r1, r18
 c24:	13 06       	cpc	r1, r19
 c26:	14 06       	cpc	r1, r20
 c28:	05 06       	cpc	r0, r21
 c2a:	08 95       	ret

00000c2c <__fp_round>:
 c2c:	09 2e       	mov	r0, r25
 c2e:	03 94       	inc	r0
 c30:	00 0c       	add	r0, r0
 c32:	11 f4       	brne	.+4      	; 0xc38 <__fp_round+0xc>
 c34:	88 23       	and	r24, r24
 c36:	52 f0       	brmi	.+20     	; 0xc4c <__fp_round+0x20>
 c38:	bb 0f       	add	r27, r27
 c3a:	40 f4       	brcc	.+16     	; 0xc4c <__fp_round+0x20>
 c3c:	bf 2b       	or	r27, r31
 c3e:	11 f4       	brne	.+4      	; 0xc44 <__fp_round+0x18>
 c40:	60 ff       	sbrs	r22, 0
 c42:	04 c0       	rjmp	.+8      	; 0xc4c <__fp_round+0x20>
 c44:	6f 5f       	subi	r22, 0xFF	; 255
 c46:	7f 4f       	sbci	r23, 0xFF	; 255
 c48:	8f 4f       	sbci	r24, 0xFF	; 255
 c4a:	9f 4f       	sbci	r25, 0xFF	; 255
 c4c:	08 95       	ret

00000c4e <__fp_split3>:
 c4e:	57 fd       	sbrc	r21, 7
 c50:	90 58       	subi	r25, 0x80	; 128
 c52:	44 0f       	add	r20, r20
 c54:	55 1f       	adc	r21, r21
 c56:	59 f0       	breq	.+22     	; 0xc6e <__fp_splitA+0x10>
 c58:	5f 3f       	cpi	r21, 0xFF	; 255
 c5a:	71 f0       	breq	.+28     	; 0xc78 <__fp_splitA+0x1a>
 c5c:	47 95       	ror	r20

00000c5e <__fp_splitA>:
 c5e:	88 0f       	add	r24, r24
 c60:	97 fb       	bst	r25, 7
 c62:	99 1f       	adc	r25, r25
 c64:	61 f0       	breq	.+24     	; 0xc7e <__fp_splitA+0x20>
 c66:	9f 3f       	cpi	r25, 0xFF	; 255
 c68:	79 f0       	breq	.+30     	; 0xc88 <__fp_splitA+0x2a>
 c6a:	87 95       	ror	r24
 c6c:	08 95       	ret
 c6e:	12 16       	cp	r1, r18
 c70:	13 06       	cpc	r1, r19
 c72:	14 06       	cpc	r1, r20
 c74:	55 1f       	adc	r21, r21
 c76:	f2 cf       	rjmp	.-28     	; 0xc5c <__fp_split3+0xe>
 c78:	46 95       	lsr	r20
 c7a:	f1 df       	rcall	.-30     	; 0xc5e <__fp_splitA>
 c7c:	08 c0       	rjmp	.+16     	; 0xc8e <__fp_splitA+0x30>
 c7e:	16 16       	cp	r1, r22
 c80:	17 06       	cpc	r1, r23
 c82:	18 06       	cpc	r1, r24
 c84:	99 1f       	adc	r25, r25
 c86:	f1 cf       	rjmp	.-30     	; 0xc6a <__fp_splitA+0xc>
 c88:	86 95       	lsr	r24
 c8a:	71 05       	cpc	r23, r1
 c8c:	61 05       	cpc	r22, r1
 c8e:	08 94       	sec
 c90:	08 95       	ret

00000c92 <__fp_zero>:
 c92:	e8 94       	clt

00000c94 <__fp_szero>:
 c94:	bb 27       	eor	r27, r27
 c96:	66 27       	eor	r22, r22
 c98:	77 27       	eor	r23, r23
 c9a:	cb 01       	movw	r24, r22
 c9c:	97 f9       	bld	r25, 7
 c9e:	08 95       	ret

00000ca0 <__mulsf3>:
 ca0:	0b d0       	rcall	.+22     	; 0xcb8 <__mulsf3x>
 ca2:	c4 cf       	rjmp	.-120    	; 0xc2c <__fp_round>
 ca4:	b5 df       	rcall	.-150    	; 0xc10 <__fp_pscA>
 ca6:	28 f0       	brcs	.+10     	; 0xcb2 <__mulsf3+0x12>
 ca8:	ba df       	rcall	.-140    	; 0xc1e <__fp_pscB>
 caa:	18 f0       	brcs	.+6      	; 0xcb2 <__mulsf3+0x12>
 cac:	95 23       	and	r25, r21
 cae:	09 f0       	breq	.+2      	; 0xcb2 <__mulsf3+0x12>
 cb0:	a6 cf       	rjmp	.-180    	; 0xbfe <__fp_inf>
 cb2:	ab cf       	rjmp	.-170    	; 0xc0a <__fp_nan>
 cb4:	11 24       	eor	r1, r1
 cb6:	ee cf       	rjmp	.-36     	; 0xc94 <__fp_szero>

00000cb8 <__mulsf3x>:
 cb8:	ca df       	rcall	.-108    	; 0xc4e <__fp_split3>
 cba:	a0 f3       	brcs	.-24     	; 0xca4 <__mulsf3+0x4>

00000cbc <__mulsf3_pse>:
 cbc:	95 9f       	mul	r25, r21
 cbe:	d1 f3       	breq	.-12     	; 0xcb4 <__mulsf3+0x14>
 cc0:	95 0f       	add	r25, r21
 cc2:	50 e0       	ldi	r21, 0x00	; 0
 cc4:	55 1f       	adc	r21, r21
 cc6:	62 9f       	mul	r22, r18
 cc8:	f0 01       	movw	r30, r0
 cca:	72 9f       	mul	r23, r18
 ccc:	bb 27       	eor	r27, r27
 cce:	f0 0d       	add	r31, r0
 cd0:	b1 1d       	adc	r27, r1
 cd2:	63 9f       	mul	r22, r19
 cd4:	aa 27       	eor	r26, r26
 cd6:	f0 0d       	add	r31, r0
 cd8:	b1 1d       	adc	r27, r1
 cda:	aa 1f       	adc	r26, r26
 cdc:	64 9f       	mul	r22, r20
 cde:	66 27       	eor	r22, r22
 ce0:	b0 0d       	add	r27, r0
 ce2:	a1 1d       	adc	r26, r1
 ce4:	66 1f       	adc	r22, r22
 ce6:	82 9f       	mul	r24, r18
 ce8:	22 27       	eor	r18, r18
 cea:	b0 0d       	add	r27, r0
 cec:	a1 1d       	adc	r26, r1
 cee:	62 1f       	adc	r22, r18
 cf0:	73 9f       	mul	r23, r19
 cf2:	b0 0d       	add	r27, r0
 cf4:	a1 1d       	adc	r26, r1
 cf6:	62 1f       	adc	r22, r18
 cf8:	83 9f       	mul	r24, r19
 cfa:	a0 0d       	add	r26, r0
 cfc:	61 1d       	adc	r22, r1
 cfe:	22 1f       	adc	r18, r18
 d00:	74 9f       	mul	r23, r20
 d02:	33 27       	eor	r19, r19
 d04:	a0 0d       	add	r26, r0
 d06:	61 1d       	adc	r22, r1
 d08:	23 1f       	adc	r18, r19
 d0a:	84 9f       	mul	r24, r20
 d0c:	60 0d       	add	r22, r0
 d0e:	21 1d       	adc	r18, r1
 d10:	82 2f       	mov	r24, r18
 d12:	76 2f       	mov	r23, r22
 d14:	6a 2f       	mov	r22, r26
 d16:	11 24       	eor	r1, r1
 d18:	9f 57       	subi	r25, 0x7F	; 127
 d1a:	50 40       	sbci	r21, 0x00	; 0
 d1c:	8a f0       	brmi	.+34     	; 0xd40 <__mulsf3_pse+0x84>
 d1e:	e1 f0       	breq	.+56     	; 0xd58 <__mulsf3_pse+0x9c>
 d20:	88 23       	and	r24, r24
 d22:	4a f0       	brmi	.+18     	; 0xd36 <__mulsf3_pse+0x7a>
 d24:	ee 0f       	add	r30, r30
 d26:	ff 1f       	adc	r31, r31
 d28:	bb 1f       	adc	r27, r27
 d2a:	66 1f       	adc	r22, r22
 d2c:	77 1f       	adc	r23, r23
 d2e:	88 1f       	adc	r24, r24
 d30:	91 50       	subi	r25, 0x01	; 1
 d32:	50 40       	sbci	r21, 0x00	; 0
 d34:	a9 f7       	brne	.-22     	; 0xd20 <__mulsf3_pse+0x64>
 d36:	9e 3f       	cpi	r25, 0xFE	; 254
 d38:	51 05       	cpc	r21, r1
 d3a:	70 f0       	brcs	.+28     	; 0xd58 <__mulsf3_pse+0x9c>
 d3c:	60 cf       	rjmp	.-320    	; 0xbfe <__fp_inf>
 d3e:	aa cf       	rjmp	.-172    	; 0xc94 <__fp_szero>
 d40:	5f 3f       	cpi	r21, 0xFF	; 255
 d42:	ec f3       	brlt	.-6      	; 0xd3e <__mulsf3_pse+0x82>
 d44:	98 3e       	cpi	r25, 0xE8	; 232
 d46:	dc f3       	brlt	.-10     	; 0xd3e <__mulsf3_pse+0x82>
 d48:	86 95       	lsr	r24
 d4a:	77 95       	ror	r23
 d4c:	67 95       	ror	r22
 d4e:	b7 95       	ror	r27
 d50:	f7 95       	ror	r31
 d52:	e7 95       	ror	r30
 d54:	9f 5f       	subi	r25, 0xFF	; 255
 d56:	c1 f7       	brne	.-16     	; 0xd48 <__mulsf3_pse+0x8c>
 d58:	fe 2b       	or	r31, r30
 d5a:	88 0f       	add	r24, r24
 d5c:	91 1d       	adc	r25, r1
 d5e:	96 95       	lsr	r25
 d60:	87 95       	ror	r24
 d62:	97 f9       	bld	r25, 7
 d64:	08 95       	ret

00000d66 <__mulsi3>:
 d66:	62 9f       	mul	r22, r18
 d68:	d0 01       	movw	r26, r0
 d6a:	73 9f       	mul	r23, r19
 d6c:	f0 01       	movw	r30, r0
 d6e:	82 9f       	mul	r24, r18
 d70:	e0 0d       	add	r30, r0
 d72:	f1 1d       	adc	r31, r1
 d74:	64 9f       	mul	r22, r20
 d76:	e0 0d       	add	r30, r0
 d78:	f1 1d       	adc	r31, r1
 d7a:	92 9f       	mul	r25, r18
 d7c:	f0 0d       	add	r31, r0
 d7e:	83 9f       	mul	r24, r19
 d80:	f0 0d       	add	r31, r0
 d82:	74 9f       	mul	r23, r20
 d84:	f0 0d       	add	r31, r0
 d86:	65 9f       	mul	r22, r21
 d88:	f0 0d       	add	r31, r0
 d8a:	99 27       	eor	r25, r25
 d8c:	72 9f       	mul	r23, r18
 d8e:	b0 0d       	add	r27, r0
 d90:	e1 1d       	adc	r30, r1
 d92:	f9 1f       	adc	r31, r25
 d94:	63 9f       	mul	r22, r19
 d96:	b0 0d       	add	r27, r0
 d98:	e1 1d       	adc	r30, r1
 d9a:	f9 1f       	adc	r31, r25
 d9c:	bd 01       	movw	r22, r26
 d9e:	cf 01       	movw	r24, r30
 da0:	11 24       	eor	r1, r1
 da2:	08 95       	ret

00000da4 <__udivmodsi4>:
 da4:	a1 e2       	ldi	r26, 0x21	; 33
 da6:	1a 2e       	mov	r1, r26
 da8:	aa 1b       	sub	r26, r26
 daa:	bb 1b       	sub	r27, r27
 dac:	fd 01       	movw	r30, r26
 dae:	0d c0       	rjmp	.+26     	; 0xdca <__udivmodsi4_ep>

00000db0 <__udivmodsi4_loop>:
 db0:	aa 1f       	adc	r26, r26
 db2:	bb 1f       	adc	r27, r27
 db4:	ee 1f       	adc	r30, r30
 db6:	ff 1f       	adc	r31, r31
 db8:	a2 17       	cp	r26, r18
 dba:	b3 07       	cpc	r27, r19
 dbc:	e4 07       	cpc	r30, r20
 dbe:	f5 07       	cpc	r31, r21
 dc0:	20 f0       	brcs	.+8      	; 0xdca <__udivmodsi4_ep>
 dc2:	a2 1b       	sub	r26, r18
 dc4:	b3 0b       	sbc	r27, r19
 dc6:	e4 0b       	sbc	r30, r20
 dc8:	f5 0b       	sbc	r31, r21

00000dca <__udivmodsi4_ep>:
 dca:	66 1f       	adc	r22, r22
 dcc:	77 1f       	adc	r23, r23
 dce:	88 1f       	adc	r24, r24
 dd0:	99 1f       	adc	r25, r25
 dd2:	1a 94       	dec	r1
 dd4:	69 f7       	brne	.-38     	; 0xdb0 <__udivmodsi4_loop>
 dd6:	60 95       	com	r22
 dd8:	70 95       	com	r23
 dda:	80 95       	com	r24
 ddc:	90 95       	com	r25
 dde:	9b 01       	movw	r18, r22
 de0:	ac 01       	movw	r20, r24
 de2:	bd 01       	movw	r22, r26
 de4:	cf 01       	movw	r24, r30
 de6:	08 95       	ret

00000de8 <_exit>:
 de8:	f8 94       	cli

00000dea <__stop_program>:
 dea:	ff cf       	rjmp	.-2      	; 0xdea <__stop_program>
