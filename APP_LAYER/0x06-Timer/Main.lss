
Main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c76  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000015  00800060  00800060  00000cea  2**0
                  ALLOC
  2 .stab         00000d14  00000000  00000000  00000cec  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008a9  00000000  00000000  00001a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  000022a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000012a  00000000  00000000  00002349  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000002ba  00000000  00000000  00002473  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000015e  00000000  00000000  0000272d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000391  00000000  00000000  0000288b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00002c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000027b  00000000  00000000  00002cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000f9  00000000  00000000  00002f77  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003070  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	break;
	}
}

void EXTINT_voidDisable(u8 Copy_u8ExtIntNum)
{
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
{
	SET_BIT(SREG, SREG_I);
}
//disable interrupt
void GIE_voidGlobalInterruptDisable(void)
{
   4:	0c 94 2a 04 	jmp	0x854	; 0x854 <__vector_1>
   8:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <__vector_2>
   c:	0c 94 82 04 	jmp	0x904	; 0x904 <__vector_3>
  10:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__vector_4>
  14:	0c 94 a9 01 	jmp	0x352	; 0x352 <__vector_5>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 01 01 	jmp	0x202	; 0x202 <__vector_7>
  20:	0c 94 2b 01 	jmp	0x256	; 0x256 <__vector_8>
  24:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <__vector_9>
  28:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__vector_10>
  2c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a5 37       	cpi	r26, 0x75	; 117
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 74 03 	call	0x6e8	; 0x6e8 <main>
  74:	0c 94 39 06 	jmp	0xc72	; 0xc72 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <timer0_void_init>:
  7c:	83 b7       	in	r24, 0x33	; 51
  7e:	80 64       	ori	r24, 0x40	; 64
  80:	83 bf       	out	0x33, r24	; 51
  82:	83 b7       	in	r24, 0x33	; 51
  84:	88 60       	ori	r24, 0x08	; 8
  86:	83 bf       	out	0x33, r24	; 51
  88:	83 b7       	in	r24, 0x33	; 51
  8a:	8f 77       	andi	r24, 0x7F	; 127
  8c:	83 bf       	out	0x33, r24	; 51
  8e:	83 b7       	in	r24, 0x33	; 51
  90:	80 63       	ori	r24, 0x30	; 48
  92:	83 bf       	out	0x33, r24	; 51
  94:	83 b7       	in	r24, 0x33	; 51
  96:	88 7f       	andi	r24, 0xF8	; 248
  98:	85 60       	ori	r24, 0x05	; 5
  9a:	83 bf       	out	0x33, r24	; 51
  9c:	08 95       	ret

0000009e <TIMER0_voidSetPreload>:
  9e:	8c bf       	out	0x3c, r24	; 60
  a0:	62 bf       	out	0x32, r22	; 50
  a2:	08 95       	ret

000000a4 <timer0_void_off>:
  a4:	83 b7       	in	r24, 0x33	; 51
  a6:	88 7f       	andi	r24, 0xF8	; 248
  a8:	83 bf       	out	0x33, r24	; 51
  aa:	08 95       	ret

000000ac <Timer0_set_preLoadVal>:
  ac:	82 bf       	out	0x32, r24	; 50
  ae:	08 95       	ret

000000b0 <timer0_Interrupt_OverFlow_Enable>:
  b0:	89 b7       	in	r24, 0x39	; 57
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	89 bf       	out	0x39, r24	; 57
  b6:	08 95       	ret

000000b8 <timer0_Interrupt_CompMatch_Enable>:
  b8:	89 b7       	in	r24, 0x39	; 57
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	89 bf       	out	0x39, r24	; 57
  be:	08 95       	ret

000000c0 <timer0_Interrupt_OverFlow_Disable>:
  c0:	89 b7       	in	r24, 0x39	; 57
  c2:	8e 7f       	andi	r24, 0xFE	; 254
  c4:	89 bf       	out	0x39, r24	; 57
  c6:	08 95       	ret

000000c8 <timer0_Interrupt_CompMatch_Disable>:
  c8:	89 b7       	in	r24, 0x39	; 57
  ca:	8d 7f       	andi	r24, 0xFD	; 253
  cc:	89 bf       	out	0x39, r24	; 57
  ce:	08 95       	ret

000000d0 <set_OCR0Val>:
  d0:	8c bf       	out	0x3c, r24	; 60
  d2:	08 95       	ret

000000d4 <timer0_Interrupt_FlagClear>:
  d4:	88 b7       	in	r24, 0x38	; 56
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	88 bf       	out	0x38, r24	; 56
  da:	08 95       	ret

000000dc <timer0_Interrupt_CompMatch_FlagClear>:
  dc:	88 b7       	in	r24, 0x38	; 56
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	88 bf       	out	0x38, r24	; 56
  e2:	08 95       	ret

000000e4 <TIMER0_voidPWM>:
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	a0 e0       	ldi	r26, 0x00	; 0
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	bc 01       	movw	r22, r24
  ec:	cd 01       	movw	r24, r26
  ee:	0e 94 48 05 	call	0xa90	; 0xa90 <__floatunsisf>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	48 ec       	ldi	r20, 0xC8	; 200
  f8:	52 e4       	ldi	r21, 0x42	; 66
  fa:	0e 94 b4 04 	call	0x968	; 0x968 <__divsf3>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	4f e7       	ldi	r20, 0x7F	; 127
 104:	53 e4       	ldi	r21, 0x43	; 67
 106:	0e 94 d6 05 	call	0xbac	; 0xbac <__mulsf3>
 10a:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fixunssfsi>
 10e:	60 95       	com	r22
 110:	6c bf       	out	0x3c, r22	; 60
 112:	08 95       	ret

00000114 <setCallBack_OV_T0>:
 114:	90 93 63 00 	sts	0x0063, r25
 118:	80 93 62 00 	sts	0x0062, r24
 11c:	08 95       	ret

0000011e <setCallBack_CMP_T0>:
 11e:	90 93 61 00 	sts	0x0061, r25
 122:	80 93 60 00 	sts	0x0060, r24
 126:	08 95       	ret

00000128 <setCallBack_CMPA_T1>:
 128:	90 93 65 00 	sts	0x0065, r25
 12c:	80 93 64 00 	sts	0x0064, r24
 130:	08 95       	ret

00000132 <setCallBack_CMPB_T1>:
 132:	90 93 67 00 	sts	0x0067, r25
 136:	80 93 66 00 	sts	0x0066, r24
 13a:	08 95       	ret

0000013c <setCallBack_OC_T1>:
 13c:	90 93 69 00 	sts	0x0069, r25
 140:	80 93 68 00 	sts	0x0068, r24
 144:	08 95       	ret

00000146 <setCallBack_OV_T2>:
 146:	90 93 6d 00 	sts	0x006D, r25
 14a:	80 93 6c 00 	sts	0x006C, r24
 14e:	08 95       	ret

00000150 <setCallBack_CMP_T2>:
 150:	90 93 6b 00 	sts	0x006B, r25
 154:	80 93 6a 00 	sts	0x006A, r24
 158:	08 95       	ret

0000015a <__vector_10>:
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
 164:	2f 93       	push	r18
 166:	3f 93       	push	r19
 168:	4f 93       	push	r20
 16a:	5f 93       	push	r21
 16c:	6f 93       	push	r22
 16e:	7f 93       	push	r23
 170:	8f 93       	push	r24
 172:	9f 93       	push	r25
 174:	af 93       	push	r26
 176:	bf 93       	push	r27
 178:	ef 93       	push	r30
 17a:	ff 93       	push	r31
 17c:	e0 91 60 00 	lds	r30, 0x0060
 180:	f0 91 61 00 	lds	r31, 0x0061
 184:	09 95       	icall
 186:	88 b7       	in	r24, 0x38	; 56
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	88 bf       	out	0x38, r24	; 56
 18c:	ff 91       	pop	r31
 18e:	ef 91       	pop	r30
 190:	bf 91       	pop	r27
 192:	af 91       	pop	r26
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	7f 91       	pop	r23
 19a:	6f 91       	pop	r22
 19c:	5f 91       	pop	r21
 19e:	4f 91       	pop	r20
 1a0:	3f 91       	pop	r19
 1a2:	2f 91       	pop	r18
 1a4:	0f 90       	pop	r0
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	0f 90       	pop	r0
 1aa:	1f 90       	pop	r1
 1ac:	18 95       	reti

000001ae <__vector_11>:
 1ae:	1f 92       	push	r1
 1b0:	0f 92       	push	r0
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	0f 92       	push	r0
 1b6:	11 24       	eor	r1, r1
 1b8:	2f 93       	push	r18
 1ba:	3f 93       	push	r19
 1bc:	4f 93       	push	r20
 1be:	5f 93       	push	r21
 1c0:	6f 93       	push	r22
 1c2:	7f 93       	push	r23
 1c4:	8f 93       	push	r24
 1c6:	9f 93       	push	r25
 1c8:	af 93       	push	r26
 1ca:	bf 93       	push	r27
 1cc:	ef 93       	push	r30
 1ce:	ff 93       	push	r31
 1d0:	e0 91 62 00 	lds	r30, 0x0062
 1d4:	f0 91 63 00 	lds	r31, 0x0063
 1d8:	09 95       	icall
 1da:	88 b7       	in	r24, 0x38	; 56
 1dc:	81 60       	ori	r24, 0x01	; 1
 1de:	88 bf       	out	0x38, r24	; 56
 1e0:	ff 91       	pop	r31
 1e2:	ef 91       	pop	r30
 1e4:	bf 91       	pop	r27
 1e6:	af 91       	pop	r26
 1e8:	9f 91       	pop	r25
 1ea:	8f 91       	pop	r24
 1ec:	7f 91       	pop	r23
 1ee:	6f 91       	pop	r22
 1f0:	5f 91       	pop	r21
 1f2:	4f 91       	pop	r20
 1f4:	3f 91       	pop	r19
 1f6:	2f 91       	pop	r18
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

00000202 <__vector_7>:
 202:	1f 92       	push	r1
 204:	0f 92       	push	r0
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	0f 92       	push	r0
 20a:	11 24       	eor	r1, r1
 20c:	2f 93       	push	r18
 20e:	3f 93       	push	r19
 210:	4f 93       	push	r20
 212:	5f 93       	push	r21
 214:	6f 93       	push	r22
 216:	7f 93       	push	r23
 218:	8f 93       	push	r24
 21a:	9f 93       	push	r25
 21c:	af 93       	push	r26
 21e:	bf 93       	push	r27
 220:	ef 93       	push	r30
 222:	ff 93       	push	r31
 224:	e0 91 64 00 	lds	r30, 0x0064
 228:	f0 91 65 00 	lds	r31, 0x0065
 22c:	09 95       	icall
 22e:	88 b7       	in	r24, 0x38	; 56
 230:	80 61       	ori	r24, 0x10	; 16
 232:	88 bf       	out	0x38, r24	; 56
 234:	ff 91       	pop	r31
 236:	ef 91       	pop	r30
 238:	bf 91       	pop	r27
 23a:	af 91       	pop	r26
 23c:	9f 91       	pop	r25
 23e:	8f 91       	pop	r24
 240:	7f 91       	pop	r23
 242:	6f 91       	pop	r22
 244:	5f 91       	pop	r21
 246:	4f 91       	pop	r20
 248:	3f 91       	pop	r19
 24a:	2f 91       	pop	r18
 24c:	0f 90       	pop	r0
 24e:	0f be       	out	0x3f, r0	; 63
 250:	0f 90       	pop	r0
 252:	1f 90       	pop	r1
 254:	18 95       	reti

00000256 <__vector_8>:
 256:	1f 92       	push	r1
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	2f 93       	push	r18
 262:	3f 93       	push	r19
 264:	4f 93       	push	r20
 266:	5f 93       	push	r21
 268:	6f 93       	push	r22
 26a:	7f 93       	push	r23
 26c:	8f 93       	push	r24
 26e:	9f 93       	push	r25
 270:	af 93       	push	r26
 272:	bf 93       	push	r27
 274:	ef 93       	push	r30
 276:	ff 93       	push	r31
 278:	e0 91 66 00 	lds	r30, 0x0066
 27c:	f0 91 67 00 	lds	r31, 0x0067
 280:	09 95       	icall
 282:	88 b7       	in	r24, 0x38	; 56
 284:	88 60       	ori	r24, 0x08	; 8
 286:	88 bf       	out	0x38, r24	; 56
 288:	ff 91       	pop	r31
 28a:	ef 91       	pop	r30
 28c:	bf 91       	pop	r27
 28e:	af 91       	pop	r26
 290:	9f 91       	pop	r25
 292:	8f 91       	pop	r24
 294:	7f 91       	pop	r23
 296:	6f 91       	pop	r22
 298:	5f 91       	pop	r21
 29a:	4f 91       	pop	r20
 29c:	3f 91       	pop	r19
 29e:	2f 91       	pop	r18
 2a0:	0f 90       	pop	r0
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	0f 90       	pop	r0
 2a6:	1f 90       	pop	r1
 2a8:	18 95       	reti

000002aa <__vector_9>:
 2aa:	1f 92       	push	r1
 2ac:	0f 92       	push	r0
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	0f 92       	push	r0
 2b2:	11 24       	eor	r1, r1
 2b4:	2f 93       	push	r18
 2b6:	3f 93       	push	r19
 2b8:	4f 93       	push	r20
 2ba:	5f 93       	push	r21
 2bc:	6f 93       	push	r22
 2be:	7f 93       	push	r23
 2c0:	8f 93       	push	r24
 2c2:	9f 93       	push	r25
 2c4:	af 93       	push	r26
 2c6:	bf 93       	push	r27
 2c8:	ef 93       	push	r30
 2ca:	ff 93       	push	r31
 2cc:	e0 91 6c 00 	lds	r30, 0x006C
 2d0:	f0 91 6d 00 	lds	r31, 0x006D
 2d4:	09 95       	icall
 2d6:	88 b7       	in	r24, 0x38	; 56
 2d8:	84 60       	ori	r24, 0x04	; 4
 2da:	88 bf       	out	0x38, r24	; 56
 2dc:	ff 91       	pop	r31
 2de:	ef 91       	pop	r30
 2e0:	bf 91       	pop	r27
 2e2:	af 91       	pop	r26
 2e4:	9f 91       	pop	r25
 2e6:	8f 91       	pop	r24
 2e8:	7f 91       	pop	r23
 2ea:	6f 91       	pop	r22
 2ec:	5f 91       	pop	r21
 2ee:	4f 91       	pop	r20
 2f0:	3f 91       	pop	r19
 2f2:	2f 91       	pop	r18
 2f4:	0f 90       	pop	r0
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	0f 90       	pop	r0
 2fa:	1f 90       	pop	r1
 2fc:	18 95       	reti

000002fe <__vector_4>:
 2fe:	1f 92       	push	r1
 300:	0f 92       	push	r0
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	0f 92       	push	r0
 306:	11 24       	eor	r1, r1
 308:	2f 93       	push	r18
 30a:	3f 93       	push	r19
 30c:	4f 93       	push	r20
 30e:	5f 93       	push	r21
 310:	6f 93       	push	r22
 312:	7f 93       	push	r23
 314:	8f 93       	push	r24
 316:	9f 93       	push	r25
 318:	af 93       	push	r26
 31a:	bf 93       	push	r27
 31c:	ef 93       	push	r30
 31e:	ff 93       	push	r31
 320:	e0 91 6a 00 	lds	r30, 0x006A
 324:	f0 91 6b 00 	lds	r31, 0x006B
 328:	09 95       	icall
 32a:	88 b7       	in	r24, 0x38	; 56
 32c:	80 68       	ori	r24, 0x80	; 128
 32e:	88 bf       	out	0x38, r24	; 56
 330:	ff 91       	pop	r31
 332:	ef 91       	pop	r30
 334:	bf 91       	pop	r27
 336:	af 91       	pop	r26
 338:	9f 91       	pop	r25
 33a:	8f 91       	pop	r24
 33c:	7f 91       	pop	r23
 33e:	6f 91       	pop	r22
 340:	5f 91       	pop	r21
 342:	4f 91       	pop	r20
 344:	3f 91       	pop	r19
 346:	2f 91       	pop	r18
 348:	0f 90       	pop	r0
 34a:	0f be       	out	0x3f, r0	; 63
 34c:	0f 90       	pop	r0
 34e:	1f 90       	pop	r1
 350:	18 95       	reti

00000352 <__vector_5>:
 352:	1f 92       	push	r1
 354:	0f 92       	push	r0
 356:	0f b6       	in	r0, 0x3f	; 63
 358:	0f 92       	push	r0
 35a:	11 24       	eor	r1, r1
 35c:	2f 93       	push	r18
 35e:	3f 93       	push	r19
 360:	4f 93       	push	r20
 362:	5f 93       	push	r21
 364:	6f 93       	push	r22
 366:	7f 93       	push	r23
 368:	8f 93       	push	r24
 36a:	9f 93       	push	r25
 36c:	af 93       	push	r26
 36e:	bf 93       	push	r27
 370:	ef 93       	push	r30
 372:	ff 93       	push	r31
 374:	e0 91 6c 00 	lds	r30, 0x006C
 378:	f0 91 6d 00 	lds	r31, 0x006D
 37c:	09 95       	icall
 37e:	88 b7       	in	r24, 0x38	; 56
 380:	80 64       	ori	r24, 0x40	; 64
 382:	88 bf       	out	0x38, r24	; 56
 384:	ff 91       	pop	r31
 386:	ef 91       	pop	r30
 388:	bf 91       	pop	r27
 38a:	af 91       	pop	r26
 38c:	9f 91       	pop	r25
 38e:	8f 91       	pop	r24
 390:	7f 91       	pop	r23
 392:	6f 91       	pop	r22
 394:	5f 91       	pop	r21
 396:	4f 91       	pop	r20
 398:	3f 91       	pop	r19
 39a:	2f 91       	pop	r18
 39c:	0f 90       	pop	r0
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	0f 90       	pop	r0
 3a2:	1f 90       	pop	r1
 3a4:	18 95       	reti

000003a6 <DIO_voidSetPinValue>:
 3a6:	84 30       	cpi	r24, 0x04	; 4
 3a8:	08 f0       	brcs	.+2      	; 0x3ac <DIO_voidSetPinValue+0x6>
 3aa:	7f c0       	rjmp	.+254    	; 0x4aa <DIO_voidSetPinValue+0x104>
 3ac:	68 30       	cpi	r22, 0x08	; 8
 3ae:	08 f0       	brcs	.+2      	; 0x3b2 <DIO_voidSetPinValue+0xc>
 3b0:	7c c0       	rjmp	.+248    	; 0x4aa <DIO_voidSetPinValue+0x104>
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	31 f1       	breq	.+76     	; 0x402 <DIO_voidSetPinValue+0x5c>
 3b6:	81 30       	cpi	r24, 0x01	; 1
 3b8:	38 f0       	brcs	.+14     	; 0x3c8 <DIO_voidSetPinValue+0x22>
 3ba:	82 30       	cpi	r24, 0x02	; 2
 3bc:	09 f4       	brne	.+2      	; 0x3c0 <DIO_voidSetPinValue+0x1a>
 3be:	3e c0       	rjmp	.+124    	; 0x43c <DIO_voidSetPinValue+0x96>
 3c0:	83 30       	cpi	r24, 0x03	; 3
 3c2:	09 f0       	breq	.+2      	; 0x3c6 <DIO_voidSetPinValue+0x20>
 3c4:	72 c0       	rjmp	.+228    	; 0x4aa <DIO_voidSetPinValue+0x104>
 3c6:	56 c0       	rjmp	.+172    	; 0x474 <DIO_voidSetPinValue+0xce>
 3c8:	44 23       	and	r20, r20
 3ca:	21 f0       	breq	.+8      	; 0x3d4 <DIO_voidSetPinValue+0x2e>
 3cc:	41 30       	cpi	r20, 0x01	; 1
 3ce:	09 f0       	breq	.+2      	; 0x3d2 <DIO_voidSetPinValue+0x2c>
 3d0:	6c c0       	rjmp	.+216    	; 0x4aa <DIO_voidSetPinValue+0x104>
 3d2:	0c c0       	rjmp	.+24     	; 0x3ec <DIO_voidSetPinValue+0x46>
 3d4:	2b b3       	in	r18, 0x1b	; 27
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_voidSetPinValue+0x3a>
 3dc:	88 0f       	add	r24, r24
 3de:	99 1f       	adc	r25, r25
 3e0:	6a 95       	dec	r22
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_voidSetPinValue+0x36>
 3e4:	80 95       	com	r24
 3e6:	82 23       	and	r24, r18
 3e8:	8b bb       	out	0x1b, r24	; 27
 3ea:	08 95       	ret
 3ec:	2b b3       	in	r18, 0x1b	; 27
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <DIO_voidSetPinValue+0x52>
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	6a 95       	dec	r22
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <DIO_voidSetPinValue+0x4e>
 3fc:	28 2b       	or	r18, r24
 3fe:	2b bb       	out	0x1b, r18	; 27
 400:	08 95       	ret
 402:	44 23       	and	r20, r20
 404:	21 f0       	breq	.+8      	; 0x40e <DIO_voidSetPinValue+0x68>
 406:	41 30       	cpi	r20, 0x01	; 1
 408:	09 f0       	breq	.+2      	; 0x40c <DIO_voidSetPinValue+0x66>
 40a:	4f c0       	rjmp	.+158    	; 0x4aa <DIO_voidSetPinValue+0x104>
 40c:	0c c0       	rjmp	.+24     	; 0x426 <DIO_voidSetPinValue+0x80>
 40e:	28 b3       	in	r18, 0x18	; 24
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 c0       	rjmp	.+4      	; 0x41a <DIO_voidSetPinValue+0x74>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	6a 95       	dec	r22
 41c:	e2 f7       	brpl	.-8      	; 0x416 <DIO_voidSetPinValue+0x70>
 41e:	80 95       	com	r24
 420:	82 23       	and	r24, r18
 422:	88 bb       	out	0x18, r24	; 24
 424:	08 95       	ret
 426:	28 b3       	in	r18, 0x18	; 24
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <DIO_voidSetPinValue+0x8c>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	6a 95       	dec	r22
 434:	e2 f7       	brpl	.-8      	; 0x42e <DIO_voidSetPinValue+0x88>
 436:	28 2b       	or	r18, r24
 438:	28 bb       	out	0x18, r18	; 24
 43a:	08 95       	ret
 43c:	44 23       	and	r20, r20
 43e:	19 f0       	breq	.+6      	; 0x446 <DIO_voidSetPinValue+0xa0>
 440:	41 30       	cpi	r20, 0x01	; 1
 442:	99 f5       	brne	.+102    	; 0x4aa <DIO_voidSetPinValue+0x104>
 444:	0c c0       	rjmp	.+24     	; 0x45e <DIO_voidSetPinValue+0xb8>
 446:	25 b3       	in	r18, 0x15	; 21
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	02 c0       	rjmp	.+4      	; 0x452 <DIO_voidSetPinValue+0xac>
 44e:	88 0f       	add	r24, r24
 450:	99 1f       	adc	r25, r25
 452:	6a 95       	dec	r22
 454:	e2 f7       	brpl	.-8      	; 0x44e <DIO_voidSetPinValue+0xa8>
 456:	80 95       	com	r24
 458:	82 23       	and	r24, r18
 45a:	85 bb       	out	0x15, r24	; 21
 45c:	08 95       	ret
 45e:	25 b3       	in	r18, 0x15	; 21
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <DIO_voidSetPinValue+0xc4>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	6a 95       	dec	r22
 46c:	e2 f7       	brpl	.-8      	; 0x466 <DIO_voidSetPinValue+0xc0>
 46e:	28 2b       	or	r18, r24
 470:	25 bb       	out	0x15, r18	; 21
 472:	08 95       	ret
 474:	44 23       	and	r20, r20
 476:	19 f0       	breq	.+6      	; 0x47e <DIO_voidSetPinValue+0xd8>
 478:	41 30       	cpi	r20, 0x01	; 1
 47a:	b9 f4       	brne	.+46     	; 0x4aa <DIO_voidSetPinValue+0x104>
 47c:	0c c0       	rjmp	.+24     	; 0x496 <DIO_voidSetPinValue+0xf0>
 47e:	22 b3       	in	r18, 0x12	; 18
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	02 c0       	rjmp	.+4      	; 0x48a <DIO_voidSetPinValue+0xe4>
 486:	88 0f       	add	r24, r24
 488:	99 1f       	adc	r25, r25
 48a:	6a 95       	dec	r22
 48c:	e2 f7       	brpl	.-8      	; 0x486 <DIO_voidSetPinValue+0xe0>
 48e:	80 95       	com	r24
 490:	82 23       	and	r24, r18
 492:	82 bb       	out	0x12, r24	; 18
 494:	08 95       	ret
 496:	22 b3       	in	r18, 0x12	; 18
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <DIO_voidSetPinValue+0xfc>
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	6a 95       	dec	r22
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <DIO_voidSetPinValue+0xf8>
 4a6:	28 2b       	or	r18, r24
 4a8:	22 bb       	out	0x12, r18	; 18
 4aa:	08 95       	ret

000004ac <DIO_voidTogglePinValue>:
 4ac:	84 30       	cpi	r24, 0x04	; 4
 4ae:	00 f5       	brcc	.+64     	; 0x4f0 <DIO_voidTogglePinValue+0x44>
 4b0:	68 30       	cpi	r22, 0x08	; 8
 4b2:	f0 f4       	brcc	.+60     	; 0x4f0 <DIO_voidTogglePinValue+0x44>
 4b4:	81 30       	cpi	r24, 0x01	; 1
 4b6:	39 f0       	breq	.+14     	; 0x4c6 <DIO_voidTogglePinValue+0x1a>
 4b8:	81 30       	cpi	r24, 0x01	; 1
 4ba:	28 f0       	brcs	.+10     	; 0x4c6 <DIO_voidTogglePinValue+0x1a>
 4bc:	82 30       	cpi	r24, 0x02	; 2
 4be:	19 f0       	breq	.+6      	; 0x4c6 <DIO_voidTogglePinValue+0x1a>
 4c0:	83 30       	cpi	r24, 0x03	; 3
 4c2:	b1 f4       	brne	.+44     	; 0x4f0 <DIO_voidTogglePinValue+0x44>
 4c4:	0b c0       	rjmp	.+22     	; 0x4dc <DIO_voidTogglePinValue+0x30>
 4c6:	28 b3       	in	r18, 0x18	; 24
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <DIO_voidTogglePinValue+0x26>
 4ce:	88 0f       	add	r24, r24
 4d0:	99 1f       	adc	r25, r25
 4d2:	6a 95       	dec	r22
 4d4:	e2 f7       	brpl	.-8      	; 0x4ce <DIO_voidTogglePinValue+0x22>
 4d6:	28 27       	eor	r18, r24
 4d8:	28 bb       	out	0x18, r18	; 24
 4da:	08 95       	ret
 4dc:	28 b3       	in	r18, 0x18	; 24
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <DIO_voidTogglePinValue+0x3c>
 4e4:	88 0f       	add	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	6a 95       	dec	r22
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <DIO_voidTogglePinValue+0x38>
 4ec:	28 27       	eor	r18, r24
 4ee:	28 bb       	out	0x18, r18	; 24
 4f0:	08 95       	ret

000004f2 <DIO_voidSetPinDirection>:
 4f2:	84 30       	cpi	r24, 0x04	; 4
 4f4:	08 f0       	brcs	.+2      	; 0x4f8 <DIO_voidSetPinDirection+0x6>
 4f6:	7f c0       	rjmp	.+254    	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 4f8:	68 30       	cpi	r22, 0x08	; 8
 4fa:	08 f0       	brcs	.+2      	; 0x4fe <DIO_voidSetPinDirection+0xc>
 4fc:	7c c0       	rjmp	.+248    	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 4fe:	81 30       	cpi	r24, 0x01	; 1
 500:	31 f1       	breq	.+76     	; 0x54e <DIO_voidSetPinDirection+0x5c>
 502:	81 30       	cpi	r24, 0x01	; 1
 504:	38 f0       	brcs	.+14     	; 0x514 <DIO_voidSetPinDirection+0x22>
 506:	82 30       	cpi	r24, 0x02	; 2
 508:	09 f4       	brne	.+2      	; 0x50c <DIO_voidSetPinDirection+0x1a>
 50a:	3e c0       	rjmp	.+124    	; 0x588 <DIO_voidSetPinDirection+0x96>
 50c:	83 30       	cpi	r24, 0x03	; 3
 50e:	09 f0       	breq	.+2      	; 0x512 <DIO_voidSetPinDirection+0x20>
 510:	72 c0       	rjmp	.+228    	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 512:	56 c0       	rjmp	.+172    	; 0x5c0 <DIO_voidSetPinDirection+0xce>
 514:	44 23       	and	r20, r20
 516:	21 f0       	breq	.+8      	; 0x520 <DIO_voidSetPinDirection+0x2e>
 518:	41 30       	cpi	r20, 0x01	; 1
 51a:	09 f0       	breq	.+2      	; 0x51e <DIO_voidSetPinDirection+0x2c>
 51c:	6c c0       	rjmp	.+216    	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 51e:	0c c0       	rjmp	.+24     	; 0x538 <DIO_voidSetPinDirection+0x46>
 520:	2a b3       	in	r18, 0x1a	; 26
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	02 c0       	rjmp	.+4      	; 0x52c <DIO_voidSetPinDirection+0x3a>
 528:	88 0f       	add	r24, r24
 52a:	99 1f       	adc	r25, r25
 52c:	6a 95       	dec	r22
 52e:	e2 f7       	brpl	.-8      	; 0x528 <DIO_voidSetPinDirection+0x36>
 530:	80 95       	com	r24
 532:	82 23       	and	r24, r18
 534:	8a bb       	out	0x1a, r24	; 26
 536:	08 95       	ret
 538:	2a b3       	in	r18, 0x1a	; 26
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <DIO_voidSetPinDirection+0x52>
 540:	88 0f       	add	r24, r24
 542:	99 1f       	adc	r25, r25
 544:	6a 95       	dec	r22
 546:	e2 f7       	brpl	.-8      	; 0x540 <DIO_voidSetPinDirection+0x4e>
 548:	28 2b       	or	r18, r24
 54a:	2a bb       	out	0x1a, r18	; 26
 54c:	08 95       	ret
 54e:	44 23       	and	r20, r20
 550:	21 f0       	breq	.+8      	; 0x55a <DIO_voidSetPinDirection+0x68>
 552:	41 30       	cpi	r20, 0x01	; 1
 554:	09 f0       	breq	.+2      	; 0x558 <DIO_voidSetPinDirection+0x66>
 556:	4f c0       	rjmp	.+158    	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 558:	0c c0       	rjmp	.+24     	; 0x572 <DIO_voidSetPinDirection+0x80>
 55a:	27 b3       	in	r18, 0x17	; 23
 55c:	81 e0       	ldi	r24, 0x01	; 1
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	02 c0       	rjmp	.+4      	; 0x566 <DIO_voidSetPinDirection+0x74>
 562:	88 0f       	add	r24, r24
 564:	99 1f       	adc	r25, r25
 566:	6a 95       	dec	r22
 568:	e2 f7       	brpl	.-8      	; 0x562 <DIO_voidSetPinDirection+0x70>
 56a:	80 95       	com	r24
 56c:	82 23       	and	r24, r18
 56e:	87 bb       	out	0x17, r24	; 23
 570:	08 95       	ret
 572:	27 b3       	in	r18, 0x17	; 23
 574:	81 e0       	ldi	r24, 0x01	; 1
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	02 c0       	rjmp	.+4      	; 0x57e <DIO_voidSetPinDirection+0x8c>
 57a:	88 0f       	add	r24, r24
 57c:	99 1f       	adc	r25, r25
 57e:	6a 95       	dec	r22
 580:	e2 f7       	brpl	.-8      	; 0x57a <DIO_voidSetPinDirection+0x88>
 582:	28 2b       	or	r18, r24
 584:	27 bb       	out	0x17, r18	; 23
 586:	08 95       	ret
 588:	44 23       	and	r20, r20
 58a:	19 f0       	breq	.+6      	; 0x592 <DIO_voidSetPinDirection+0xa0>
 58c:	41 30       	cpi	r20, 0x01	; 1
 58e:	99 f5       	brne	.+102    	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 590:	0c c0       	rjmp	.+24     	; 0x5aa <DIO_voidSetPinDirection+0xb8>
 592:	24 b3       	in	r18, 0x14	; 20
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	02 c0       	rjmp	.+4      	; 0x59e <DIO_voidSetPinDirection+0xac>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	6a 95       	dec	r22
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <DIO_voidSetPinDirection+0xa8>
 5a2:	80 95       	com	r24
 5a4:	82 23       	and	r24, r18
 5a6:	84 bb       	out	0x14, r24	; 20
 5a8:	08 95       	ret
 5aa:	24 b3       	in	r18, 0x14	; 20
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <DIO_voidSetPinDirection+0xc4>
 5b2:	88 0f       	add	r24, r24
 5b4:	99 1f       	adc	r25, r25
 5b6:	6a 95       	dec	r22
 5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <DIO_voidSetPinDirection+0xc0>
 5ba:	28 2b       	or	r18, r24
 5bc:	24 bb       	out	0x14, r18	; 20
 5be:	08 95       	ret
 5c0:	44 23       	and	r20, r20
 5c2:	19 f0       	breq	.+6      	; 0x5ca <DIO_voidSetPinDirection+0xd8>
 5c4:	41 30       	cpi	r20, 0x01	; 1
 5c6:	b9 f4       	brne	.+46     	; 0x5f6 <DIO_voidSetPinDirection+0x104>
 5c8:	0c c0       	rjmp	.+24     	; 0x5e2 <DIO_voidSetPinDirection+0xf0>
 5ca:	21 b3       	in	r18, 0x11	; 17
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <DIO_voidSetPinDirection+0xe4>
 5d2:	88 0f       	add	r24, r24
 5d4:	99 1f       	adc	r25, r25
 5d6:	6a 95       	dec	r22
 5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <DIO_voidSetPinDirection+0xe0>
 5da:	80 95       	com	r24
 5dc:	82 23       	and	r24, r18
 5de:	81 bb       	out	0x11, r24	; 17
 5e0:	08 95       	ret
 5e2:	21 b3       	in	r18, 0x11	; 17
 5e4:	81 e0       	ldi	r24, 0x01	; 1
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <DIO_voidSetPinDirection+0xfc>
 5ea:	88 0f       	add	r24, r24
 5ec:	99 1f       	adc	r25, r25
 5ee:	6a 95       	dec	r22
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <DIO_voidSetPinDirection+0xf8>
 5f2:	28 2b       	or	r18, r24
 5f4:	21 bb       	out	0x11, r18	; 17
 5f6:	08 95       	ret

000005f8 <DIO_voidGetPinValue>:
 5f8:	84 30       	cpi	r24, 0x04	; 4
 5fa:	d0 f4       	brcc	.+52     	; 0x630 <DIO_voidGetPinValue+0x38>
 5fc:	68 30       	cpi	r22, 0x08	; 8
 5fe:	c0 f4       	brcc	.+48     	; 0x630 <DIO_voidGetPinValue+0x38>
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	49 f0       	breq	.+18     	; 0x616 <DIO_voidGetPinValue+0x1e>
 604:	81 30       	cpi	r24, 0x01	; 1
 606:	28 f0       	brcs	.+10     	; 0x612 <DIO_voidGetPinValue+0x1a>
 608:	82 30       	cpi	r24, 0x02	; 2
 60a:	39 f0       	breq	.+14     	; 0x61a <DIO_voidGetPinValue+0x22>
 60c:	83 30       	cpi	r24, 0x03	; 3
 60e:	81 f4       	brne	.+32     	; 0x630 <DIO_voidGetPinValue+0x38>
 610:	06 c0       	rjmp	.+12     	; 0x61e <DIO_voidGetPinValue+0x26>
 612:	89 b3       	in	r24, 0x19	; 25
 614:	05 c0       	rjmp	.+10     	; 0x620 <DIO_voidGetPinValue+0x28>
 616:	86 b3       	in	r24, 0x16	; 22
 618:	03 c0       	rjmp	.+6      	; 0x620 <DIO_voidGetPinValue+0x28>
 61a:	83 b3       	in	r24, 0x13	; 19
 61c:	01 c0       	rjmp	.+2      	; 0x620 <DIO_voidGetPinValue+0x28>
 61e:	80 b3       	in	r24, 0x10	; 16
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_voidGetPinValue+0x30>
 624:	95 95       	asr	r25
 626:	87 95       	ror	r24
 628:	6a 95       	dec	r22
 62a:	e2 f7       	brpl	.-8      	; 0x624 <DIO_voidGetPinValue+0x2c>
 62c:	81 70       	andi	r24, 0x01	; 1
 62e:	08 95       	ret
 630:	85 e0       	ldi	r24, 0x05	; 5
 632:	08 95       	ret

00000634 <DIO_voidSetPortValue>:
 634:	84 30       	cpi	r24, 0x04	; 4
 636:	80 f4       	brcc	.+32     	; 0x658 <DIO_voidSetPortValue+0x24>
 638:	81 30       	cpi	r24, 0x01	; 1
 63a:	49 f0       	breq	.+18     	; 0x64e <DIO_voidSetPortValue+0x1a>
 63c:	81 30       	cpi	r24, 0x01	; 1
 63e:	28 f0       	brcs	.+10     	; 0x64a <DIO_voidSetPortValue+0x16>
 640:	82 30       	cpi	r24, 0x02	; 2
 642:	39 f0       	breq	.+14     	; 0x652 <DIO_voidSetPortValue+0x1e>
 644:	83 30       	cpi	r24, 0x03	; 3
 646:	41 f4       	brne	.+16     	; 0x658 <DIO_voidSetPortValue+0x24>
 648:	06 c0       	rjmp	.+12     	; 0x656 <DIO_voidSetPortValue+0x22>
 64a:	6b bb       	out	0x1b, r22	; 27
 64c:	08 95       	ret
 64e:	68 bb       	out	0x18, r22	; 24
 650:	08 95       	ret
 652:	65 bb       	out	0x15, r22	; 21
 654:	08 95       	ret
 656:	62 bb       	out	0x12, r22	; 18
 658:	08 95       	ret

0000065a <DIO_voidSetPortDirection>:
 65a:	84 30       	cpi	r24, 0x04	; 4
 65c:	80 f4       	brcc	.+32     	; 0x67e <DIO_voidSetPortDirection+0x24>
 65e:	81 30       	cpi	r24, 0x01	; 1
 660:	49 f0       	breq	.+18     	; 0x674 <DIO_voidSetPortDirection+0x1a>
 662:	81 30       	cpi	r24, 0x01	; 1
 664:	28 f0       	brcs	.+10     	; 0x670 <DIO_voidSetPortDirection+0x16>
 666:	82 30       	cpi	r24, 0x02	; 2
 668:	39 f0       	breq	.+14     	; 0x678 <DIO_voidSetPortDirection+0x1e>
 66a:	83 30       	cpi	r24, 0x03	; 3
 66c:	41 f4       	brne	.+16     	; 0x67e <DIO_voidSetPortDirection+0x24>
 66e:	06 c0       	rjmp	.+12     	; 0x67c <DIO_voidSetPortDirection+0x22>
 670:	6a bb       	out	0x1a, r22	; 26
 672:	08 95       	ret
 674:	67 bb       	out	0x17, r22	; 23
 676:	08 95       	ret
 678:	64 bb       	out	0x14, r22	; 20
 67a:	08 95       	ret
 67c:	61 bb       	out	0x11, r22	; 17
 67e:	08 95       	ret

00000680 <DIO_voidGetPortValue>:
 680:	84 30       	cpi	r24, 0x04	; 4
 682:	88 f4       	brcc	.+34     	; 0x6a6 <DIO_voidGetPortValue+0x26>
 684:	81 30       	cpi	r24, 0x01	; 1
 686:	49 f0       	breq	.+18     	; 0x69a <DIO_voidGetPortValue+0x1a>
 688:	81 30       	cpi	r24, 0x01	; 1
 68a:	28 f0       	brcs	.+10     	; 0x696 <DIO_voidGetPortValue+0x16>
 68c:	82 30       	cpi	r24, 0x02	; 2
 68e:	39 f0       	breq	.+14     	; 0x69e <DIO_voidGetPortValue+0x1e>
 690:	83 30       	cpi	r24, 0x03	; 3
 692:	49 f4       	brne	.+18     	; 0x6a6 <DIO_voidGetPortValue+0x26>
 694:	06 c0       	rjmp	.+12     	; 0x6a2 <DIO_voidGetPortValue+0x22>
 696:	89 b3       	in	r24, 0x19	; 25
 698:	08 95       	ret
 69a:	86 b3       	in	r24, 0x16	; 22
 69c:	08 95       	ret
 69e:	83 b3       	in	r24, 0x13	; 19
 6a0:	08 95       	ret
 6a2:	80 b3       	in	r24, 0x10	; 16
 6a4:	08 95       	ret
 6a6:	85 e0       	ldi	r24, 0x05	; 5
 6a8:	08 95       	ret

000006aa <decrease2per>:
        duty_cycle = 100;
    }
}
void decrease2per(void)
{
    DIO_voidTogglePinValue(DIO_u8_PORTB, DIO_u8_PIN4);
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	64 e0       	ldi	r22, 0x04	; 4
 6ae:	0e 94 56 02 	call	0x4ac	; 0x4ac <DIO_voidTogglePinValue>
    if (duty_cycle <= 2)
 6b2:	80 91 6e 00 	lds	r24, 0x006E
 6b6:	83 30       	cpi	r24, 0x03	; 3
 6b8:	10 f4       	brcc	.+4      	; 0x6be <decrease2per+0x14>
    {
        duty_cycle = 0;
 6ba:	10 92 6e 00 	sts	0x006E, r1
    }
    duty_cycle -= 2;
 6be:	80 91 6e 00 	lds	r24, 0x006E
 6c2:	82 50       	subi	r24, 0x02	; 2
 6c4:	80 93 6e 00 	sts	0x006E, r24
 6c8:	08 95       	ret

000006ca <incraese2per>:
    return 0;
}

void incraese2per(void)
{
    DIO_voidTogglePinValue(DIO_u8_PORTB, DIO_u8_PIN4);
 6ca:	81 e0       	ldi	r24, 0x01	; 1
 6cc:	64 e0       	ldi	r22, 0x04	; 4
 6ce:	0e 94 56 02 	call	0x4ac	; 0x4ac <DIO_voidTogglePinValue>
    duty_cycle += 2;
 6d2:	80 91 6e 00 	lds	r24, 0x006E
 6d6:	8e 5f       	subi	r24, 0xFE	; 254
 6d8:	80 93 6e 00 	sts	0x006E, r24
    if (duty_cycle > 100)
 6dc:	85 36       	cpi	r24, 0x65	; 101
 6de:	18 f0       	brcs	.+6      	; 0x6e6 <incraese2per+0x1c>
    {
        duty_cycle = 100;
 6e0:	84 e6       	ldi	r24, 0x64	; 100
 6e2:	80 93 6e 00 	sts	0x006E, r24
 6e6:	08 95       	ret

000006e8 <main>:
u8 duty_cycle = 0;


int main(void)
{
    DIO_voidSetPinDirection(DIO_u8_PORTB, DIO_u8_PIN4, DIO_u8_OUTPUT);
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	64 e0       	ldi	r22, 0x04	; 4
 6ec:	41 e0       	ldi	r20, 0x01	; 1
 6ee:	0e 94 79 02 	call	0x4f2	; 0x4f2 <DIO_voidSetPinDirection>
    GIE_voidGlobalInterruptEnable();
 6f2:	0e 94 ae 04 	call	0x95c	; 0x95c <GIE_voidGlobalInterruptEnable>

    EXTINT_voidEnable(EXTINT_INT0, EXTINT_RAISING_EDGE);
 6f6:	81 e0       	ldi	r24, 0x01	; 1
 6f8:	62 e0       	ldi	r22, 0x02	; 2
 6fa:	0e 94 99 03 	call	0x732	; 0x732 <EXTINT_voidEnable>
    EXTINT_voidEnable(EXTINT_INT1, EXTINT_RAISING_EDGE);
 6fe:	82 e0       	ldi	r24, 0x02	; 2
 700:	62 e0       	ldi	r22, 0x02	; 2
 702:	0e 94 99 03 	call	0x732	; 0x732 <EXTINT_voidEnable>
    EXTINT_voidSetCallBack(incraese2per, EXTINT_INT0);
 706:	85 e6       	ldi	r24, 0x65	; 101
 708:	93 e0       	ldi	r25, 0x03	; 3
 70a:	61 e0       	ldi	r22, 0x01	; 1
 70c:	0e 94 21 04 	call	0x842	; 0x842 <EXTINT_voidSetCallBack>
    EXTINT_voidSetCallBack(decrease2per, EXTINT_INT1);
 710:	85 e5       	ldi	r24, 0x55	; 85
 712:	93 e0       	ldi	r25, 0x03	; 3
 714:	62 e0       	ldi	r22, 0x02	; 2
 716:	0e 94 21 04 	call	0x842	; 0x842 <EXTINT_voidSetCallBack>
    timer0_void_init();
 71a:	0e 94 3e 00 	call	0x7c	; 0x7c <timer0_void_init>
    DIO_voidSetPinDirection(DIO_u8_PORTB, DIO_u8_PIN3, DIO_u8_OUTPUT);
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	63 e0       	ldi	r22, 0x03	; 3
 722:	41 e0       	ldi	r20, 0x01	; 1
 724:	0e 94 79 02 	call	0x4f2	; 0x4f2 <DIO_voidSetPinDirection>
    while (1)
    {
        TIMER0_voidPWM(duty_cycle);
 728:	80 91 6e 00 	lds	r24, 0x006E
 72c:	0e 94 72 00 	call	0xe4	; 0xe4 <TIMER0_voidPWM>
 730:	fb cf       	rjmp	.-10     	; 0x728 <main+0x40>

00000732 <EXTINT_voidEnable>:
static void (*EXTINT_ApfuncEXTINT[3])(void);
//Copy_u8ExtIntNum select INT0 INT1 INT2
//Copy_u8EdgeIntSource select sense : Rising,Falling, LOW LEVEL, ANYLOGICAL CHANGE
void EXTINT_voidEnable(u8 Copy_u8ExtIntNum , u8 Copy_u8EdgeIntSource)
{
	switch(Copy_u8ExtIntNum)
 732:	82 30       	cpi	r24, 0x02	; 2
 734:	d9 f1       	breq	.+118    	; 0x7ac <EXTINT_voidEnable+0x7a>
 736:	83 30       	cpi	r24, 0x03	; 3
 738:	09 f4       	brne	.+2      	; 0x73c <EXTINT_voidEnable+0xa>
 73a:	6d c0       	rjmp	.+218    	; 0x816 <EXTINT_voidEnable+0xe4>
 73c:	81 30       	cpi	r24, 0x01	; 1
 73e:	09 f0       	breq	.+2      	; 0x742 <EXTINT_voidEnable+0x10>
 740:	7f c0       	rjmp	.+254    	; 0x840 <EXTINT_voidEnable+0x10e>
	{
	case EXTINT_INT0:
			switch(Copy_u8EdgeIntSource)
 742:	62 30       	cpi	r22, 0x02	; 2
 744:	29 f1       	breq	.+74     	; 0x790 <EXTINT_voidEnable+0x5e>
 746:	63 30       	cpi	r22, 0x03	; 3
 748:	18 f4       	brcc	.+6      	; 0x750 <EXTINT_voidEnable+0x1e>
 74a:	61 30       	cpi	r22, 0x01	; 1
 74c:	49 f5       	brne	.+82     	; 0x7a0 <EXTINT_voidEnable+0x6e>
 74e:	05 c0       	rjmp	.+10     	; 0x75a <EXTINT_voidEnable+0x28>
 750:	63 30       	cpi	r22, 0x03	; 3
 752:	a9 f0       	breq	.+42     	; 0x77e <EXTINT_voidEnable+0x4c>
 754:	64 30       	cpi	r22, 0x04	; 4
 756:	21 f5       	brne	.+72     	; 0x7a0 <EXTINT_voidEnable+0x6e>
 758:	09 c0       	rjmp	.+18     	; 0x76c <EXTINT_voidEnable+0x3a>
			{
				case EXTINT_FALLING_EDGE: CLR_BIT( MCUCR , MCUCR_ISC00 ); SET_BIT( MCUCR , MCUCR_ISC01 ); break;
 75a:	e5 e5       	ldi	r30, 0x55	; 85
 75c:	f0 e0       	ldi	r31, 0x00	; 0
 75e:	80 81       	ld	r24, Z
 760:	8e 7f       	andi	r24, 0xFE	; 254
 762:	80 83       	st	Z, r24
 764:	80 81       	ld	r24, Z
 766:	82 60       	ori	r24, 0x02	; 2
 768:	80 83       	st	Z, r24
 76a:	1a c0       	rjmp	.+52     	; 0x7a0 <EXTINT_voidEnable+0x6e>
				case EXTINT_LOW_LEVEL: CLR_BIT( MCUCR , MCUCR_ISC00 ); CLR_BIT( MCUCR , MCUCR_ISC01 ); break;
 76c:	e5 e5       	ldi	r30, 0x55	; 85
 76e:	f0 e0       	ldi	r31, 0x00	; 0
 770:	80 81       	ld	r24, Z
 772:	8e 7f       	andi	r24, 0xFE	; 254
 774:	80 83       	st	Z, r24
 776:	80 81       	ld	r24, Z
 778:	8d 7f       	andi	r24, 0xFD	; 253
 77a:	80 83       	st	Z, r24
 77c:	11 c0       	rjmp	.+34     	; 0x7a0 <EXTINT_voidEnable+0x6e>
				case EXTINT_ANY_LOGICAL_CHANGE: SET_BIT( MCUCR , MCUCR_ISC00 ); CLR_BIT( MCUCR , MCUCR_ISC01 ); break;
 77e:	e5 e5       	ldi	r30, 0x55	; 85
 780:	f0 e0       	ldi	r31, 0x00	; 0
 782:	80 81       	ld	r24, Z
 784:	81 60       	ori	r24, 0x01	; 1
 786:	80 83       	st	Z, r24
 788:	80 81       	ld	r24, Z
 78a:	8d 7f       	andi	r24, 0xFD	; 253
 78c:	80 83       	st	Z, r24
 78e:	08 c0       	rjmp	.+16     	; 0x7a0 <EXTINT_voidEnable+0x6e>
				case EXTINT_RAISING_EDGE: SET_BIT( MCUCR , MCUCR_ISC00 ); SET_BIT( MCUCR , MCUCR_ISC01 ); break;
 790:	e5 e5       	ldi	r30, 0x55	; 85
 792:	f0 e0       	ldi	r31, 0x00	; 0
 794:	80 81       	ld	r24, Z
 796:	81 60       	ori	r24, 0x01	; 1
 798:	80 83       	st	Z, r24
 79a:	80 81       	ld	r24, Z
 79c:	82 60       	ori	r24, 0x02	; 2
 79e:	80 83       	st	Z, r24
			}
			SET_BIT(GICR,GICR_INT0);
 7a0:	eb e5       	ldi	r30, 0x5B	; 91
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	80 64       	ori	r24, 0x40	; 64
 7a8:	80 83       	st	Z, r24
 7aa:	08 95       	ret
	break;
	case EXTINT_INT1:
			switch(Copy_u8EdgeIntSource)
 7ac:	62 30       	cpi	r22, 0x02	; 2
 7ae:	29 f1       	breq	.+74     	; 0x7fa <EXTINT_voidEnable+0xc8>
 7b0:	63 30       	cpi	r22, 0x03	; 3
 7b2:	18 f4       	brcc	.+6      	; 0x7ba <EXTINT_voidEnable+0x88>
 7b4:	61 30       	cpi	r22, 0x01	; 1
 7b6:	49 f5       	brne	.+82     	; 0x80a <EXTINT_voidEnable+0xd8>
 7b8:	05 c0       	rjmp	.+10     	; 0x7c4 <EXTINT_voidEnable+0x92>
 7ba:	63 30       	cpi	r22, 0x03	; 3
 7bc:	a9 f0       	breq	.+42     	; 0x7e8 <EXTINT_voidEnable+0xb6>
 7be:	64 30       	cpi	r22, 0x04	; 4
 7c0:	21 f5       	brne	.+72     	; 0x80a <EXTINT_voidEnable+0xd8>
 7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <EXTINT_voidEnable+0xa4>
			{
				case EXTINT_FALLING_EDGE: CLR_BIT( MCUCR , MCUCR_ISC10 ); SET_BIT( MCUCR , MCUCR_ISC11 ); break;
 7c4:	e5 e5       	ldi	r30, 0x55	; 85
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	80 81       	ld	r24, Z
 7ca:	8b 7f       	andi	r24, 0xFB	; 251
 7cc:	80 83       	st	Z, r24
 7ce:	80 81       	ld	r24, Z
 7d0:	88 60       	ori	r24, 0x08	; 8
 7d2:	80 83       	st	Z, r24
 7d4:	1a c0       	rjmp	.+52     	; 0x80a <EXTINT_voidEnable+0xd8>
				case EXTINT_LOW_LEVEL: CLR_BIT( MCUCR , MCUCR_ISC10 ); CLR_BIT( MCUCR , MCUCR_ISC11 ); break;
 7d6:	e5 e5       	ldi	r30, 0x55	; 85
 7d8:	f0 e0       	ldi	r31, 0x00	; 0
 7da:	80 81       	ld	r24, Z
 7dc:	8b 7f       	andi	r24, 0xFB	; 251
 7de:	80 83       	st	Z, r24
 7e0:	80 81       	ld	r24, Z
 7e2:	87 7f       	andi	r24, 0xF7	; 247
 7e4:	80 83       	st	Z, r24
 7e6:	11 c0       	rjmp	.+34     	; 0x80a <EXTINT_voidEnable+0xd8>
				case EXTINT_ANY_LOGICAL_CHANGE: SET_BIT( MCUCR , MCUCR_ISC10 ); CLR_BIT( MCUCR , MCUCR_ISC11 ); break;
 7e8:	e5 e5       	ldi	r30, 0x55	; 85
 7ea:	f0 e0       	ldi	r31, 0x00	; 0
 7ec:	80 81       	ld	r24, Z
 7ee:	84 60       	ori	r24, 0x04	; 4
 7f0:	80 83       	st	Z, r24
 7f2:	80 81       	ld	r24, Z
 7f4:	87 7f       	andi	r24, 0xF7	; 247
 7f6:	80 83       	st	Z, r24
 7f8:	08 c0       	rjmp	.+16     	; 0x80a <EXTINT_voidEnable+0xd8>
				case EXTINT_RAISING_EDGE: SET_BIT( MCUCR , MCUCR_ISC10 ); SET_BIT( MCUCR , MCUCR_ISC11 ); break;
 7fa:	e5 e5       	ldi	r30, 0x55	; 85
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	80 81       	ld	r24, Z
 800:	84 60       	ori	r24, 0x04	; 4
 802:	80 83       	st	Z, r24
 804:	80 81       	ld	r24, Z
 806:	88 60       	ori	r24, 0x08	; 8
 808:	80 83       	st	Z, r24
			}
			/* Enable Ext Int 1 */
			SET_BIT(GICR,GICR_INT1);
 80a:	eb e5       	ldi	r30, 0x5B	; 91
 80c:	f0 e0       	ldi	r31, 0x00	; 0
 80e:	80 81       	ld	r24, Z
 810:	80 68       	ori	r24, 0x80	; 128
 812:	80 83       	st	Z, r24
 814:	08 95       	ret
	break;
	case EXTINT_INT2:
				switch(Copy_u8EdgeIntSource)
 816:	61 30       	cpi	r22, 0x01	; 1
 818:	19 f0       	breq	.+6      	; 0x820 <EXTINT_voidEnable+0xee>
 81a:	62 30       	cpi	r22, 0x02	; 2
 81c:	61 f4       	brne	.+24     	; 0x836 <EXTINT_voidEnable+0x104>
 81e:	06 c0       	rjmp	.+12     	; 0x82c <EXTINT_voidEnable+0xfa>
				{
					case EXTINT_FALLING_EDGE: CLR_BIT( MCUCSR , MCUCSR_ISC2 ); break;
 820:	e4 e5       	ldi	r30, 0x54	; 84
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	80 81       	ld	r24, Z
 826:	8f 7b       	andi	r24, 0xBF	; 191
 828:	80 83       	st	Z, r24
 82a:	05 c0       	rjmp	.+10     	; 0x836 <EXTINT_voidEnable+0x104>
					case EXTINT_RAISING_EDGE: SET_BIT( MCUCSR , MCUCSR_ISC2 ); break;
 82c:	e4 e5       	ldi	r30, 0x54	; 84
 82e:	f0 e0       	ldi	r31, 0x00	; 0
 830:	80 81       	ld	r24, Z
 832:	80 64       	ori	r24, 0x40	; 64
 834:	80 83       	st	Z, r24
				}
				/* Enable Ext Int 2 */
				SET_BIT(GICR,GICR_INT2);
 836:	eb e5       	ldi	r30, 0x5B	; 91
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	80 81       	ld	r24, Z
 83c:	80 62       	ori	r24, 0x20	; 32
 83e:	80 83       	st	Z, r24
 840:	08 95       	ret

00000842 <EXTINT_voidSetCallBack>:
}
//Copy_u8ExtIntIndex to select INT0 INT1 INT2
//Copy_pfun : the address of the function which will be existed inside ISR
void EXTINT_voidSetCallBack(void(*Copy_pfun)(void),u8 Copy_u8ExtIntIndex)
{
	EXTINT_ApfuncEXTINT[Copy_u8ExtIntIndex] = Copy_pfun;
 842:	e6 2f       	mov	r30, r22
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	ee 0f       	add	r30, r30
 848:	ff 1f       	adc	r31, r31
 84a:	e1 59       	subi	r30, 0x91	; 145
 84c:	ff 4f       	sbci	r31, 0xFF	; 255
 84e:	91 83       	std	Z+1, r25	; 0x01
 850:	80 83       	st	Z, r24
}
 852:	08 95       	ret

00000854 <__vector_1>:
/* ISR Function for External Interrupt 0 */
// __vector_1 for linker
// __attribute__((signal)) to prevent optimization
void __vector_1(void)  __attribute__((signal));
void __vector_1(void)
{
 854:	1f 92       	push	r1
 856:	0f 92       	push	r0
 858:	0f b6       	in	r0, 0x3f	; 63
 85a:	0f 92       	push	r0
 85c:	11 24       	eor	r1, r1
 85e:	2f 93       	push	r18
 860:	3f 93       	push	r19
 862:	4f 93       	push	r20
 864:	5f 93       	push	r21
 866:	6f 93       	push	r22
 868:	7f 93       	push	r23
 86a:	8f 93       	push	r24
 86c:	9f 93       	push	r25
 86e:	af 93       	push	r26
 870:	bf 93       	push	r27
 872:	ef 93       	push	r30
 874:	ff 93       	push	r31
	EXTINT_ApfuncEXTINT[EXTINT_INT0]();
 876:	e0 91 71 00 	lds	r30, 0x0071
 87a:	f0 91 72 00 	lds	r31, 0x0072
 87e:	09 95       	icall
	SET_BIT(GICR, GICR_INT0);
 880:	eb e5       	ldi	r30, 0x5B	; 91
 882:	f0 e0       	ldi	r31, 0x00	; 0
 884:	80 81       	ld	r24, Z
 886:	80 64       	ori	r24, 0x40	; 64
 888:	80 83       	st	Z, r24
}
 88a:	ff 91       	pop	r31
 88c:	ef 91       	pop	r30
 88e:	bf 91       	pop	r27
 890:	af 91       	pop	r26
 892:	9f 91       	pop	r25
 894:	8f 91       	pop	r24
 896:	7f 91       	pop	r23
 898:	6f 91       	pop	r22
 89a:	5f 91       	pop	r21
 89c:	4f 91       	pop	r20
 89e:	3f 91       	pop	r19
 8a0:	2f 91       	pop	r18
 8a2:	0f 90       	pop	r0
 8a4:	0f be       	out	0x3f, r0	; 63
 8a6:	0f 90       	pop	r0
 8a8:	1f 90       	pop	r1
 8aa:	18 95       	reti

000008ac <__vector_2>:
/* ISR Function for External Interrupt 1 */
void __vector_2(void)  __attribute__((signal));
void __vector_2(void)
{
 8ac:	1f 92       	push	r1
 8ae:	0f 92       	push	r0
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	0f 92       	push	r0
 8b4:	11 24       	eor	r1, r1
 8b6:	2f 93       	push	r18
 8b8:	3f 93       	push	r19
 8ba:	4f 93       	push	r20
 8bc:	5f 93       	push	r21
 8be:	6f 93       	push	r22
 8c0:	7f 93       	push	r23
 8c2:	8f 93       	push	r24
 8c4:	9f 93       	push	r25
 8c6:	af 93       	push	r26
 8c8:	bf 93       	push	r27
 8ca:	ef 93       	push	r30
 8cc:	ff 93       	push	r31
	EXTINT_ApfuncEXTINT[EXTINT_INT1]();
 8ce:	e0 91 73 00 	lds	r30, 0x0073
 8d2:	f0 91 74 00 	lds	r31, 0x0074
 8d6:	09 95       	icall
	SET_BIT(GICR, GICR_INT1);
 8d8:	eb e5       	ldi	r30, 0x5B	; 91
 8da:	f0 e0       	ldi	r31, 0x00	; 0
 8dc:	80 81       	ld	r24, Z
 8de:	80 68       	ori	r24, 0x80	; 128
 8e0:	80 83       	st	Z, r24

}
 8e2:	ff 91       	pop	r31
 8e4:	ef 91       	pop	r30
 8e6:	bf 91       	pop	r27
 8e8:	af 91       	pop	r26
 8ea:	9f 91       	pop	r25
 8ec:	8f 91       	pop	r24
 8ee:	7f 91       	pop	r23
 8f0:	6f 91       	pop	r22
 8f2:	5f 91       	pop	r21
 8f4:	4f 91       	pop	r20
 8f6:	3f 91       	pop	r19
 8f8:	2f 91       	pop	r18
 8fa:	0f 90       	pop	r0
 8fc:	0f be       	out	0x3f, r0	; 63
 8fe:	0f 90       	pop	r0
 900:	1f 90       	pop	r1
 902:	18 95       	reti

00000904 <__vector_3>:
/* ISR Function for External Interrupt 3 */
void __vector_3(void)  __attribute__((signal));
void __vector_3(void)
{
 904:	1f 92       	push	r1
 906:	0f 92       	push	r0
 908:	0f b6       	in	r0, 0x3f	; 63
 90a:	0f 92       	push	r0
 90c:	11 24       	eor	r1, r1
 90e:	2f 93       	push	r18
 910:	3f 93       	push	r19
 912:	4f 93       	push	r20
 914:	5f 93       	push	r21
 916:	6f 93       	push	r22
 918:	7f 93       	push	r23
 91a:	8f 93       	push	r24
 91c:	9f 93       	push	r25
 91e:	af 93       	push	r26
 920:	bf 93       	push	r27
 922:	ef 93       	push	r30
 924:	ff 93       	push	r31
	EXTINT_ApfuncEXTINT[EXTINT_INT2]();
 926:	e0 91 75 00 	lds	r30, 0x0075
 92a:	f0 91 76 00 	lds	r31, 0x0076
 92e:	09 95       	icall
	SET_BIT(GICR, GICR_INT2);
 930:	eb e5       	ldi	r30, 0x5B	; 91
 932:	f0 e0       	ldi	r31, 0x00	; 0
 934:	80 81       	ld	r24, Z
 936:	80 62       	ori	r24, 0x20	; 32
 938:	80 83       	st	Z, r24
}
 93a:	ff 91       	pop	r31
 93c:	ef 91       	pop	r30
 93e:	bf 91       	pop	r27
 940:	af 91       	pop	r26
 942:	9f 91       	pop	r25
 944:	8f 91       	pop	r24
 946:	7f 91       	pop	r23
 948:	6f 91       	pop	r22
 94a:	5f 91       	pop	r21
 94c:	4f 91       	pop	r20
 94e:	3f 91       	pop	r19
 950:	2f 91       	pop	r18
 952:	0f 90       	pop	r0
 954:	0f be       	out	0x3f, r0	; 63
 956:	0f 90       	pop	r0
 958:	1f 90       	pop	r1
 95a:	18 95       	reti

0000095c <GIE_voidGlobalInterruptEnable>:


//enable global interrupt
void GIE_voidGlobalInterruptEnable(void)
{
	SET_BIT(SREG, SREG_I);
 95c:	ef e5       	ldi	r30, 0x5F	; 95
 95e:	f0 e0       	ldi	r31, 0x00	; 0
 960:	80 81       	ld	r24, Z
 962:	80 68       	ori	r24, 0x80	; 128
 964:	80 83       	st	Z, r24
}
 966:	08 95       	ret

00000968 <__divsf3>:
 968:	0c d0       	rcall	.+24     	; 0x982 <__divsf3x>
 96a:	e6 c0       	rjmp	.+460    	; 0xb38 <__fp_round>
 96c:	de d0       	rcall	.+444    	; 0xb2a <__fp_pscB>
 96e:	40 f0       	brcs	.+16     	; 0x980 <__divsf3+0x18>
 970:	d5 d0       	rcall	.+426    	; 0xb1c <__fp_pscA>
 972:	30 f0       	brcs	.+12     	; 0x980 <__divsf3+0x18>
 974:	21 f4       	brne	.+8      	; 0x97e <__divsf3+0x16>
 976:	5f 3f       	cpi	r21, 0xFF	; 255
 978:	19 f0       	breq	.+6      	; 0x980 <__divsf3+0x18>
 97a:	c7 c0       	rjmp	.+398    	; 0xb0a <__fp_inf>
 97c:	51 11       	cpse	r21, r1
 97e:	10 c1       	rjmp	.+544    	; 0xba0 <__fp_szero>
 980:	ca c0       	rjmp	.+404    	; 0xb16 <__fp_nan>

00000982 <__divsf3x>:
 982:	eb d0       	rcall	.+470    	; 0xb5a <__fp_split3>
 984:	98 f3       	brcs	.-26     	; 0x96c <__divsf3+0x4>

00000986 <__divsf3_pse>:
 986:	99 23       	and	r25, r25
 988:	c9 f3       	breq	.-14     	; 0x97c <__divsf3+0x14>
 98a:	55 23       	and	r21, r21
 98c:	b1 f3       	breq	.-20     	; 0x97a <__divsf3+0x12>
 98e:	95 1b       	sub	r25, r21
 990:	55 0b       	sbc	r21, r21
 992:	bb 27       	eor	r27, r27
 994:	aa 27       	eor	r26, r26
 996:	62 17       	cp	r22, r18
 998:	73 07       	cpc	r23, r19
 99a:	84 07       	cpc	r24, r20
 99c:	38 f0       	brcs	.+14     	; 0x9ac <__divsf3_pse+0x26>
 99e:	9f 5f       	subi	r25, 0xFF	; 255
 9a0:	5f 4f       	sbci	r21, 0xFF	; 255
 9a2:	22 0f       	add	r18, r18
 9a4:	33 1f       	adc	r19, r19
 9a6:	44 1f       	adc	r20, r20
 9a8:	aa 1f       	adc	r26, r26
 9aa:	a9 f3       	breq	.-22     	; 0x996 <__divsf3_pse+0x10>
 9ac:	33 d0       	rcall	.+102    	; 0xa14 <__divsf3_pse+0x8e>
 9ae:	0e 2e       	mov	r0, r30
 9b0:	3a f0       	brmi	.+14     	; 0x9c0 <__divsf3_pse+0x3a>
 9b2:	e0 e8       	ldi	r30, 0x80	; 128
 9b4:	30 d0       	rcall	.+96     	; 0xa16 <__divsf3_pse+0x90>
 9b6:	91 50       	subi	r25, 0x01	; 1
 9b8:	50 40       	sbci	r21, 0x00	; 0
 9ba:	e6 95       	lsr	r30
 9bc:	00 1c       	adc	r0, r0
 9be:	ca f7       	brpl	.-14     	; 0x9b2 <__divsf3_pse+0x2c>
 9c0:	29 d0       	rcall	.+82     	; 0xa14 <__divsf3_pse+0x8e>
 9c2:	fe 2f       	mov	r31, r30
 9c4:	27 d0       	rcall	.+78     	; 0xa14 <__divsf3_pse+0x8e>
 9c6:	66 0f       	add	r22, r22
 9c8:	77 1f       	adc	r23, r23
 9ca:	88 1f       	adc	r24, r24
 9cc:	bb 1f       	adc	r27, r27
 9ce:	26 17       	cp	r18, r22
 9d0:	37 07       	cpc	r19, r23
 9d2:	48 07       	cpc	r20, r24
 9d4:	ab 07       	cpc	r26, r27
 9d6:	b0 e8       	ldi	r27, 0x80	; 128
 9d8:	09 f0       	breq	.+2      	; 0x9dc <__divsf3_pse+0x56>
 9da:	bb 0b       	sbc	r27, r27
 9dc:	80 2d       	mov	r24, r0
 9de:	bf 01       	movw	r22, r30
 9e0:	ff 27       	eor	r31, r31
 9e2:	93 58       	subi	r25, 0x83	; 131
 9e4:	5f 4f       	sbci	r21, 0xFF	; 255
 9e6:	2a f0       	brmi	.+10     	; 0x9f2 <__divsf3_pse+0x6c>
 9e8:	9e 3f       	cpi	r25, 0xFE	; 254
 9ea:	51 05       	cpc	r21, r1
 9ec:	68 f0       	brcs	.+26     	; 0xa08 <__divsf3_pse+0x82>
 9ee:	8d c0       	rjmp	.+282    	; 0xb0a <__fp_inf>
 9f0:	d7 c0       	rjmp	.+430    	; 0xba0 <__fp_szero>
 9f2:	5f 3f       	cpi	r21, 0xFF	; 255
 9f4:	ec f3       	brlt	.-6      	; 0x9f0 <__divsf3_pse+0x6a>
 9f6:	98 3e       	cpi	r25, 0xE8	; 232
 9f8:	dc f3       	brlt	.-10     	; 0x9f0 <__divsf3_pse+0x6a>
 9fa:	86 95       	lsr	r24
 9fc:	77 95       	ror	r23
 9fe:	67 95       	ror	r22
 a00:	b7 95       	ror	r27
 a02:	f7 95       	ror	r31
 a04:	9f 5f       	subi	r25, 0xFF	; 255
 a06:	c9 f7       	brne	.-14     	; 0x9fa <__divsf3_pse+0x74>
 a08:	88 0f       	add	r24, r24
 a0a:	91 1d       	adc	r25, r1
 a0c:	96 95       	lsr	r25
 a0e:	87 95       	ror	r24
 a10:	97 f9       	bld	r25, 7
 a12:	08 95       	ret
 a14:	e1 e0       	ldi	r30, 0x01	; 1
 a16:	66 0f       	add	r22, r22
 a18:	77 1f       	adc	r23, r23
 a1a:	88 1f       	adc	r24, r24
 a1c:	bb 1f       	adc	r27, r27
 a1e:	62 17       	cp	r22, r18
 a20:	73 07       	cpc	r23, r19
 a22:	84 07       	cpc	r24, r20
 a24:	ba 07       	cpc	r27, r26
 a26:	20 f0       	brcs	.+8      	; 0xa30 <__divsf3_pse+0xaa>
 a28:	62 1b       	sub	r22, r18
 a2a:	73 0b       	sbc	r23, r19
 a2c:	84 0b       	sbc	r24, r20
 a2e:	ba 0b       	sbc	r27, r26
 a30:	ee 1f       	adc	r30, r30
 a32:	88 f7       	brcc	.-30     	; 0xa16 <__divsf3_pse+0x90>
 a34:	e0 95       	com	r30
 a36:	08 95       	ret

00000a38 <__fixunssfsi>:
 a38:	98 d0       	rcall	.+304    	; 0xb6a <__fp_splitA>
 a3a:	88 f0       	brcs	.+34     	; 0xa5e <__fixunssfsi+0x26>
 a3c:	9f 57       	subi	r25, 0x7F	; 127
 a3e:	90 f0       	brcs	.+36     	; 0xa64 <__fixunssfsi+0x2c>
 a40:	b9 2f       	mov	r27, r25
 a42:	99 27       	eor	r25, r25
 a44:	b7 51       	subi	r27, 0x17	; 23
 a46:	a0 f0       	brcs	.+40     	; 0xa70 <__fixunssfsi+0x38>
 a48:	d1 f0       	breq	.+52     	; 0xa7e <__fixunssfsi+0x46>
 a4a:	66 0f       	add	r22, r22
 a4c:	77 1f       	adc	r23, r23
 a4e:	88 1f       	adc	r24, r24
 a50:	99 1f       	adc	r25, r25
 a52:	1a f0       	brmi	.+6      	; 0xa5a <__fixunssfsi+0x22>
 a54:	ba 95       	dec	r27
 a56:	c9 f7       	brne	.-14     	; 0xa4a <__fixunssfsi+0x12>
 a58:	12 c0       	rjmp	.+36     	; 0xa7e <__fixunssfsi+0x46>
 a5a:	b1 30       	cpi	r27, 0x01	; 1
 a5c:	81 f0       	breq	.+32     	; 0xa7e <__fixunssfsi+0x46>
 a5e:	9f d0       	rcall	.+318    	; 0xb9e <__fp_zero>
 a60:	b1 e0       	ldi	r27, 0x01	; 1
 a62:	08 95       	ret
 a64:	9c c0       	rjmp	.+312    	; 0xb9e <__fp_zero>
 a66:	67 2f       	mov	r22, r23
 a68:	78 2f       	mov	r23, r24
 a6a:	88 27       	eor	r24, r24
 a6c:	b8 5f       	subi	r27, 0xF8	; 248
 a6e:	39 f0       	breq	.+14     	; 0xa7e <__fixunssfsi+0x46>
 a70:	b9 3f       	cpi	r27, 0xF9	; 249
 a72:	cc f3       	brlt	.-14     	; 0xa66 <__fixunssfsi+0x2e>
 a74:	86 95       	lsr	r24
 a76:	77 95       	ror	r23
 a78:	67 95       	ror	r22
 a7a:	b3 95       	inc	r27
 a7c:	d9 f7       	brne	.-10     	; 0xa74 <__fixunssfsi+0x3c>
 a7e:	3e f4       	brtc	.+14     	; 0xa8e <__fixunssfsi+0x56>
 a80:	90 95       	com	r25
 a82:	80 95       	com	r24
 a84:	70 95       	com	r23
 a86:	61 95       	neg	r22
 a88:	7f 4f       	sbci	r23, 0xFF	; 255
 a8a:	8f 4f       	sbci	r24, 0xFF	; 255
 a8c:	9f 4f       	sbci	r25, 0xFF	; 255
 a8e:	08 95       	ret

00000a90 <__floatunsisf>:
 a90:	e8 94       	clt
 a92:	09 c0       	rjmp	.+18     	; 0xaa6 <__floatsisf+0x12>

00000a94 <__floatsisf>:
 a94:	97 fb       	bst	r25, 7
 a96:	3e f4       	brtc	.+14     	; 0xaa6 <__floatsisf+0x12>
 a98:	90 95       	com	r25
 a9a:	80 95       	com	r24
 a9c:	70 95       	com	r23
 a9e:	61 95       	neg	r22
 aa0:	7f 4f       	sbci	r23, 0xFF	; 255
 aa2:	8f 4f       	sbci	r24, 0xFF	; 255
 aa4:	9f 4f       	sbci	r25, 0xFF	; 255
 aa6:	99 23       	and	r25, r25
 aa8:	a9 f0       	breq	.+42     	; 0xad4 <__floatsisf+0x40>
 aaa:	f9 2f       	mov	r31, r25
 aac:	96 e9       	ldi	r25, 0x96	; 150
 aae:	bb 27       	eor	r27, r27
 ab0:	93 95       	inc	r25
 ab2:	f6 95       	lsr	r31
 ab4:	87 95       	ror	r24
 ab6:	77 95       	ror	r23
 ab8:	67 95       	ror	r22
 aba:	b7 95       	ror	r27
 abc:	f1 11       	cpse	r31, r1
 abe:	f8 cf       	rjmp	.-16     	; 0xab0 <__floatsisf+0x1c>
 ac0:	fa f4       	brpl	.+62     	; 0xb00 <__floatsisf+0x6c>
 ac2:	bb 0f       	add	r27, r27
 ac4:	11 f4       	brne	.+4      	; 0xaca <__floatsisf+0x36>
 ac6:	60 ff       	sbrs	r22, 0
 ac8:	1b c0       	rjmp	.+54     	; 0xb00 <__floatsisf+0x6c>
 aca:	6f 5f       	subi	r22, 0xFF	; 255
 acc:	7f 4f       	sbci	r23, 0xFF	; 255
 ace:	8f 4f       	sbci	r24, 0xFF	; 255
 ad0:	9f 4f       	sbci	r25, 0xFF	; 255
 ad2:	16 c0       	rjmp	.+44     	; 0xb00 <__floatsisf+0x6c>
 ad4:	88 23       	and	r24, r24
 ad6:	11 f0       	breq	.+4      	; 0xadc <__floatsisf+0x48>
 ad8:	96 e9       	ldi	r25, 0x96	; 150
 ada:	11 c0       	rjmp	.+34     	; 0xafe <__floatsisf+0x6a>
 adc:	77 23       	and	r23, r23
 ade:	21 f0       	breq	.+8      	; 0xae8 <__floatsisf+0x54>
 ae0:	9e e8       	ldi	r25, 0x8E	; 142
 ae2:	87 2f       	mov	r24, r23
 ae4:	76 2f       	mov	r23, r22
 ae6:	05 c0       	rjmp	.+10     	; 0xaf2 <__floatsisf+0x5e>
 ae8:	66 23       	and	r22, r22
 aea:	71 f0       	breq	.+28     	; 0xb08 <__floatsisf+0x74>
 aec:	96 e8       	ldi	r25, 0x86	; 134
 aee:	86 2f       	mov	r24, r22
 af0:	70 e0       	ldi	r23, 0x00	; 0
 af2:	60 e0       	ldi	r22, 0x00	; 0
 af4:	2a f0       	brmi	.+10     	; 0xb00 <__floatsisf+0x6c>
 af6:	9a 95       	dec	r25
 af8:	66 0f       	add	r22, r22
 afa:	77 1f       	adc	r23, r23
 afc:	88 1f       	adc	r24, r24
 afe:	da f7       	brpl	.-10     	; 0xaf6 <__floatsisf+0x62>
 b00:	88 0f       	add	r24, r24
 b02:	96 95       	lsr	r25
 b04:	87 95       	ror	r24
 b06:	97 f9       	bld	r25, 7
 b08:	08 95       	ret

00000b0a <__fp_inf>:
 b0a:	97 f9       	bld	r25, 7
 b0c:	9f 67       	ori	r25, 0x7F	; 127
 b0e:	80 e8       	ldi	r24, 0x80	; 128
 b10:	70 e0       	ldi	r23, 0x00	; 0
 b12:	60 e0       	ldi	r22, 0x00	; 0
 b14:	08 95       	ret

00000b16 <__fp_nan>:
 b16:	9f ef       	ldi	r25, 0xFF	; 255
 b18:	80 ec       	ldi	r24, 0xC0	; 192
 b1a:	08 95       	ret

00000b1c <__fp_pscA>:
 b1c:	00 24       	eor	r0, r0
 b1e:	0a 94       	dec	r0
 b20:	16 16       	cp	r1, r22
 b22:	17 06       	cpc	r1, r23
 b24:	18 06       	cpc	r1, r24
 b26:	09 06       	cpc	r0, r25
 b28:	08 95       	ret

00000b2a <__fp_pscB>:
 b2a:	00 24       	eor	r0, r0
 b2c:	0a 94       	dec	r0
 b2e:	12 16       	cp	r1, r18
 b30:	13 06       	cpc	r1, r19
 b32:	14 06       	cpc	r1, r20
 b34:	05 06       	cpc	r0, r21
 b36:	08 95       	ret

00000b38 <__fp_round>:
 b38:	09 2e       	mov	r0, r25
 b3a:	03 94       	inc	r0
 b3c:	00 0c       	add	r0, r0
 b3e:	11 f4       	brne	.+4      	; 0xb44 <__fp_round+0xc>
 b40:	88 23       	and	r24, r24
 b42:	52 f0       	brmi	.+20     	; 0xb58 <__fp_round+0x20>
 b44:	bb 0f       	add	r27, r27
 b46:	40 f4       	brcc	.+16     	; 0xb58 <__fp_round+0x20>
 b48:	bf 2b       	or	r27, r31
 b4a:	11 f4       	brne	.+4      	; 0xb50 <__fp_round+0x18>
 b4c:	60 ff       	sbrs	r22, 0
 b4e:	04 c0       	rjmp	.+8      	; 0xb58 <__fp_round+0x20>
 b50:	6f 5f       	subi	r22, 0xFF	; 255
 b52:	7f 4f       	sbci	r23, 0xFF	; 255
 b54:	8f 4f       	sbci	r24, 0xFF	; 255
 b56:	9f 4f       	sbci	r25, 0xFF	; 255
 b58:	08 95       	ret

00000b5a <__fp_split3>:
 b5a:	57 fd       	sbrc	r21, 7
 b5c:	90 58       	subi	r25, 0x80	; 128
 b5e:	44 0f       	add	r20, r20
 b60:	55 1f       	adc	r21, r21
 b62:	59 f0       	breq	.+22     	; 0xb7a <__fp_splitA+0x10>
 b64:	5f 3f       	cpi	r21, 0xFF	; 255
 b66:	71 f0       	breq	.+28     	; 0xb84 <__fp_splitA+0x1a>
 b68:	47 95       	ror	r20

00000b6a <__fp_splitA>:
 b6a:	88 0f       	add	r24, r24
 b6c:	97 fb       	bst	r25, 7
 b6e:	99 1f       	adc	r25, r25
 b70:	61 f0       	breq	.+24     	; 0xb8a <__fp_splitA+0x20>
 b72:	9f 3f       	cpi	r25, 0xFF	; 255
 b74:	79 f0       	breq	.+30     	; 0xb94 <__fp_splitA+0x2a>
 b76:	87 95       	ror	r24
 b78:	08 95       	ret
 b7a:	12 16       	cp	r1, r18
 b7c:	13 06       	cpc	r1, r19
 b7e:	14 06       	cpc	r1, r20
 b80:	55 1f       	adc	r21, r21
 b82:	f2 cf       	rjmp	.-28     	; 0xb68 <__fp_split3+0xe>
 b84:	46 95       	lsr	r20
 b86:	f1 df       	rcall	.-30     	; 0xb6a <__fp_splitA>
 b88:	08 c0       	rjmp	.+16     	; 0xb9a <__fp_splitA+0x30>
 b8a:	16 16       	cp	r1, r22
 b8c:	17 06       	cpc	r1, r23
 b8e:	18 06       	cpc	r1, r24
 b90:	99 1f       	adc	r25, r25
 b92:	f1 cf       	rjmp	.-30     	; 0xb76 <__fp_splitA+0xc>
 b94:	86 95       	lsr	r24
 b96:	71 05       	cpc	r23, r1
 b98:	61 05       	cpc	r22, r1
 b9a:	08 94       	sec
 b9c:	08 95       	ret

00000b9e <__fp_zero>:
 b9e:	e8 94       	clt

00000ba0 <__fp_szero>:
 ba0:	bb 27       	eor	r27, r27
 ba2:	66 27       	eor	r22, r22
 ba4:	77 27       	eor	r23, r23
 ba6:	cb 01       	movw	r24, r22
 ba8:	97 f9       	bld	r25, 7
 baa:	08 95       	ret

00000bac <__mulsf3>:
 bac:	0b d0       	rcall	.+22     	; 0xbc4 <__mulsf3x>
 bae:	c4 cf       	rjmp	.-120    	; 0xb38 <__fp_round>
 bb0:	b5 df       	rcall	.-150    	; 0xb1c <__fp_pscA>
 bb2:	28 f0       	brcs	.+10     	; 0xbbe <__mulsf3+0x12>
 bb4:	ba df       	rcall	.-140    	; 0xb2a <__fp_pscB>
 bb6:	18 f0       	brcs	.+6      	; 0xbbe <__mulsf3+0x12>
 bb8:	95 23       	and	r25, r21
 bba:	09 f0       	breq	.+2      	; 0xbbe <__mulsf3+0x12>
 bbc:	a6 cf       	rjmp	.-180    	; 0xb0a <__fp_inf>
 bbe:	ab cf       	rjmp	.-170    	; 0xb16 <__fp_nan>
 bc0:	11 24       	eor	r1, r1
 bc2:	ee cf       	rjmp	.-36     	; 0xba0 <__fp_szero>

00000bc4 <__mulsf3x>:
 bc4:	ca df       	rcall	.-108    	; 0xb5a <__fp_split3>
 bc6:	a0 f3       	brcs	.-24     	; 0xbb0 <__mulsf3+0x4>

00000bc8 <__mulsf3_pse>:
 bc8:	95 9f       	mul	r25, r21
 bca:	d1 f3       	breq	.-12     	; 0xbc0 <__mulsf3+0x14>
 bcc:	95 0f       	add	r25, r21
 bce:	50 e0       	ldi	r21, 0x00	; 0
 bd0:	55 1f       	adc	r21, r21
 bd2:	62 9f       	mul	r22, r18
 bd4:	f0 01       	movw	r30, r0
 bd6:	72 9f       	mul	r23, r18
 bd8:	bb 27       	eor	r27, r27
 bda:	f0 0d       	add	r31, r0
 bdc:	b1 1d       	adc	r27, r1
 bde:	63 9f       	mul	r22, r19
 be0:	aa 27       	eor	r26, r26
 be2:	f0 0d       	add	r31, r0
 be4:	b1 1d       	adc	r27, r1
 be6:	aa 1f       	adc	r26, r26
 be8:	64 9f       	mul	r22, r20
 bea:	66 27       	eor	r22, r22
 bec:	b0 0d       	add	r27, r0
 bee:	a1 1d       	adc	r26, r1
 bf0:	66 1f       	adc	r22, r22
 bf2:	82 9f       	mul	r24, r18
 bf4:	22 27       	eor	r18, r18
 bf6:	b0 0d       	add	r27, r0
 bf8:	a1 1d       	adc	r26, r1
 bfa:	62 1f       	adc	r22, r18
 bfc:	73 9f       	mul	r23, r19
 bfe:	b0 0d       	add	r27, r0
 c00:	a1 1d       	adc	r26, r1
 c02:	62 1f       	adc	r22, r18
 c04:	83 9f       	mul	r24, r19
 c06:	a0 0d       	add	r26, r0
 c08:	61 1d       	adc	r22, r1
 c0a:	22 1f       	adc	r18, r18
 c0c:	74 9f       	mul	r23, r20
 c0e:	33 27       	eor	r19, r19
 c10:	a0 0d       	add	r26, r0
 c12:	61 1d       	adc	r22, r1
 c14:	23 1f       	adc	r18, r19
 c16:	84 9f       	mul	r24, r20
 c18:	60 0d       	add	r22, r0
 c1a:	21 1d       	adc	r18, r1
 c1c:	82 2f       	mov	r24, r18
 c1e:	76 2f       	mov	r23, r22
 c20:	6a 2f       	mov	r22, r26
 c22:	11 24       	eor	r1, r1
 c24:	9f 57       	subi	r25, 0x7F	; 127
 c26:	50 40       	sbci	r21, 0x00	; 0
 c28:	8a f0       	brmi	.+34     	; 0xc4c <__mulsf3_pse+0x84>
 c2a:	e1 f0       	breq	.+56     	; 0xc64 <__mulsf3_pse+0x9c>
 c2c:	88 23       	and	r24, r24
 c2e:	4a f0       	brmi	.+18     	; 0xc42 <__mulsf3_pse+0x7a>
 c30:	ee 0f       	add	r30, r30
 c32:	ff 1f       	adc	r31, r31
 c34:	bb 1f       	adc	r27, r27
 c36:	66 1f       	adc	r22, r22
 c38:	77 1f       	adc	r23, r23
 c3a:	88 1f       	adc	r24, r24
 c3c:	91 50       	subi	r25, 0x01	; 1
 c3e:	50 40       	sbci	r21, 0x00	; 0
 c40:	a9 f7       	brne	.-22     	; 0xc2c <__mulsf3_pse+0x64>
 c42:	9e 3f       	cpi	r25, 0xFE	; 254
 c44:	51 05       	cpc	r21, r1
 c46:	70 f0       	brcs	.+28     	; 0xc64 <__mulsf3_pse+0x9c>
 c48:	60 cf       	rjmp	.-320    	; 0xb0a <__fp_inf>
 c4a:	aa cf       	rjmp	.-172    	; 0xba0 <__fp_szero>
 c4c:	5f 3f       	cpi	r21, 0xFF	; 255
 c4e:	ec f3       	brlt	.-6      	; 0xc4a <__mulsf3_pse+0x82>
 c50:	98 3e       	cpi	r25, 0xE8	; 232
 c52:	dc f3       	brlt	.-10     	; 0xc4a <__mulsf3_pse+0x82>
 c54:	86 95       	lsr	r24
 c56:	77 95       	ror	r23
 c58:	67 95       	ror	r22
 c5a:	b7 95       	ror	r27
 c5c:	f7 95       	ror	r31
 c5e:	e7 95       	ror	r30
 c60:	9f 5f       	subi	r25, 0xFF	; 255
 c62:	c1 f7       	brne	.-16     	; 0xc54 <__mulsf3_pse+0x8c>
 c64:	fe 2b       	or	r31, r30
 c66:	88 0f       	add	r24, r24
 c68:	91 1d       	adc	r25, r1
 c6a:	96 95       	lsr	r25
 c6c:	87 95       	ror	r24
 c6e:	97 f9       	bld	r25, 7
 c70:	08 95       	ret

00000c72 <_exit>:
 c72:	f8 94       	cli

00000c74 <__stop_program>:
 c74:	ff cf       	rjmp	.-2      	; 0xc74 <__stop_program>
