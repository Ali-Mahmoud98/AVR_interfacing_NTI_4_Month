
Main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010c6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000012  00800060  00800060  0000113a  2**0
                  ALLOC
  2 .stab         00001830  00000000  00000000  0000113c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001008  00000000  00000000  0000296c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a8  00000000  00000000  00003974  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000014c  00000000  00000000  00003a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000003f0  00000000  00000000  00003b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000201  00000000  00000000  00003f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000447  00000000  00000000  00004159  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  000045a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  00004690  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000066  00000000  00000000  00004952  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000049b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
{
	SET_BIT(SREG, SREG_I);
}
//disable interrupt
void GIE_voidGlobalInterruptDisable(void)
{
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
{
	callBackFunction = ptr2fun;
}

void ADC_falg_clear(void)
{
       4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
       8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
       c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      10:	0c 94 5c 01 	jmp	0x2b8	; 0x2b8 <__vector_4>
      14:	0c 94 83 01 	jmp	0x306	; 0x306 <__vector_5>
      18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      1c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__vector_7>
      20:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_8>
      24:	0c 94 35 01 	jmp	0x26a	; 0x26a <__vector_9>
      28:	0c 94 96 00 	jmp	0x12c	; 0x12c <__vector_10>
      2c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__vector_11>
      30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      40:	0c 94 72 06 	jmp	0xce4	; 0xce4 <__vector_16>
      44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a2 37       	cpi	r26, 0x72	; 114
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
      70:	0e 94 ff 05 	call	0xbfe	; 0xbfe <main>
      74:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <_exit>

00000078 <__bad_interrupt>:
      78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <timer0_void_init>:
      7c:	83 b7       	in	r24, 0x33	; 51
      7e:	80 64       	ori	r24, 0x40	; 64
      80:	83 bf       	out	0x33, r24	; 51
      82:	83 b7       	in	r24, 0x33	; 51
      84:	88 60       	ori	r24, 0x08	; 8
      86:	83 bf       	out	0x33, r24	; 51
      88:	83 b7       	in	r24, 0x33	; 51
      8a:	8f 77       	andi	r24, 0x7F	; 127
      8c:	83 bf       	out	0x33, r24	; 51
      8e:	83 b7       	in	r24, 0x33	; 51
      90:	8f 7c       	andi	r24, 0xCF	; 207
      92:	83 bf       	out	0x33, r24	; 51
      94:	83 b7       	in	r24, 0x33	; 51
      96:	88 7f       	andi	r24, 0xF8	; 248
      98:	85 60       	ori	r24, 0x05	; 5
      9a:	83 bf       	out	0x33, r24	; 51
      9c:	08 95       	ret

0000009e <TIMER0_voidSetPreload>:
      9e:	8c bf       	out	0x3c, r24	; 60
      a0:	62 bf       	out	0x32, r22	; 50
      a2:	08 95       	ret

000000a4 <timer0_void_off>:
      a4:	83 b7       	in	r24, 0x33	; 51
      a6:	88 7f       	andi	r24, 0xF8	; 248
      a8:	83 bf       	out	0x33, r24	; 51
      aa:	08 95       	ret

000000ac <Timer0_set_preLoadVal>:
      ac:	82 bf       	out	0x32, r24	; 50
      ae:	08 95       	ret

000000b0 <timer0_Interrupt_OverFlow_Enable>:
      b0:	89 b7       	in	r24, 0x39	; 57
      b2:	81 60       	ori	r24, 0x01	; 1
      b4:	89 bf       	out	0x39, r24	; 57
      b6:	08 95       	ret

000000b8 <timer0_Interrupt_CompMatch_Enable>:
      b8:	89 b7       	in	r24, 0x39	; 57
      ba:	82 60       	ori	r24, 0x02	; 2
      bc:	89 bf       	out	0x39, r24	; 57
      be:	08 95       	ret

000000c0 <timer0_Interrupt_OverFlow_Disable>:
      c0:	89 b7       	in	r24, 0x39	; 57
      c2:	8e 7f       	andi	r24, 0xFE	; 254
      c4:	89 bf       	out	0x39, r24	; 57
      c6:	08 95       	ret

000000c8 <timer0_Interrupt_CompMatch_Disable>:
      c8:	89 b7       	in	r24, 0x39	; 57
      ca:	8d 7f       	andi	r24, 0xFD	; 253
      cc:	89 bf       	out	0x39, r24	; 57
      ce:	08 95       	ret

000000d0 <set_OCR0Val>:
      d0:	8c bf       	out	0x3c, r24	; 60
      d2:	08 95       	ret

000000d4 <timer0_Interrupt_FlagClear>:
      d4:	88 b7       	in	r24, 0x38	; 56
      d6:	81 60       	ori	r24, 0x01	; 1
      d8:	88 bf       	out	0x38, r24	; 56
      da:	08 95       	ret

000000dc <timer0_Interrupt_CompMatch_FlagClear>:
      dc:	88 b7       	in	r24, 0x38	; 56
      de:	82 60       	ori	r24, 0x02	; 2
      e0:	88 bf       	out	0x38, r24	; 56
      e2:	08 95       	ret

000000e4 <TIMER0_voidPWM>:
      e4:	08 95       	ret

000000e6 <setCallBack_OV_T0>:
      e6:	90 93 63 00 	sts	0x0063, r25
      ea:	80 93 62 00 	sts	0x0062, r24
      ee:	08 95       	ret

000000f0 <setCallBack_CMP_T0>:
      f0:	90 93 61 00 	sts	0x0061, r25
      f4:	80 93 60 00 	sts	0x0060, r24
      f8:	08 95       	ret

000000fa <setCallBack_CMPA_T1>:
      fa:	90 93 65 00 	sts	0x0065, r25
      fe:	80 93 64 00 	sts	0x0064, r24
     102:	08 95       	ret

00000104 <setCallBack_CMPB_T1>:
     104:	90 93 67 00 	sts	0x0067, r25
     108:	80 93 66 00 	sts	0x0066, r24
     10c:	08 95       	ret

0000010e <setCallBack_OC_T1>:
     10e:	90 93 69 00 	sts	0x0069, r25
     112:	80 93 68 00 	sts	0x0068, r24
     116:	08 95       	ret

00000118 <setCallBack_OV_T2>:
     118:	90 93 6d 00 	sts	0x006D, r25
     11c:	80 93 6c 00 	sts	0x006C, r24
     120:	08 95       	ret

00000122 <setCallBack_CMP_T2>:
     122:	90 93 6b 00 	sts	0x006B, r25
     126:	80 93 6a 00 	sts	0x006A, r24
     12a:	08 95       	ret

0000012c <__vector_10>:
     12c:	1f 92       	push	r1
     12e:	0f 92       	push	r0
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	0f 92       	push	r0
     134:	11 24       	eor	r1, r1
     136:	2f 93       	push	r18
     138:	3f 93       	push	r19
     13a:	4f 93       	push	r20
     13c:	5f 93       	push	r21
     13e:	6f 93       	push	r22
     140:	7f 93       	push	r23
     142:	8f 93       	push	r24
     144:	9f 93       	push	r25
     146:	af 93       	push	r26
     148:	bf 93       	push	r27
     14a:	ef 93       	push	r30
     14c:	ff 93       	push	r31
     14e:	e0 91 60 00 	lds	r30, 0x0060
     152:	f0 91 61 00 	lds	r31, 0x0061
     156:	09 95       	icall
     158:	88 b7       	in	r24, 0x38	; 56
     15a:	82 60       	ori	r24, 0x02	; 2
     15c:	88 bf       	out	0x38, r24	; 56
     15e:	ff 91       	pop	r31
     160:	ef 91       	pop	r30
     162:	bf 91       	pop	r27
     164:	af 91       	pop	r26
     166:	9f 91       	pop	r25
     168:	8f 91       	pop	r24
     16a:	7f 91       	pop	r23
     16c:	6f 91       	pop	r22
     16e:	5f 91       	pop	r21
     170:	4f 91       	pop	r20
     172:	3f 91       	pop	r19
     174:	2f 91       	pop	r18
     176:	0f 90       	pop	r0
     178:	0f be       	out	0x3f, r0	; 63
     17a:	0f 90       	pop	r0
     17c:	1f 90       	pop	r1
     17e:	18 95       	reti

00000180 <__vector_11>:
     180:	1f 92       	push	r1
     182:	0f 92       	push	r0
     184:	0f b6       	in	r0, 0x3f	; 63
     186:	0f 92       	push	r0
     188:	11 24       	eor	r1, r1
     18a:	2f 93       	push	r18
     18c:	3f 93       	push	r19
     18e:	4f 93       	push	r20
     190:	5f 93       	push	r21
     192:	6f 93       	push	r22
     194:	7f 93       	push	r23
     196:	8f 93       	push	r24
     198:	9f 93       	push	r25
     19a:	af 93       	push	r26
     19c:	bf 93       	push	r27
     19e:	ef 93       	push	r30
     1a0:	ff 93       	push	r31
     1a2:	e0 91 62 00 	lds	r30, 0x0062
     1a6:	f0 91 63 00 	lds	r31, 0x0063
     1aa:	09 95       	icall
     1ac:	ff 91       	pop	r31
     1ae:	ef 91       	pop	r30
     1b0:	bf 91       	pop	r27
     1b2:	af 91       	pop	r26
     1b4:	9f 91       	pop	r25
     1b6:	8f 91       	pop	r24
     1b8:	7f 91       	pop	r23
     1ba:	6f 91       	pop	r22
     1bc:	5f 91       	pop	r21
     1be:	4f 91       	pop	r20
     1c0:	3f 91       	pop	r19
     1c2:	2f 91       	pop	r18
     1c4:	0f 90       	pop	r0
     1c6:	0f be       	out	0x3f, r0	; 63
     1c8:	0f 90       	pop	r0
     1ca:	1f 90       	pop	r1
     1cc:	18 95       	reti

000001ce <__vector_7>:
     1ce:	1f 92       	push	r1
     1d0:	0f 92       	push	r0
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	0f 92       	push	r0
     1d6:	11 24       	eor	r1, r1
     1d8:	2f 93       	push	r18
     1da:	3f 93       	push	r19
     1dc:	4f 93       	push	r20
     1de:	5f 93       	push	r21
     1e0:	6f 93       	push	r22
     1e2:	7f 93       	push	r23
     1e4:	8f 93       	push	r24
     1e6:	9f 93       	push	r25
     1e8:	af 93       	push	r26
     1ea:	bf 93       	push	r27
     1ec:	ef 93       	push	r30
     1ee:	ff 93       	push	r31
     1f0:	e0 91 64 00 	lds	r30, 0x0064
     1f4:	f0 91 65 00 	lds	r31, 0x0065
     1f8:	09 95       	icall
     1fa:	ff 91       	pop	r31
     1fc:	ef 91       	pop	r30
     1fe:	bf 91       	pop	r27
     200:	af 91       	pop	r26
     202:	9f 91       	pop	r25
     204:	8f 91       	pop	r24
     206:	7f 91       	pop	r23
     208:	6f 91       	pop	r22
     20a:	5f 91       	pop	r21
     20c:	4f 91       	pop	r20
     20e:	3f 91       	pop	r19
     210:	2f 91       	pop	r18
     212:	0f 90       	pop	r0
     214:	0f be       	out	0x3f, r0	; 63
     216:	0f 90       	pop	r0
     218:	1f 90       	pop	r1
     21a:	18 95       	reti

0000021c <__vector_8>:
     21c:	1f 92       	push	r1
     21e:	0f 92       	push	r0
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	0f 92       	push	r0
     224:	11 24       	eor	r1, r1
     226:	2f 93       	push	r18
     228:	3f 93       	push	r19
     22a:	4f 93       	push	r20
     22c:	5f 93       	push	r21
     22e:	6f 93       	push	r22
     230:	7f 93       	push	r23
     232:	8f 93       	push	r24
     234:	9f 93       	push	r25
     236:	af 93       	push	r26
     238:	bf 93       	push	r27
     23a:	ef 93       	push	r30
     23c:	ff 93       	push	r31
     23e:	e0 91 66 00 	lds	r30, 0x0066
     242:	f0 91 67 00 	lds	r31, 0x0067
     246:	09 95       	icall
     248:	ff 91       	pop	r31
     24a:	ef 91       	pop	r30
     24c:	bf 91       	pop	r27
     24e:	af 91       	pop	r26
     250:	9f 91       	pop	r25
     252:	8f 91       	pop	r24
     254:	7f 91       	pop	r23
     256:	6f 91       	pop	r22
     258:	5f 91       	pop	r21
     25a:	4f 91       	pop	r20
     25c:	3f 91       	pop	r19
     25e:	2f 91       	pop	r18
     260:	0f 90       	pop	r0
     262:	0f be       	out	0x3f, r0	; 63
     264:	0f 90       	pop	r0
     266:	1f 90       	pop	r1
     268:	18 95       	reti

0000026a <__vector_9>:
     26a:	1f 92       	push	r1
     26c:	0f 92       	push	r0
     26e:	0f b6       	in	r0, 0x3f	; 63
     270:	0f 92       	push	r0
     272:	11 24       	eor	r1, r1
     274:	2f 93       	push	r18
     276:	3f 93       	push	r19
     278:	4f 93       	push	r20
     27a:	5f 93       	push	r21
     27c:	6f 93       	push	r22
     27e:	7f 93       	push	r23
     280:	8f 93       	push	r24
     282:	9f 93       	push	r25
     284:	af 93       	push	r26
     286:	bf 93       	push	r27
     288:	ef 93       	push	r30
     28a:	ff 93       	push	r31
     28c:	e0 91 6c 00 	lds	r30, 0x006C
     290:	f0 91 6d 00 	lds	r31, 0x006D
     294:	09 95       	icall
     296:	ff 91       	pop	r31
     298:	ef 91       	pop	r30
     29a:	bf 91       	pop	r27
     29c:	af 91       	pop	r26
     29e:	9f 91       	pop	r25
     2a0:	8f 91       	pop	r24
     2a2:	7f 91       	pop	r23
     2a4:	6f 91       	pop	r22
     2a6:	5f 91       	pop	r21
     2a8:	4f 91       	pop	r20
     2aa:	3f 91       	pop	r19
     2ac:	2f 91       	pop	r18
     2ae:	0f 90       	pop	r0
     2b0:	0f be       	out	0x3f, r0	; 63
     2b2:	0f 90       	pop	r0
     2b4:	1f 90       	pop	r1
     2b6:	18 95       	reti

000002b8 <__vector_4>:
     2b8:	1f 92       	push	r1
     2ba:	0f 92       	push	r0
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	0f 92       	push	r0
     2c0:	11 24       	eor	r1, r1
     2c2:	2f 93       	push	r18
     2c4:	3f 93       	push	r19
     2c6:	4f 93       	push	r20
     2c8:	5f 93       	push	r21
     2ca:	6f 93       	push	r22
     2cc:	7f 93       	push	r23
     2ce:	8f 93       	push	r24
     2d0:	9f 93       	push	r25
     2d2:	af 93       	push	r26
     2d4:	bf 93       	push	r27
     2d6:	ef 93       	push	r30
     2d8:	ff 93       	push	r31
     2da:	e0 91 6a 00 	lds	r30, 0x006A
     2de:	f0 91 6b 00 	lds	r31, 0x006B
     2e2:	09 95       	icall
     2e4:	ff 91       	pop	r31
     2e6:	ef 91       	pop	r30
     2e8:	bf 91       	pop	r27
     2ea:	af 91       	pop	r26
     2ec:	9f 91       	pop	r25
     2ee:	8f 91       	pop	r24
     2f0:	7f 91       	pop	r23
     2f2:	6f 91       	pop	r22
     2f4:	5f 91       	pop	r21
     2f6:	4f 91       	pop	r20
     2f8:	3f 91       	pop	r19
     2fa:	2f 91       	pop	r18
     2fc:	0f 90       	pop	r0
     2fe:	0f be       	out	0x3f, r0	; 63
     300:	0f 90       	pop	r0
     302:	1f 90       	pop	r1
     304:	18 95       	reti

00000306 <__vector_5>:
     306:	1f 92       	push	r1
     308:	0f 92       	push	r0
     30a:	0f b6       	in	r0, 0x3f	; 63
     30c:	0f 92       	push	r0
     30e:	11 24       	eor	r1, r1
     310:	2f 93       	push	r18
     312:	3f 93       	push	r19
     314:	4f 93       	push	r20
     316:	5f 93       	push	r21
     318:	6f 93       	push	r22
     31a:	7f 93       	push	r23
     31c:	8f 93       	push	r24
     31e:	9f 93       	push	r25
     320:	af 93       	push	r26
     322:	bf 93       	push	r27
     324:	ef 93       	push	r30
     326:	ff 93       	push	r31
     328:	e0 91 6c 00 	lds	r30, 0x006C
     32c:	f0 91 6d 00 	lds	r31, 0x006D
     330:	09 95       	icall
     332:	ff 91       	pop	r31
     334:	ef 91       	pop	r30
     336:	bf 91       	pop	r27
     338:	af 91       	pop	r26
     33a:	9f 91       	pop	r25
     33c:	8f 91       	pop	r24
     33e:	7f 91       	pop	r23
     340:	6f 91       	pop	r22
     342:	5f 91       	pop	r21
     344:	4f 91       	pop	r20
     346:	3f 91       	pop	r19
     348:	2f 91       	pop	r18
     34a:	0f 90       	pop	r0
     34c:	0f be       	out	0x3f, r0	; 63
     34e:	0f 90       	pop	r0
     350:	1f 90       	pop	r1
     352:	18 95       	reti

00000354 <power_int>:
     354:	6f 92       	push	r6
     356:	7f 92       	push	r7
     358:	8f 92       	push	r8
     35a:	9f 92       	push	r9
     35c:	af 92       	push	r10
     35e:	bf 92       	push	r11
     360:	cf 92       	push	r12
     362:	df 92       	push	r13
     364:	ef 92       	push	r14
     366:	ff 92       	push	r15
     368:	0f 93       	push	r16
     36a:	1f 93       	push	r17
     36c:	3b 01       	movw	r6, r22
     36e:	4c 01       	movw	r8, r24
     370:	59 01       	movw	r10, r18
     372:	6a 01       	movw	r12, r20
     374:	21 e0       	ldi	r18, 0x01	; 1
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e0       	ldi	r20, 0x00	; 0
     37a:	50 e0       	ldi	r21, 0x00	; 0
     37c:	ee 24       	eor	r14, r14
     37e:	ff 24       	eor	r15, r15
     380:	87 01       	movw	r16, r14
     382:	0d c0       	rjmp	.+26     	; 0x39e <power_int+0x4a>
     384:	ca 01       	movw	r24, r20
     386:	b9 01       	movw	r22, r18
     388:	a4 01       	movw	r20, r8
     38a:	93 01       	movw	r18, r6
     38c:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsi3>
     390:	9b 01       	movw	r18, r22
     392:	ac 01       	movw	r20, r24
     394:	08 94       	sec
     396:	e1 1c       	adc	r14, r1
     398:	f1 1c       	adc	r15, r1
     39a:	01 1d       	adc	r16, r1
     39c:	11 1d       	adc	r17, r1
     39e:	ea 14       	cp	r14, r10
     3a0:	fb 04       	cpc	r15, r11
     3a2:	0c 05       	cpc	r16, r12
     3a4:	1d 05       	cpc	r17, r13
     3a6:	74 f3       	brlt	.-36     	; 0x384 <power_int+0x30>
     3a8:	b9 01       	movw	r22, r18
     3aa:	ca 01       	movw	r24, r20
     3ac:	1f 91       	pop	r17
     3ae:	0f 91       	pop	r16
     3b0:	ff 90       	pop	r15
     3b2:	ef 90       	pop	r14
     3b4:	df 90       	pop	r13
     3b6:	cf 90       	pop	r12
     3b8:	bf 90       	pop	r11
     3ba:	af 90       	pop	r10
     3bc:	9f 90       	pop	r9
     3be:	8f 90       	pop	r8
     3c0:	7f 90       	pop	r7
     3c2:	6f 90       	pop	r6
     3c4:	08 95       	ret

000003c6 <rev_num>:
     3c6:	6f 92       	push	r6
     3c8:	7f 92       	push	r7
     3ca:	8f 92       	push	r8
     3cc:	9f 92       	push	r9
     3ce:	af 92       	push	r10
     3d0:	bf 92       	push	r11
     3d2:	cf 92       	push	r12
     3d4:	df 92       	push	r13
     3d6:	ef 92       	push	r14
     3d8:	ff 92       	push	r15
     3da:	0f 93       	push	r16
     3dc:	1f 93       	push	r17
     3de:	3b 01       	movw	r6, r22
     3e0:	4c 01       	movw	r8, r24
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	a8 2e       	mov	r10, r24
     3e6:	b1 2c       	mov	r11, r1
     3e8:	c1 2c       	mov	r12, r1
     3ea:	d1 2c       	mov	r13, r1
     3ec:	20 c0       	rjmp	.+64     	; 0x42e <rev_num+0x68>
     3ee:	c6 01       	movw	r24, r12
     3f0:	b5 01       	movw	r22, r10
     3f2:	2a e0       	ldi	r18, 0x0A	; 10
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	50 e0       	ldi	r21, 0x00	; 0
     3fa:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsi3>
     3fe:	7b 01       	movw	r14, r22
     400:	8c 01       	movw	r16, r24
     402:	c4 01       	movw	r24, r8
     404:	b3 01       	movw	r22, r6
     406:	0e 94 3f 08 	call	0x107e	; 0x107e <__udivmodsi4>
     40a:	5b 01       	movw	r10, r22
     40c:	6c 01       	movw	r12, r24
     40e:	ae 0c       	add	r10, r14
     410:	bf 1c       	adc	r11, r15
     412:	c0 1e       	adc	r12, r16
     414:	d1 1e       	adc	r13, r17
     416:	c4 01       	movw	r24, r8
     418:	b3 01       	movw	r22, r6
     41a:	2a e0       	ldi	r18, 0x0A	; 10
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	40 e0       	ldi	r20, 0x00	; 0
     420:	50 e0       	ldi	r21, 0x00	; 0
     422:	0e 94 3f 08 	call	0x107e	; 0x107e <__udivmodsi4>
     426:	c9 01       	movw	r24, r18
     428:	da 01       	movw	r26, r20
     42a:	3c 01       	movw	r6, r24
     42c:	4d 01       	movw	r8, r26
     42e:	61 14       	cp	r6, r1
     430:	71 04       	cpc	r7, r1
     432:	81 04       	cpc	r8, r1
     434:	91 04       	cpc	r9, r1
     436:	d9 f6       	brne	.-74     	; 0x3ee <rev_num+0x28>
     438:	b5 01       	movw	r22, r10
     43a:	c6 01       	movw	r24, r12
     43c:	1f 91       	pop	r17
     43e:	0f 91       	pop	r16
     440:	ff 90       	pop	r15
     442:	ef 90       	pop	r14
     444:	df 90       	pop	r13
     446:	cf 90       	pop	r12
     448:	bf 90       	pop	r11
     44a:	af 90       	pop	r10
     44c:	9f 90       	pop	r9
     44e:	8f 90       	pop	r8
     450:	7f 90       	pop	r7
     452:	6f 90       	pop	r6
     454:	08 95       	ret

00000456 <LCD_SendFallingEdge>:
     456:	0f 93       	push	r16
     458:	1f 93       	push	r17
     45a:	80 e0       	ldi	r24, 0x00	; 0
     45c:	62 e0       	ldi	r22, 0x02	; 2
     45e:	41 e0       	ldi	r20, 0x01	; 1
     460:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     464:	00 ea       	ldi	r16, 0xA0	; 160
     466:	1f e0       	ldi	r17, 0x0F	; 15
     468:	c8 01       	movw	r24, r16
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	f1 f7       	brne	.-4      	; 0x46a <LCD_SendFallingEdge+0x14>
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	62 e0       	ldi	r22, 0x02	; 2
     472:	40 e0       	ldi	r20, 0x00	; 0
     474:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     478:	c8 01       	movw	r24, r16
     47a:	01 97       	sbiw	r24, 0x01	; 1
     47c:	f1 f7       	brne	.-4      	; 0x47a <LCD_SendFallingEdge+0x24>
     47e:	1f 91       	pop	r17
     480:	0f 91       	pop	r16
     482:	08 95       	ret

00000484 <LCD_displayCharacter>:
     484:	1f 93       	push	r17
     486:	18 2f       	mov	r17, r24
     488:	48 2f       	mov	r20, r24
     48a:	44 1f       	adc	r20, r20
     48c:	44 27       	eor	r20, r20
     48e:	44 1f       	adc	r20, r20
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	64 e0       	ldi	r22, 0x04	; 4
     494:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     498:	41 2f       	mov	r20, r17
     49a:	42 95       	swap	r20
     49c:	46 95       	lsr	r20
     49e:	46 95       	lsr	r20
     4a0:	41 70       	andi	r20, 0x01	; 1
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	62 e0       	ldi	r22, 0x02	; 2
     4a6:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     4aa:	41 2f       	mov	r20, r17
     4ac:	42 95       	swap	r20
     4ae:	46 95       	lsr	r20
     4b0:	41 70       	andi	r20, 0x01	; 1
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	61 e0       	ldi	r22, 0x01	; 1
     4b6:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     4ba:	41 2f       	mov	r20, r17
     4bc:	42 95       	swap	r20
     4be:	41 70       	andi	r20, 0x01	; 1
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	63 e0       	ldi	r22, 0x03	; 3
     4cc:	41 e0       	ldi	r20, 0x01	; 1
     4ce:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     4d2:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_SendFallingEdge>
     4d6:	41 2f       	mov	r20, r17
     4d8:	46 95       	lsr	r20
     4da:	46 95       	lsr	r20
     4dc:	46 95       	lsr	r20
     4de:	41 70       	andi	r20, 0x01	; 1
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	64 e0       	ldi	r22, 0x04	; 4
     4e4:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     4e8:	41 2f       	mov	r20, r17
     4ea:	46 95       	lsr	r20
     4ec:	46 95       	lsr	r20
     4ee:	41 70       	andi	r20, 0x01	; 1
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	62 e0       	ldi	r22, 0x02	; 2
     4f4:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     4f8:	41 2f       	mov	r20, r17
     4fa:	46 95       	lsr	r20
     4fc:	41 70       	andi	r20, 0x01	; 1
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	61 e0       	ldi	r22, 0x01	; 1
     502:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     506:	11 70       	andi	r17, 0x01	; 1
     508:	81 e0       	ldi	r24, 0x01	; 1
     50a:	60 e0       	ldi	r22, 0x00	; 0
     50c:	41 2f       	mov	r20, r17
     50e:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	63 e0       	ldi	r22, 0x03	; 3
     516:	41 e0       	ldi	r20, 0x01	; 1
     518:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     51c:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_SendFallingEdge>
     520:	80 ea       	ldi	r24, 0xA0	; 160
     522:	9f e0       	ldi	r25, 0x0F	; 15
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <LCD_displayCharacter+0xa0>
     528:	1f 91       	pop	r17
     52a:	08 95       	ret

0000052c <LCD_sendNumber>:
     52c:	ef 92       	push	r14
     52e:	ff 92       	push	r15
     530:	0f 93       	push	r16
     532:	1f 93       	push	r17
     534:	61 15       	cp	r22, r1
     536:	71 05       	cpc	r23, r1
     538:	81 05       	cpc	r24, r1
     53a:	91 05       	cpc	r25, r1
     53c:	21 f4       	brne	.+8      	; 0x546 <LCD_sendNumber+0x1a>
     53e:	80 e3       	ldi	r24, 0x30	; 48
     540:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     544:	34 c0       	rjmp	.+104    	; 0x5ae <LCD_sendNumber+0x82>
     546:	97 ff       	sbrs	r25, 7
     548:	0b c0       	rjmp	.+22     	; 0x560 <LCD_sendNumber+0x34>
     54a:	ee 24       	eor	r14, r14
     54c:	ff 24       	eor	r15, r15
     54e:	87 01       	movw	r16, r14
     550:	e6 1a       	sub	r14, r22
     552:	f7 0a       	sbc	r15, r23
     554:	08 0b       	sbc	r16, r24
     556:	19 0b       	sbc	r17, r25
     558:	8d e2       	ldi	r24, 0x2D	; 45
     55a:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     55e:	02 c0       	rjmp	.+4      	; 0x564 <LCD_sendNumber+0x38>
     560:	7b 01       	movw	r14, r22
     562:	8c 01       	movw	r16, r24
     564:	c8 01       	movw	r24, r16
     566:	b7 01       	movw	r22, r14
     568:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <rev_num>
     56c:	7b 01       	movw	r14, r22
     56e:	8c 01       	movw	r16, r24
     570:	18 c0       	rjmp	.+48     	; 0x5a2 <LCD_sendNumber+0x76>
     572:	c8 01       	movw	r24, r16
     574:	b7 01       	movw	r22, r14
     576:	2a e0       	ldi	r18, 0x0A	; 10
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	40 e0       	ldi	r20, 0x00	; 0
     57c:	50 e0       	ldi	r21, 0x00	; 0
     57e:	0e 94 3f 08 	call	0x107e	; 0x107e <__udivmodsi4>
     582:	86 2f       	mov	r24, r22
     584:	80 5d       	subi	r24, 0xD0	; 208
     586:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     58a:	c8 01       	movw	r24, r16
     58c:	b7 01       	movw	r22, r14
     58e:	2a e0       	ldi	r18, 0x0A	; 10
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	40 e0       	ldi	r20, 0x00	; 0
     594:	50 e0       	ldi	r21, 0x00	; 0
     596:	0e 94 3f 08 	call	0x107e	; 0x107e <__udivmodsi4>
     59a:	c9 01       	movw	r24, r18
     59c:	da 01       	movw	r26, r20
     59e:	7c 01       	movw	r14, r24
     5a0:	8d 01       	movw	r16, r26
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	e8 16       	cp	r14, r24
     5a6:	f1 04       	cpc	r15, r1
     5a8:	01 05       	cpc	r16, r1
     5aa:	11 05       	cpc	r17, r1
     5ac:	11 f7       	brne	.-60     	; 0x572 <LCD_sendNumber+0x46>
     5ae:	1f 91       	pop	r17
     5b0:	0f 91       	pop	r16
     5b2:	ff 90       	pop	r15
     5b4:	ef 90       	pop	r14
     5b6:	08 95       	ret

000005b8 <LCD_sendFloatNumber>:
     5b8:	2f 92       	push	r2
     5ba:	3f 92       	push	r3
     5bc:	4f 92       	push	r4
     5be:	5f 92       	push	r5
     5c0:	6f 92       	push	r6
     5c2:	7f 92       	push	r7
     5c4:	8f 92       	push	r8
     5c6:	9f 92       	push	r9
     5c8:	af 92       	push	r10
     5ca:	bf 92       	push	r11
     5cc:	cf 92       	push	r12
     5ce:	df 92       	push	r13
     5d0:	ef 92       	push	r14
     5d2:	ff 92       	push	r15
     5d4:	0f 93       	push	r16
     5d6:	1f 93       	push	r17
     5d8:	df 93       	push	r29
     5da:	cf 93       	push	r28
     5dc:	00 d0       	rcall	.+0      	; 0x5de <LCD_sendFloatNumber+0x26>
     5de:	00 d0       	rcall	.+0      	; 0x5e0 <LCD_sendFloatNumber+0x28>
     5e0:	cd b7       	in	r28, 0x3d	; 61
     5e2:	de b7       	in	r29, 0x3e	; 62
     5e4:	69 83       	std	Y+1, r22	; 0x01
     5e6:	7a 83       	std	Y+2, r23	; 0x02
     5e8:	8b 83       	std	Y+3, r24	; 0x03
     5ea:	9c 83       	std	Y+4, r25	; 0x04
     5ec:	19 01       	movw	r2, r18
     5ee:	2a 01       	movw	r4, r20
     5f0:	12 16       	cp	r1, r18
     5f2:	13 06       	cpc	r1, r19
     5f4:	14 06       	cpc	r1, r20
     5f6:	15 06       	cpc	r1, r21
     5f8:	0c f0       	brlt	.+2      	; 0x5fc <LCD_sendFloatNumber+0x44>
     5fa:	43 c0       	rjmp	.+134    	; 0x682 <LCD_sendFloatNumber+0xca>
     5fc:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fixsfsi>
     600:	3b 01       	movw	r6, r22
     602:	4c 01       	movw	r8, r24
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	a9 2e       	mov	r10, r25
     608:	b1 2c       	mov	r11, r1
     60a:	c1 2c       	mov	r12, r1
     60c:	d1 2c       	mov	r13, r1
     60e:	ee 24       	eor	r14, r14
     610:	ff 24       	eor	r15, r15
     612:	87 01       	movw	r16, r14
     614:	c6 01       	movw	r24, r12
     616:	b5 01       	movw	r22, r10
     618:	2a e0       	ldi	r18, 0x0A	; 10
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	0e 94 20 08 	call	0x1040	; 0x1040 <__mulsi3>
     624:	5b 01       	movw	r10, r22
     626:	6c 01       	movw	r12, r24
     628:	08 94       	sec
     62a:	e1 1c       	adc	r14, r1
     62c:	f1 1c       	adc	r15, r1
     62e:	01 1d       	adc	r16, r1
     630:	11 1d       	adc	r17, r1
     632:	e2 14       	cp	r14, r2
     634:	f3 04       	cpc	r15, r3
     636:	04 05       	cpc	r16, r4
     638:	15 05       	cpc	r17, r5
     63a:	64 f3       	brlt	.-40     	; 0x614 <LCD_sendFloatNumber+0x5c>
     63c:	c4 01       	movw	r24, r8
     63e:	b3 01       	movw	r22, r6
     640:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_sendNumber>
     644:	8e e2       	ldi	r24, 0x2E	; 46
     646:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     64a:	c4 01       	movw	r24, r8
     64c:	b3 01       	movw	r22, r6
     64e:	0e 94 31 07 	call	0xe62	; 0xe62 <__floatsisf>
     652:	9b 01       	movw	r18, r22
     654:	ac 01       	movw	r20, r24
     656:	69 81       	ldd	r22, Y+1	; 0x01
     658:	7a 81       	ldd	r23, Y+2	; 0x02
     65a:	8b 81       	ldd	r24, Y+3	; 0x03
     65c:	9c 81       	ldd	r25, Y+4	; 0x04
     65e:	0e 94 99 06 	call	0xd32	; 0xd32 <__subsf3>
     662:	7b 01       	movw	r14, r22
     664:	8c 01       	movw	r16, r24
     666:	c6 01       	movw	r24, r12
     668:	b5 01       	movw	r22, r10
     66a:	0e 94 31 07 	call	0xe62	; 0xe62 <__floatsisf>
     66e:	9b 01       	movw	r18, r22
     670:	ac 01       	movw	r20, r24
     672:	c8 01       	movw	r24, r16
     674:	b7 01       	movw	r22, r14
     676:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__mulsf3>
     67a:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fixsfsi>
     67e:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_sendNumber>
     682:	0f 90       	pop	r0
     684:	0f 90       	pop	r0
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	cf 91       	pop	r28
     68c:	df 91       	pop	r29
     68e:	1f 91       	pop	r17
     690:	0f 91       	pop	r16
     692:	ff 90       	pop	r15
     694:	ef 90       	pop	r14
     696:	df 90       	pop	r13
     698:	cf 90       	pop	r12
     69a:	bf 90       	pop	r11
     69c:	af 90       	pop	r10
     69e:	9f 90       	pop	r9
     6a0:	8f 90       	pop	r8
     6a2:	7f 90       	pop	r7
     6a4:	6f 90       	pop	r6
     6a6:	5f 90       	pop	r5
     6a8:	4f 90       	pop	r4
     6aa:	3f 90       	pop	r3
     6ac:	2f 90       	pop	r2
     6ae:	08 95       	ret

000006b0 <LCD_SendString>:
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	ec 01       	movw	r28, r24
     6b8:	10 e0       	ldi	r17, 0x00	; 0
     6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <LCD_SendString+0x12>
     6bc:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     6c0:	1f 5f       	subi	r17, 0xFF	; 255
     6c2:	fe 01       	movw	r30, r28
     6c4:	e1 0f       	add	r30, r17
     6c6:	f1 1d       	adc	r31, r1
     6c8:	80 81       	ld	r24, Z
     6ca:	88 23       	and	r24, r24
     6cc:	b9 f7       	brne	.-18     	; 0x6bc <LCD_SendString+0xc>
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	08 95       	ret

000006d6 <LCD_sendCommand>:
     6d6:	1f 93       	push	r17
     6d8:	18 2f       	mov	r17, r24
     6da:	48 2f       	mov	r20, r24
     6dc:	44 1f       	adc	r20, r20
     6de:	44 27       	eor	r20, r20
     6e0:	44 1f       	adc	r20, r20
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	64 e0       	ldi	r22, 0x04	; 4
     6e6:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     6ea:	41 2f       	mov	r20, r17
     6ec:	42 95       	swap	r20
     6ee:	46 95       	lsr	r20
     6f0:	46 95       	lsr	r20
     6f2:	41 70       	andi	r20, 0x01	; 1
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	62 e0       	ldi	r22, 0x02	; 2
     6f8:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     6fc:	41 2f       	mov	r20, r17
     6fe:	42 95       	swap	r20
     700:	46 95       	lsr	r20
     702:	41 70       	andi	r20, 0x01	; 1
     704:	81 e0       	ldi	r24, 0x01	; 1
     706:	61 e0       	ldi	r22, 0x01	; 1
     708:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     70c:	41 2f       	mov	r20, r17
     70e:	42 95       	swap	r20
     710:	41 70       	andi	r20, 0x01	; 1
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	60 e0       	ldi	r22, 0x00	; 0
     716:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	63 e0       	ldi	r22, 0x03	; 3
     71e:	40 e0       	ldi	r20, 0x00	; 0
     720:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     724:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_SendFallingEdge>
     728:	41 2f       	mov	r20, r17
     72a:	46 95       	lsr	r20
     72c:	46 95       	lsr	r20
     72e:	46 95       	lsr	r20
     730:	41 70       	andi	r20, 0x01	; 1
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	64 e0       	ldi	r22, 0x04	; 4
     736:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     73a:	41 2f       	mov	r20, r17
     73c:	46 95       	lsr	r20
     73e:	46 95       	lsr	r20
     740:	41 70       	andi	r20, 0x01	; 1
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	62 e0       	ldi	r22, 0x02	; 2
     746:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     74a:	41 2f       	mov	r20, r17
     74c:	46 95       	lsr	r20
     74e:	41 70       	andi	r20, 0x01	; 1
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	61 e0       	ldi	r22, 0x01	; 1
     754:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     758:	11 70       	andi	r17, 0x01	; 1
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	60 e0       	ldi	r22, 0x00	; 0
     75e:	41 2f       	mov	r20, r17
     760:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     764:	80 e0       	ldi	r24, 0x00	; 0
     766:	63 e0       	ldi	r22, 0x03	; 3
     768:	40 e0       	ldi	r20, 0x00	; 0
     76a:	0e 94 74 04 	call	0x8e8	; 0x8e8 <DIO_voidSetPinValue>
     76e:	0e 94 2b 02 	call	0x456	; 0x456 <LCD_SendFallingEdge>
     772:	80 ea       	ldi	r24, 0xA0	; 160
     774:	9f e0       	ldi	r25, 0x0F	; 15
     776:	01 97       	sbiw	r24, 0x01	; 1
     778:	f1 f7       	brne	.-4      	; 0x776 <LCD_sendCommand+0xa0>
     77a:	1f 91       	pop	r17
     77c:	08 95       	ret

0000077e <LCD_clearScreen>:
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     784:	08 95       	ret

00000786 <LCD_moveCursor>:
     786:	88 23       	and	r24, r24
     788:	29 f4       	brne	.+10     	; 0x794 <LCD_moveCursor+0xe>
     78a:	64 31       	cpi	r22, 0x14	; 20
     78c:	d8 f4       	brcc	.+54     	; 0x7c4 <LCD_moveCursor+0x3e>
     78e:	86 2f       	mov	r24, r22
     790:	80 58       	subi	r24, 0x80	; 128
     792:	0d c0       	rjmp	.+26     	; 0x7ae <LCD_moveCursor+0x28>
     794:	81 30       	cpi	r24, 0x01	; 1
     796:	29 f4       	brne	.+10     	; 0x7a2 <LCD_moveCursor+0x1c>
     798:	64 31       	cpi	r22, 0x14	; 20
     79a:	a0 f4       	brcc	.+40     	; 0x7c4 <LCD_moveCursor+0x3e>
     79c:	86 2f       	mov	r24, r22
     79e:	80 54       	subi	r24, 0x40	; 64
     7a0:	06 c0       	rjmp	.+12     	; 0x7ae <LCD_moveCursor+0x28>
     7a2:	82 30       	cpi	r24, 0x02	; 2
     7a4:	39 f4       	brne	.+14     	; 0x7b4 <LCD_moveCursor+0x2e>
     7a6:	64 31       	cpi	r22, 0x14	; 20
     7a8:	68 f4       	brcc	.+26     	; 0x7c4 <LCD_moveCursor+0x3e>
     7aa:	86 2f       	mov	r24, r22
     7ac:	8c 56       	subi	r24, 0x6C	; 108
     7ae:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     7b2:	08 95       	ret
     7b4:	83 30       	cpi	r24, 0x03	; 3
     7b6:	31 f4       	brne	.+12     	; 0x7c4 <LCD_moveCursor+0x3e>
     7b8:	64 31       	cpi	r22, 0x14	; 20
     7ba:	20 f4       	brcc	.+8      	; 0x7c4 <LCD_moveCursor+0x3e>
     7bc:	86 2f       	mov	r24, r22
     7be:	8c 52       	subi	r24, 0x2C	; 44
     7c0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     7c4:	08 95       	ret

000007c6 <LCD_sendSpecialChar>:
     7c6:	df 92       	push	r13
     7c8:	ef 92       	push	r14
     7ca:	ff 92       	push	r15
     7cc:	0f 93       	push	r16
     7ce:	1f 93       	push	r17
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	7c 01       	movw	r14, r24
     7d6:	16 2f       	mov	r17, r22
     7d8:	04 2f       	mov	r16, r20
     7da:	d2 2e       	mov	r13, r18
     7dc:	44 30       	cpi	r20, 0x04	; 4
     7de:	f8 f4       	brcc	.+62     	; 0x81e <LCD_sendSpecialChar+0x58>
     7e0:	83 e1       	ldi	r24, 0x13	; 19
     7e2:	82 17       	cp	r24, r18
     7e4:	e0 f0       	brcs	.+56     	; 0x81e <LCD_sendSpecialChar+0x58>
     7e6:	68 30       	cpi	r22, 0x08	; 8
     7e8:	d0 f4       	brcc	.+52     	; 0x81e <LCD_sendSpecialChar+0x58>
     7ea:	86 2f       	mov	r24, r22
     7ec:	88 0f       	add	r24, r24
     7ee:	88 0f       	add	r24, r24
     7f0:	88 0f       	add	r24, r24
     7f2:	80 5c       	subi	r24, 0xC0	; 192
     7f4:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     7f8:	c0 e0       	ldi	r28, 0x00	; 0
     7fa:	d0 e0       	ldi	r29, 0x00	; 0
     7fc:	f7 01       	movw	r30, r14
     7fe:	ec 0f       	add	r30, r28
     800:	fd 1f       	adc	r31, r29
     802:	80 81       	ld	r24, Z
     804:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     808:	21 96       	adiw	r28, 0x01	; 1
     80a:	c8 30       	cpi	r28, 0x08	; 8
     80c:	d1 05       	cpc	r29, r1
     80e:	b1 f7       	brne	.-20     	; 0x7fc <LCD_sendSpecialChar+0x36>
     810:	80 2f       	mov	r24, r16
     812:	6d 2d       	mov	r22, r13
     814:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_moveCursor>
     818:	81 2f       	mov	r24, r17
     81a:	0e 94 42 02 	call	0x484	; 0x484 <LCD_displayCharacter>
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	1f 91       	pop	r17
     824:	0f 91       	pop	r16
     826:	ff 90       	pop	r15
     828:	ef 90       	pop	r14
     82a:	df 90       	pop	r13
     82c:	08 95       	ret

0000082e <LCD_displayString_XY>:
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	ea 01       	movw	r28, r20
     834:	88 23       	and	r24, r24
     836:	29 f4       	brne	.+10     	; 0x842 <LCD_displayString_XY+0x14>
     838:	64 31       	cpi	r22, 0x14	; 20
     83a:	c8 f4       	brcc	.+50     	; 0x86e <__stack+0xf>
     83c:	86 2f       	mov	r24, r22
     83e:	80 58       	subi	r24, 0x80	; 128
     840:	14 c0       	rjmp	.+40     	; 0x86a <__stack+0xb>
     842:	81 30       	cpi	r24, 0x01	; 1
     844:	29 f4       	brne	.+10     	; 0x850 <LCD_displayString_XY+0x22>
     846:	64 31       	cpi	r22, 0x14	; 20
     848:	90 f4       	brcc	.+36     	; 0x86e <__stack+0xf>
     84a:	86 2f       	mov	r24, r22
     84c:	80 54       	subi	r24, 0x40	; 64
     84e:	0d c0       	rjmp	.+26     	; 0x86a <__stack+0xb>
     850:	82 30       	cpi	r24, 0x02	; 2
     852:	29 f4       	brne	.+10     	; 0x85e <LCD_displayString_XY+0x30>
     854:	64 31       	cpi	r22, 0x14	; 20
     856:	58 f4       	brcc	.+22     	; 0x86e <__stack+0xf>
     858:	86 2f       	mov	r24, r22
     85a:	8c 56       	subi	r24, 0x6C	; 108
     85c:	06 c0       	rjmp	.+12     	; 0x86a <__stack+0xb>
     85e:	83 30       	cpi	r24, 0x03	; 3
     860:	31 f4       	brne	.+12     	; 0x86e <__stack+0xf>
     862:	64 31       	cpi	r22, 0x14	; 20
     864:	20 f4       	brcc	.+8      	; 0x86e <__stack+0xf>
     866:	86 2f       	mov	r24, r22
     868:	8c 52       	subi	r24, 0x2C	; 44
     86a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     86e:	ce 01       	movw	r24, r28
     870:	0e 94 58 03 	call	0x6b0	; 0x6b0 <LCD_SendString>
     874:	df 91       	pop	r29
     876:	cf 91       	pop	r28
     878:	08 95       	ret

0000087a <LCD_init>:
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	63 e0       	ldi	r22, 0x03	; 3
     87e:	41 e0       	ldi	r20, 0x01	; 1
     880:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
     884:	80 e0       	ldi	r24, 0x00	; 0
     886:	62 e0       	ldi	r22, 0x02	; 2
     888:	41 e0       	ldi	r20, 0x01	; 1
     88a:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
     88e:	88 ec       	ldi	r24, 0xC8	; 200
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	20 e9       	ldi	r18, 0x90	; 144
     894:	31 e0       	ldi	r19, 0x01	; 1
     896:	f9 01       	movw	r30, r18
     898:	31 97       	sbiw	r30, 0x01	; 1
     89a:	f1 f7       	brne	.-4      	; 0x898 <LCD_init+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     89c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     89e:	d9 f7       	brne	.-10     	; 0x896 <LCD_init+0x1c>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	41 e0       	ldi	r20, 0x01	; 1
     8a6:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	61 e0       	ldi	r22, 0x01	; 1
     8ae:	41 e0       	ldi	r20, 0x01	; 1
     8b0:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	62 e0       	ldi	r22, 0x02	; 2
     8b8:	41 e0       	ldi	r20, 0x01	; 1
     8ba:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	64 e0       	ldi	r22, 0x04	; 4
     8c2:	41 e0       	ldi	r20, 0x01	; 1
     8c4:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
     8c8:	83 e3       	ldi	r24, 0x33	; 51
     8ca:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     8ce:	82 e3       	ldi	r24, 0x32	; 50
     8d0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     8d4:	88 e2       	ldi	r24, 0x28	; 40
     8d6:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     8da:	8c e0       	ldi	r24, 0x0C	; 12
     8dc:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     8e0:	81 e0       	ldi	r24, 0x01	; 1
     8e2:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_sendCommand>
     8e6:	08 95       	ret

000008e8 <DIO_voidSetPinValue>:
     8e8:	84 30       	cpi	r24, 0x04	; 4
     8ea:	08 f0       	brcs	.+2      	; 0x8ee <DIO_voidSetPinValue+0x6>
     8ec:	7f c0       	rjmp	.+254    	; 0x9ec <DIO_voidSetPinValue+0x104>
     8ee:	68 30       	cpi	r22, 0x08	; 8
     8f0:	08 f0       	brcs	.+2      	; 0x8f4 <DIO_voidSetPinValue+0xc>
     8f2:	7c c0       	rjmp	.+248    	; 0x9ec <DIO_voidSetPinValue+0x104>
     8f4:	81 30       	cpi	r24, 0x01	; 1
     8f6:	31 f1       	breq	.+76     	; 0x944 <DIO_voidSetPinValue+0x5c>
     8f8:	81 30       	cpi	r24, 0x01	; 1
     8fa:	38 f0       	brcs	.+14     	; 0x90a <DIO_voidSetPinValue+0x22>
     8fc:	82 30       	cpi	r24, 0x02	; 2
     8fe:	09 f4       	brne	.+2      	; 0x902 <DIO_voidSetPinValue+0x1a>
     900:	3e c0       	rjmp	.+124    	; 0x97e <DIO_voidSetPinValue+0x96>
     902:	83 30       	cpi	r24, 0x03	; 3
     904:	09 f0       	breq	.+2      	; 0x908 <DIO_voidSetPinValue+0x20>
     906:	72 c0       	rjmp	.+228    	; 0x9ec <DIO_voidSetPinValue+0x104>
     908:	56 c0       	rjmp	.+172    	; 0x9b6 <DIO_voidSetPinValue+0xce>
     90a:	44 23       	and	r20, r20
     90c:	21 f0       	breq	.+8      	; 0x916 <DIO_voidSetPinValue+0x2e>
     90e:	41 30       	cpi	r20, 0x01	; 1
     910:	09 f0       	breq	.+2      	; 0x914 <DIO_voidSetPinValue+0x2c>
     912:	6c c0       	rjmp	.+216    	; 0x9ec <DIO_voidSetPinValue+0x104>
     914:	0c c0       	rjmp	.+24     	; 0x92e <DIO_voidSetPinValue+0x46>
     916:	2b b3       	in	r18, 0x1b	; 27
     918:	81 e0       	ldi	r24, 0x01	; 1
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	02 c0       	rjmp	.+4      	; 0x922 <DIO_voidSetPinValue+0x3a>
     91e:	88 0f       	add	r24, r24
     920:	99 1f       	adc	r25, r25
     922:	6a 95       	dec	r22
     924:	e2 f7       	brpl	.-8      	; 0x91e <DIO_voidSetPinValue+0x36>
     926:	80 95       	com	r24
     928:	82 23       	and	r24, r18
     92a:	8b bb       	out	0x1b, r24	; 27
     92c:	08 95       	ret
     92e:	2b b3       	in	r18, 0x1b	; 27
     930:	81 e0       	ldi	r24, 0x01	; 1
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	02 c0       	rjmp	.+4      	; 0x93a <DIO_voidSetPinValue+0x52>
     936:	88 0f       	add	r24, r24
     938:	99 1f       	adc	r25, r25
     93a:	6a 95       	dec	r22
     93c:	e2 f7       	brpl	.-8      	; 0x936 <DIO_voidSetPinValue+0x4e>
     93e:	28 2b       	or	r18, r24
     940:	2b bb       	out	0x1b, r18	; 27
     942:	08 95       	ret
     944:	44 23       	and	r20, r20
     946:	21 f0       	breq	.+8      	; 0x950 <DIO_voidSetPinValue+0x68>
     948:	41 30       	cpi	r20, 0x01	; 1
     94a:	09 f0       	breq	.+2      	; 0x94e <DIO_voidSetPinValue+0x66>
     94c:	4f c0       	rjmp	.+158    	; 0x9ec <DIO_voidSetPinValue+0x104>
     94e:	0c c0       	rjmp	.+24     	; 0x968 <DIO_voidSetPinValue+0x80>
     950:	28 b3       	in	r18, 0x18	; 24
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	02 c0       	rjmp	.+4      	; 0x95c <DIO_voidSetPinValue+0x74>
     958:	88 0f       	add	r24, r24
     95a:	99 1f       	adc	r25, r25
     95c:	6a 95       	dec	r22
     95e:	e2 f7       	brpl	.-8      	; 0x958 <DIO_voidSetPinValue+0x70>
     960:	80 95       	com	r24
     962:	82 23       	and	r24, r18
     964:	88 bb       	out	0x18, r24	; 24
     966:	08 95       	ret
     968:	28 b3       	in	r18, 0x18	; 24
     96a:	81 e0       	ldi	r24, 0x01	; 1
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	02 c0       	rjmp	.+4      	; 0x974 <DIO_voidSetPinValue+0x8c>
     970:	88 0f       	add	r24, r24
     972:	99 1f       	adc	r25, r25
     974:	6a 95       	dec	r22
     976:	e2 f7       	brpl	.-8      	; 0x970 <DIO_voidSetPinValue+0x88>
     978:	28 2b       	or	r18, r24
     97a:	28 bb       	out	0x18, r18	; 24
     97c:	08 95       	ret
     97e:	44 23       	and	r20, r20
     980:	19 f0       	breq	.+6      	; 0x988 <DIO_voidSetPinValue+0xa0>
     982:	41 30       	cpi	r20, 0x01	; 1
     984:	99 f5       	brne	.+102    	; 0x9ec <DIO_voidSetPinValue+0x104>
     986:	0c c0       	rjmp	.+24     	; 0x9a0 <DIO_voidSetPinValue+0xb8>
     988:	25 b3       	in	r18, 0x15	; 21
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	02 c0       	rjmp	.+4      	; 0x994 <DIO_voidSetPinValue+0xac>
     990:	88 0f       	add	r24, r24
     992:	99 1f       	adc	r25, r25
     994:	6a 95       	dec	r22
     996:	e2 f7       	brpl	.-8      	; 0x990 <DIO_voidSetPinValue+0xa8>
     998:	80 95       	com	r24
     99a:	82 23       	and	r24, r18
     99c:	85 bb       	out	0x15, r24	; 21
     99e:	08 95       	ret
     9a0:	25 b3       	in	r18, 0x15	; 21
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	02 c0       	rjmp	.+4      	; 0x9ac <DIO_voidSetPinValue+0xc4>
     9a8:	88 0f       	add	r24, r24
     9aa:	99 1f       	adc	r25, r25
     9ac:	6a 95       	dec	r22
     9ae:	e2 f7       	brpl	.-8      	; 0x9a8 <DIO_voidSetPinValue+0xc0>
     9b0:	28 2b       	or	r18, r24
     9b2:	25 bb       	out	0x15, r18	; 21
     9b4:	08 95       	ret
     9b6:	44 23       	and	r20, r20
     9b8:	19 f0       	breq	.+6      	; 0x9c0 <DIO_voidSetPinValue+0xd8>
     9ba:	41 30       	cpi	r20, 0x01	; 1
     9bc:	b9 f4       	brne	.+46     	; 0x9ec <DIO_voidSetPinValue+0x104>
     9be:	0c c0       	rjmp	.+24     	; 0x9d8 <DIO_voidSetPinValue+0xf0>
     9c0:	22 b3       	in	r18, 0x12	; 18
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	02 c0       	rjmp	.+4      	; 0x9cc <DIO_voidSetPinValue+0xe4>
     9c8:	88 0f       	add	r24, r24
     9ca:	99 1f       	adc	r25, r25
     9cc:	6a 95       	dec	r22
     9ce:	e2 f7       	brpl	.-8      	; 0x9c8 <DIO_voidSetPinValue+0xe0>
     9d0:	80 95       	com	r24
     9d2:	82 23       	and	r24, r18
     9d4:	82 bb       	out	0x12, r24	; 18
     9d6:	08 95       	ret
     9d8:	22 b3       	in	r18, 0x12	; 18
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	02 c0       	rjmp	.+4      	; 0x9e4 <DIO_voidSetPinValue+0xfc>
     9e0:	88 0f       	add	r24, r24
     9e2:	99 1f       	adc	r25, r25
     9e4:	6a 95       	dec	r22
     9e6:	e2 f7       	brpl	.-8      	; 0x9e0 <DIO_voidSetPinValue+0xf8>
     9e8:	28 2b       	or	r18, r24
     9ea:	22 bb       	out	0x12, r18	; 18
     9ec:	08 95       	ret

000009ee <DIO_voidTogglePinValue>:
     9ee:	84 30       	cpi	r24, 0x04	; 4
     9f0:	00 f5       	brcc	.+64     	; 0xa32 <DIO_voidTogglePinValue+0x44>
     9f2:	68 30       	cpi	r22, 0x08	; 8
     9f4:	f0 f4       	brcc	.+60     	; 0xa32 <DIO_voidTogglePinValue+0x44>
     9f6:	81 30       	cpi	r24, 0x01	; 1
     9f8:	39 f0       	breq	.+14     	; 0xa08 <DIO_voidTogglePinValue+0x1a>
     9fa:	81 30       	cpi	r24, 0x01	; 1
     9fc:	28 f0       	brcs	.+10     	; 0xa08 <DIO_voidTogglePinValue+0x1a>
     9fe:	82 30       	cpi	r24, 0x02	; 2
     a00:	19 f0       	breq	.+6      	; 0xa08 <DIO_voidTogglePinValue+0x1a>
     a02:	83 30       	cpi	r24, 0x03	; 3
     a04:	b1 f4       	brne	.+44     	; 0xa32 <DIO_voidTogglePinValue+0x44>
     a06:	0b c0       	rjmp	.+22     	; 0xa1e <DIO_voidTogglePinValue+0x30>
     a08:	28 b3       	in	r18, 0x18	; 24
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	02 c0       	rjmp	.+4      	; 0xa14 <DIO_voidTogglePinValue+0x26>
     a10:	88 0f       	add	r24, r24
     a12:	99 1f       	adc	r25, r25
     a14:	6a 95       	dec	r22
     a16:	e2 f7       	brpl	.-8      	; 0xa10 <DIO_voidTogglePinValue+0x22>
     a18:	28 27       	eor	r18, r24
     a1a:	28 bb       	out	0x18, r18	; 24
     a1c:	08 95       	ret
     a1e:	28 b3       	in	r18, 0x18	; 24
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	02 c0       	rjmp	.+4      	; 0xa2a <DIO_voidTogglePinValue+0x3c>
     a26:	88 0f       	add	r24, r24
     a28:	99 1f       	adc	r25, r25
     a2a:	6a 95       	dec	r22
     a2c:	e2 f7       	brpl	.-8      	; 0xa26 <DIO_voidTogglePinValue+0x38>
     a2e:	28 27       	eor	r18, r24
     a30:	28 bb       	out	0x18, r18	; 24
     a32:	08 95       	ret

00000a34 <DIO_voidSetPinDirection>:
     a34:	84 30       	cpi	r24, 0x04	; 4
     a36:	08 f0       	brcs	.+2      	; 0xa3a <DIO_voidSetPinDirection+0x6>
     a38:	7f c0       	rjmp	.+254    	; 0xb38 <DIO_voidSetPinDirection+0x104>
     a3a:	68 30       	cpi	r22, 0x08	; 8
     a3c:	08 f0       	brcs	.+2      	; 0xa40 <DIO_voidSetPinDirection+0xc>
     a3e:	7c c0       	rjmp	.+248    	; 0xb38 <DIO_voidSetPinDirection+0x104>
     a40:	81 30       	cpi	r24, 0x01	; 1
     a42:	31 f1       	breq	.+76     	; 0xa90 <DIO_voidSetPinDirection+0x5c>
     a44:	81 30       	cpi	r24, 0x01	; 1
     a46:	38 f0       	brcs	.+14     	; 0xa56 <DIO_voidSetPinDirection+0x22>
     a48:	82 30       	cpi	r24, 0x02	; 2
     a4a:	09 f4       	brne	.+2      	; 0xa4e <DIO_voidSetPinDirection+0x1a>
     a4c:	3e c0       	rjmp	.+124    	; 0xaca <DIO_voidSetPinDirection+0x96>
     a4e:	83 30       	cpi	r24, 0x03	; 3
     a50:	09 f0       	breq	.+2      	; 0xa54 <DIO_voidSetPinDirection+0x20>
     a52:	72 c0       	rjmp	.+228    	; 0xb38 <DIO_voidSetPinDirection+0x104>
     a54:	56 c0       	rjmp	.+172    	; 0xb02 <DIO_voidSetPinDirection+0xce>
     a56:	44 23       	and	r20, r20
     a58:	21 f0       	breq	.+8      	; 0xa62 <DIO_voidSetPinDirection+0x2e>
     a5a:	41 30       	cpi	r20, 0x01	; 1
     a5c:	09 f0       	breq	.+2      	; 0xa60 <DIO_voidSetPinDirection+0x2c>
     a5e:	6c c0       	rjmp	.+216    	; 0xb38 <DIO_voidSetPinDirection+0x104>
     a60:	0c c0       	rjmp	.+24     	; 0xa7a <DIO_voidSetPinDirection+0x46>
     a62:	2a b3       	in	r18, 0x1a	; 26
     a64:	81 e0       	ldi	r24, 0x01	; 1
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	02 c0       	rjmp	.+4      	; 0xa6e <DIO_voidSetPinDirection+0x3a>
     a6a:	88 0f       	add	r24, r24
     a6c:	99 1f       	adc	r25, r25
     a6e:	6a 95       	dec	r22
     a70:	e2 f7       	brpl	.-8      	; 0xa6a <DIO_voidSetPinDirection+0x36>
     a72:	80 95       	com	r24
     a74:	82 23       	and	r24, r18
     a76:	8a bb       	out	0x1a, r24	; 26
     a78:	08 95       	ret
     a7a:	2a b3       	in	r18, 0x1a	; 26
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <DIO_voidSetPinDirection+0x52>
     a82:	88 0f       	add	r24, r24
     a84:	99 1f       	adc	r25, r25
     a86:	6a 95       	dec	r22
     a88:	e2 f7       	brpl	.-8      	; 0xa82 <DIO_voidSetPinDirection+0x4e>
     a8a:	28 2b       	or	r18, r24
     a8c:	2a bb       	out	0x1a, r18	; 26
     a8e:	08 95       	ret
     a90:	44 23       	and	r20, r20
     a92:	21 f0       	breq	.+8      	; 0xa9c <DIO_voidSetPinDirection+0x68>
     a94:	41 30       	cpi	r20, 0x01	; 1
     a96:	09 f0       	breq	.+2      	; 0xa9a <DIO_voidSetPinDirection+0x66>
     a98:	4f c0       	rjmp	.+158    	; 0xb38 <DIO_voidSetPinDirection+0x104>
     a9a:	0c c0       	rjmp	.+24     	; 0xab4 <DIO_voidSetPinDirection+0x80>
     a9c:	27 b3       	in	r18, 0x17	; 23
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	02 c0       	rjmp	.+4      	; 0xaa8 <DIO_voidSetPinDirection+0x74>
     aa4:	88 0f       	add	r24, r24
     aa6:	99 1f       	adc	r25, r25
     aa8:	6a 95       	dec	r22
     aaa:	e2 f7       	brpl	.-8      	; 0xaa4 <DIO_voidSetPinDirection+0x70>
     aac:	80 95       	com	r24
     aae:	82 23       	and	r24, r18
     ab0:	87 bb       	out	0x17, r24	; 23
     ab2:	08 95       	ret
     ab4:	27 b3       	in	r18, 0x17	; 23
     ab6:	81 e0       	ldi	r24, 0x01	; 1
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <DIO_voidSetPinDirection+0x8c>
     abc:	88 0f       	add	r24, r24
     abe:	99 1f       	adc	r25, r25
     ac0:	6a 95       	dec	r22
     ac2:	e2 f7       	brpl	.-8      	; 0xabc <DIO_voidSetPinDirection+0x88>
     ac4:	28 2b       	or	r18, r24
     ac6:	27 bb       	out	0x17, r18	; 23
     ac8:	08 95       	ret
     aca:	44 23       	and	r20, r20
     acc:	19 f0       	breq	.+6      	; 0xad4 <DIO_voidSetPinDirection+0xa0>
     ace:	41 30       	cpi	r20, 0x01	; 1
     ad0:	99 f5       	brne	.+102    	; 0xb38 <DIO_voidSetPinDirection+0x104>
     ad2:	0c c0       	rjmp	.+24     	; 0xaec <DIO_voidSetPinDirection+0xb8>
     ad4:	24 b3       	in	r18, 0x14	; 20
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	02 c0       	rjmp	.+4      	; 0xae0 <DIO_voidSetPinDirection+0xac>
     adc:	88 0f       	add	r24, r24
     ade:	99 1f       	adc	r25, r25
     ae0:	6a 95       	dec	r22
     ae2:	e2 f7       	brpl	.-8      	; 0xadc <DIO_voidSetPinDirection+0xa8>
     ae4:	80 95       	com	r24
     ae6:	82 23       	and	r24, r18
     ae8:	84 bb       	out	0x14, r24	; 20
     aea:	08 95       	ret
     aec:	24 b3       	in	r18, 0x14	; 20
     aee:	81 e0       	ldi	r24, 0x01	; 1
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	02 c0       	rjmp	.+4      	; 0xaf8 <DIO_voidSetPinDirection+0xc4>
     af4:	88 0f       	add	r24, r24
     af6:	99 1f       	adc	r25, r25
     af8:	6a 95       	dec	r22
     afa:	e2 f7       	brpl	.-8      	; 0xaf4 <DIO_voidSetPinDirection+0xc0>
     afc:	28 2b       	or	r18, r24
     afe:	24 bb       	out	0x14, r18	; 20
     b00:	08 95       	ret
     b02:	44 23       	and	r20, r20
     b04:	19 f0       	breq	.+6      	; 0xb0c <DIO_voidSetPinDirection+0xd8>
     b06:	41 30       	cpi	r20, 0x01	; 1
     b08:	b9 f4       	brne	.+46     	; 0xb38 <DIO_voidSetPinDirection+0x104>
     b0a:	0c c0       	rjmp	.+24     	; 0xb24 <DIO_voidSetPinDirection+0xf0>
     b0c:	21 b3       	in	r18, 0x11	; 17
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	02 c0       	rjmp	.+4      	; 0xb18 <DIO_voidSetPinDirection+0xe4>
     b14:	88 0f       	add	r24, r24
     b16:	99 1f       	adc	r25, r25
     b18:	6a 95       	dec	r22
     b1a:	e2 f7       	brpl	.-8      	; 0xb14 <DIO_voidSetPinDirection+0xe0>
     b1c:	80 95       	com	r24
     b1e:	82 23       	and	r24, r18
     b20:	81 bb       	out	0x11, r24	; 17
     b22:	08 95       	ret
     b24:	21 b3       	in	r18, 0x11	; 17
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <DIO_voidSetPinDirection+0xfc>
     b2c:	88 0f       	add	r24, r24
     b2e:	99 1f       	adc	r25, r25
     b30:	6a 95       	dec	r22
     b32:	e2 f7       	brpl	.-8      	; 0xb2c <DIO_voidSetPinDirection+0xf8>
     b34:	28 2b       	or	r18, r24
     b36:	21 bb       	out	0x11, r18	; 17
     b38:	08 95       	ret

00000b3a <DIO_voidGetPinValue>:
     b3a:	84 30       	cpi	r24, 0x04	; 4
     b3c:	d0 f4       	brcc	.+52     	; 0xb72 <DIO_voidGetPinValue+0x38>
     b3e:	68 30       	cpi	r22, 0x08	; 8
     b40:	c0 f4       	brcc	.+48     	; 0xb72 <DIO_voidGetPinValue+0x38>
     b42:	81 30       	cpi	r24, 0x01	; 1
     b44:	49 f0       	breq	.+18     	; 0xb58 <DIO_voidGetPinValue+0x1e>
     b46:	81 30       	cpi	r24, 0x01	; 1
     b48:	28 f0       	brcs	.+10     	; 0xb54 <DIO_voidGetPinValue+0x1a>
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	39 f0       	breq	.+14     	; 0xb5c <DIO_voidGetPinValue+0x22>
     b4e:	83 30       	cpi	r24, 0x03	; 3
     b50:	81 f4       	brne	.+32     	; 0xb72 <DIO_voidGetPinValue+0x38>
     b52:	06 c0       	rjmp	.+12     	; 0xb60 <DIO_voidGetPinValue+0x26>
     b54:	89 b3       	in	r24, 0x19	; 25
     b56:	05 c0       	rjmp	.+10     	; 0xb62 <DIO_voidGetPinValue+0x28>
     b58:	86 b3       	in	r24, 0x16	; 22
     b5a:	03 c0       	rjmp	.+6      	; 0xb62 <DIO_voidGetPinValue+0x28>
     b5c:	83 b3       	in	r24, 0x13	; 19
     b5e:	01 c0       	rjmp	.+2      	; 0xb62 <DIO_voidGetPinValue+0x28>
     b60:	80 b3       	in	r24, 0x10	; 16
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	02 c0       	rjmp	.+4      	; 0xb6a <DIO_voidGetPinValue+0x30>
     b66:	95 95       	asr	r25
     b68:	87 95       	ror	r24
     b6a:	6a 95       	dec	r22
     b6c:	e2 f7       	brpl	.-8      	; 0xb66 <DIO_voidGetPinValue+0x2c>
     b6e:	81 70       	andi	r24, 0x01	; 1
     b70:	08 95       	ret
     b72:	85 e0       	ldi	r24, 0x05	; 5
     b74:	08 95       	ret

00000b76 <DIO_voidSetPortValue>:
     b76:	84 30       	cpi	r24, 0x04	; 4
     b78:	80 f4       	brcc	.+32     	; 0xb9a <DIO_voidSetPortValue+0x24>
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	49 f0       	breq	.+18     	; 0xb90 <DIO_voidSetPortValue+0x1a>
     b7e:	81 30       	cpi	r24, 0x01	; 1
     b80:	28 f0       	brcs	.+10     	; 0xb8c <DIO_voidSetPortValue+0x16>
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	39 f0       	breq	.+14     	; 0xb94 <DIO_voidSetPortValue+0x1e>
     b86:	83 30       	cpi	r24, 0x03	; 3
     b88:	41 f4       	brne	.+16     	; 0xb9a <DIO_voidSetPortValue+0x24>
     b8a:	06 c0       	rjmp	.+12     	; 0xb98 <DIO_voidSetPortValue+0x22>
     b8c:	6b bb       	out	0x1b, r22	; 27
     b8e:	08 95       	ret
     b90:	68 bb       	out	0x18, r22	; 24
     b92:	08 95       	ret
     b94:	65 bb       	out	0x15, r22	; 21
     b96:	08 95       	ret
     b98:	62 bb       	out	0x12, r22	; 18
     b9a:	08 95       	ret

00000b9c <DIO_voidSetPortDirection>:
     b9c:	84 30       	cpi	r24, 0x04	; 4
     b9e:	80 f4       	brcc	.+32     	; 0xbc0 <DIO_voidSetPortDirection+0x24>
     ba0:	81 30       	cpi	r24, 0x01	; 1
     ba2:	49 f0       	breq	.+18     	; 0xbb6 <DIO_voidSetPortDirection+0x1a>
     ba4:	81 30       	cpi	r24, 0x01	; 1
     ba6:	28 f0       	brcs	.+10     	; 0xbb2 <DIO_voidSetPortDirection+0x16>
     ba8:	82 30       	cpi	r24, 0x02	; 2
     baa:	39 f0       	breq	.+14     	; 0xbba <DIO_voidSetPortDirection+0x1e>
     bac:	83 30       	cpi	r24, 0x03	; 3
     bae:	41 f4       	brne	.+16     	; 0xbc0 <DIO_voidSetPortDirection+0x24>
     bb0:	06 c0       	rjmp	.+12     	; 0xbbe <DIO_voidSetPortDirection+0x22>
     bb2:	6a bb       	out	0x1a, r22	; 26
     bb4:	08 95       	ret
     bb6:	67 bb       	out	0x17, r22	; 23
     bb8:	08 95       	ret
     bba:	64 bb       	out	0x14, r22	; 20
     bbc:	08 95       	ret
     bbe:	61 bb       	out	0x11, r22	; 17
     bc0:	08 95       	ret

00000bc2 <DIO_voidGetPortValue>:
     bc2:	84 30       	cpi	r24, 0x04	; 4
     bc4:	88 f4       	brcc	.+34     	; 0xbe8 <DIO_voidGetPortValue+0x26>
     bc6:	81 30       	cpi	r24, 0x01	; 1
     bc8:	49 f0       	breq	.+18     	; 0xbdc <DIO_voidGetPortValue+0x1a>
     bca:	81 30       	cpi	r24, 0x01	; 1
     bcc:	28 f0       	brcs	.+10     	; 0xbd8 <DIO_voidGetPortValue+0x16>
     bce:	82 30       	cpi	r24, 0x02	; 2
     bd0:	39 f0       	breq	.+14     	; 0xbe0 <DIO_voidGetPortValue+0x1e>
     bd2:	83 30       	cpi	r24, 0x03	; 3
     bd4:	49 f4       	brne	.+18     	; 0xbe8 <DIO_voidGetPortValue+0x26>
     bd6:	06 c0       	rjmp	.+12     	; 0xbe4 <DIO_voidGetPortValue+0x22>
     bd8:	89 b3       	in	r24, 0x19	; 25
     bda:	08 95       	ret
     bdc:	86 b3       	in	r24, 0x16	; 22
     bde:	08 95       	ret
     be0:	83 b3       	in	r24, 0x13	; 19
     be2:	08 95       	ret
     be4:	80 b3       	in	r24, 0x10	; 16
     be6:	08 95       	ret
     be8:	85 e0       	ldi	r24, 0x05	; 5
     bea:	08 95       	ret

00000bec <tog_led>:
}

void tog_led(void){
    // _delay_ms(1000);
    // DIO_voidTogglePinValue(DIO_u8_PORTC, DIO_u8_PIN0);
     bec:	08 95       	ret

00000bee <sendValueToLCD>:
}

void sendValueToLCD(void)
{
    // _delay_ms(3000);
   val = ADC_readChannel(0);
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	0e 94 4a 06 	call	0xc94	; 0xc94 <ADC_readChannel>
     bf4:	90 93 6f 00 	sts	0x006F, r25
     bf8:	80 93 6e 00 	sts	0x006E, r24
    // _delay_ms(3000);
}
     bfc:	08 95       	ret

00000bfe <main>:

void sendValueToLCD(void);
void tog_led(void);

int main(void)
{
     bfe:	0f 93       	push	r16
     c00:	1f 93       	push	r17
     c02:	cf 93       	push	r28
     c04:	df 93       	push	r29
    u16 prev = 0;
    DIO_voidSetPinDirection(DIO_u8_PORTC, DIO_u8_PIN0, DIO_u8_OUTPUT);
     c06:	82 e0       	ldi	r24, 0x02	; 2
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	41 e0       	ldi	r20, 0x01	; 1
     c0c:	0e 94 1a 05 	call	0xa34	; 0xa34 <DIO_voidSetPinDirection>
    LCD_init();
     c10:	0e 94 3d 04 	call	0x87a	; 0x87a <LCD_init>
    timer0_void_init();
     c14:	0e 94 3e 00 	call	0x7c	; 0x7c <timer0_void_init>
    ADC_init();
     c18:	0e 94 3d 06 	call	0xc7a	; 0xc7a <ADC_init>
    ADC_autoTrigger_Enable();
     c1c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <ADC_autoTrigger_Enable>
    ADC_setCallBack(sendValueToLCD);
     c20:	87 ef       	ldi	r24, 0xF7	; 247
     c22:	95 e0       	ldi	r25, 0x05	; 5
     c24:	0e 94 6d 06 	call	0xcda	; 0xcda <ADC_setCallBack>
    ADC_interrupt_ENABLE();
     c28:	0e 94 67 06 	call	0xcce	; 0xcce <ADC_interrupt_ENABLE>
    timer0_Interrupt_OverFlow_Enable();
     c2c:	0e 94 58 00 	call	0xb0	; 0xb0 <timer0_Interrupt_OverFlow_Enable>
    setCallBack_OV_T0(tog_led);
     c30:	86 ef       	ldi	r24, 0xF6	; 246
     c32:	95 e0       	ldi	r25, 0x05	; 5
     c34:	0e 94 73 00 	call	0xe6	; 0xe6 <setCallBack_OV_T0>
    GIE_voidGlobalInterruptEnable();
     c38:	0e 94 37 06 	call	0xc6e	; 0xc6e <GIE_voidGlobalInterruptEnable>
     c3c:	00 e0       	ldi	r16, 0x00	; 0
     c3e:	10 e0       	ldi	r17, 0x00	; 0
    while (1)
    {
        if (prev != val)
     c40:	c0 91 6e 00 	lds	r28, 0x006E
     c44:	d0 91 6f 00 	lds	r29, 0x006F
     c48:	0c 17       	cp	r16, r28
     c4a:	1d 07       	cpc	r17, r29
     c4c:	19 f0       	breq	.+6      	; 0xc54 <main+0x56>
        {
            prev = val;
            LCD_clearScreen();
     c4e:	0e 94 bf 03 	call	0x77e	; 0x77e <LCD_clearScreen>
     c52:	8e 01       	movw	r16, r28
        }
        // LCD_clearScreen();
        LCD_moveCursor(0,0);
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	60 e0       	ldi	r22, 0x00	; 0
     c58:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_moveCursor>
        LCD_sendNumber((s32)val);
     c5c:	60 91 6e 00 	lds	r22, 0x006E
     c60:	70 91 6f 00 	lds	r23, 0x006F
     c64:	80 e0       	ldi	r24, 0x00	; 0
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	0e 94 96 02 	call	0x52c	; 0x52c <LCD_sendNumber>
     c6c:	e9 cf       	rjmp	.-46     	; 0xc40 <main+0x42>

00000c6e <GIE_voidGlobalInterruptEnable>:


//enable global interrupt
void GIE_voidGlobalInterruptEnable(void)
{
	SET_BIT(SREG, SREG_I);
     c6e:	ef e5       	ldi	r30, 0x5F	; 95
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	80 81       	ld	r24, Z
     c74:	80 68       	ori	r24, 0x80	; 128
     c76:	80 83       	st	Z, r24
}
     c78:	08 95       	ret

00000c7a <ADC_init>:
	/* ADMUX Register Bits Description:
	 * REFS1:0 = 00 to choose to connect external reference voltage by input this voltage through AREF pin
	 * ADLAR   = 0 right adjusted
	 * MUX4:0  = 00000 to choose channel 0 as initialization
	 */
	DDRA &= ~(1<<0); //make A0 input
     c7a:	ea e3       	ldi	r30, 0x3A	; 58
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	80 81       	ld	r24, Z
     c80:	8e 7f       	andi	r24, 0xFE	; 254
     c82:	80 83       	st	Z, r24
	DDRA &= ~(1<<1); //make A1 input
     c84:	80 81       	ld	r24, Z
     c86:	8d 7f       	andi	r24, 0xFD	; 253
     c88:	80 83       	st	Z, r24
	ADMUX = (1<<ADMUX_REFS0); // AREF=AVCC
     c8a:	80 e4       	ldi	r24, 0x40	; 64
     c8c:	87 b9       	out	0x07, r24	; 7
	 * ADEN    = 1 Enable ADC
	 * ADIE    = 0 Disable ADC Interrupt
	 * ADATE   = 0 Disable Auto Trigger
	 * ADPS2:0 = 011 to choose ADC_Clock = F_CPU/8 = 1Mhz/8 = 125Khz --> ADC must operate in range 50-200Khz
	 */
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0); //enable adc + PRrescalar div factor =128
     c8e:	87 e8       	ldi	r24, 0x87	; 135
     c90:	86 b9       	out	0x06, r24	; 6

}
     c92:	08 95       	ret

00000c94 <ADC_readChannel>:
u16 ADC_readChannel(u8 channel_num)
{
	/* Put Code Here */
	u16 ADC, ADCLOW;
	
	ADMUX=ADMUX|(channel_num & 0x0f);	/* Set input channel to read */
     c94:	e7 e2       	ldi	r30, 0x27	; 39
     c96:	f0 e0       	ldi	r31, 0x00	; 0
     c98:	90 81       	ld	r25, Z
     c9a:	8f 70       	andi	r24, 0x0F	; 15
     c9c:	89 2b       	or	r24, r25
     c9e:	80 83       	st	Z, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     ca0:	8a e1       	ldi	r24, 0x1A	; 26
     ca2:	8a 95       	dec	r24
     ca4:	f1 f7       	brne	.-4      	; 0xca2 <ADC_readChannel+0xe>
	#if INTERRUPT == DISABLE
	ADCSRA |= (1<<ADSC);		/* Start conversion */
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
	#endif
	_delay_us(10);
	ADCLOW = (int)ADCL;		/* Read lower byte*/
     ca6:	94 b1       	in	r25, 0x04	; 4
	ADC = (int)ADCH*256;		/* Read higher 2 bits and 
     ca8:	85 b1       	in	r24, 0x05	; 5
     caa:	38 2f       	mov	r19, r24
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	29 0f       	add	r18, r25
     cb0:	31 1d       	adc	r19, r1
					Multiply with weight */
	ADC += ADCLOW;				
	
	return ADC; /* Read the digital value from the data register */
}
     cb2:	82 2f       	mov	r24, r18
     cb4:	93 2f       	mov	r25, r19
     cb6:	08 95       	ret

00000cb8 <ADC_autoTrigger_Enable>:
/**
 * Enables automatic triggering for ADC conversions.
 */
void ADC_autoTrigger_Enable(void)
{
	SET_BIT(ADCSRA, ADATE);
     cb8:	e6 e2       	ldi	r30, 0x26	; 38
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	80 62       	ori	r24, 0x20	; 32
     cc0:	80 83       	st	Z, r24
	SFIOR |= (ADC_TRIGGER_SRC << 5);
     cc2:	e0 e5       	ldi	r30, 0x50	; 80
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	80 68       	ori	r24, 0x80	; 128
     cca:	80 83       	st	Z, r24
}
     ccc:	08 95       	ret

00000cce <ADC_interrupt_ENABLE>:
/**
 * Enables INTERRUPT for ADC conversions.
 */
void ADC_interrupt_ENABLE(void)
{
	SET_BIT(ADCSRA, ADIE);
     cce:	e6 e2       	ldi	r30, 0x26	; 38
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	80 81       	ld	r24, Z
     cd4:	88 60       	ori	r24, 0x08	; 8
     cd6:	80 83       	st	Z, r24
}
     cd8:	08 95       	ret

00000cda <ADC_setCallBack>:

void ADC_setCallBack(void (*ptr2fun) (void))
{
	callBackFunction = ptr2fun;
     cda:	90 93 71 00 	sts	0x0071, r25
     cde:	80 93 70 00 	sts	0x0070, r24
}
     ce2:	08 95       	ret

00000ce4 <__vector_16>:
    SET_BIT(ADCSRA, ADIF);
}

void __vector_16(void)  __attribute__((signal));
void __vector_16(void)
{
     ce4:	1f 92       	push	r1
     ce6:	0f 92       	push	r0
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	0f 92       	push	r0
     cec:	11 24       	eor	r1, r1
     cee:	2f 93       	push	r18
     cf0:	3f 93       	push	r19
     cf2:	4f 93       	push	r20
     cf4:	5f 93       	push	r21
     cf6:	6f 93       	push	r22
     cf8:	7f 93       	push	r23
     cfa:	8f 93       	push	r24
     cfc:	9f 93       	push	r25
     cfe:	af 93       	push	r26
     d00:	bf 93       	push	r27
     d02:	ef 93       	push	r30
     d04:	ff 93       	push	r31
	callBackFunction();
     d06:	e0 91 70 00 	lds	r30, 0x0070
     d0a:	f0 91 71 00 	lds	r31, 0x0071
     d0e:	09 95       	icall
    
     d10:	ff 91       	pop	r31
     d12:	ef 91       	pop	r30
     d14:	bf 91       	pop	r27
     d16:	af 91       	pop	r26
     d18:	9f 91       	pop	r25
     d1a:	8f 91       	pop	r24
     d1c:	7f 91       	pop	r23
     d1e:	6f 91       	pop	r22
     d20:	5f 91       	pop	r21
     d22:	4f 91       	pop	r20
     d24:	3f 91       	pop	r19
     d26:	2f 91       	pop	r18
     d28:	0f 90       	pop	r0
     d2a:	0f be       	out	0x3f, r0	; 63
     d2c:	0f 90       	pop	r0
     d2e:	1f 90       	pop	r1
     d30:	18 95       	reti

00000d32 <__subsf3>:
     d32:	50 58       	subi	r21, 0x80	; 128

00000d34 <__addsf3>:
     d34:	bb 27       	eor	r27, r27
     d36:	aa 27       	eor	r26, r26
     d38:	0e d0       	rcall	.+28     	; 0xd56 <__addsf3x>
     d3a:	e5 c0       	rjmp	.+458    	; 0xf06 <__fp_round>
     d3c:	d6 d0       	rcall	.+428    	; 0xeea <__fp_pscA>
     d3e:	30 f0       	brcs	.+12     	; 0xd4c <__addsf3+0x18>
     d40:	db d0       	rcall	.+438    	; 0xef8 <__fp_pscB>
     d42:	20 f0       	brcs	.+8      	; 0xd4c <__addsf3+0x18>
     d44:	31 f4       	brne	.+12     	; 0xd52 <__addsf3+0x1e>
     d46:	9f 3f       	cpi	r25, 0xFF	; 255
     d48:	11 f4       	brne	.+4      	; 0xd4e <__addsf3+0x1a>
     d4a:	1e f4       	brtc	.+6      	; 0xd52 <__addsf3+0x1e>
     d4c:	cb c0       	rjmp	.+406    	; 0xee4 <__fp_nan>
     d4e:	0e f4       	brtc	.+2      	; 0xd52 <__addsf3+0x1e>
     d50:	e0 95       	com	r30
     d52:	e7 fb       	bst	r30, 7
     d54:	c1 c0       	rjmp	.+386    	; 0xed8 <__fp_inf>

00000d56 <__addsf3x>:
     d56:	e9 2f       	mov	r30, r25
     d58:	e7 d0       	rcall	.+462    	; 0xf28 <__fp_split3>
     d5a:	80 f3       	brcs	.-32     	; 0xd3c <__addsf3+0x8>
     d5c:	ba 17       	cp	r27, r26
     d5e:	62 07       	cpc	r22, r18
     d60:	73 07       	cpc	r23, r19
     d62:	84 07       	cpc	r24, r20
     d64:	95 07       	cpc	r25, r21
     d66:	18 f0       	brcs	.+6      	; 0xd6e <__addsf3x+0x18>
     d68:	71 f4       	brne	.+28     	; 0xd86 <__addsf3x+0x30>
     d6a:	9e f5       	brtc	.+102    	; 0xdd2 <__addsf3x+0x7c>
     d6c:	ff c0       	rjmp	.+510    	; 0xf6c <__fp_zero>
     d6e:	0e f4       	brtc	.+2      	; 0xd72 <__addsf3x+0x1c>
     d70:	e0 95       	com	r30
     d72:	0b 2e       	mov	r0, r27
     d74:	ba 2f       	mov	r27, r26
     d76:	a0 2d       	mov	r26, r0
     d78:	0b 01       	movw	r0, r22
     d7a:	b9 01       	movw	r22, r18
     d7c:	90 01       	movw	r18, r0
     d7e:	0c 01       	movw	r0, r24
     d80:	ca 01       	movw	r24, r20
     d82:	a0 01       	movw	r20, r0
     d84:	11 24       	eor	r1, r1
     d86:	ff 27       	eor	r31, r31
     d88:	59 1b       	sub	r21, r25
     d8a:	99 f0       	breq	.+38     	; 0xdb2 <__addsf3x+0x5c>
     d8c:	59 3f       	cpi	r21, 0xF9	; 249
     d8e:	50 f4       	brcc	.+20     	; 0xda4 <__addsf3x+0x4e>
     d90:	50 3e       	cpi	r21, 0xE0	; 224
     d92:	68 f1       	brcs	.+90     	; 0xdee <__addsf3x+0x98>
     d94:	1a 16       	cp	r1, r26
     d96:	f0 40       	sbci	r31, 0x00	; 0
     d98:	a2 2f       	mov	r26, r18
     d9a:	23 2f       	mov	r18, r19
     d9c:	34 2f       	mov	r19, r20
     d9e:	44 27       	eor	r20, r20
     da0:	58 5f       	subi	r21, 0xF8	; 248
     da2:	f3 cf       	rjmp	.-26     	; 0xd8a <__addsf3x+0x34>
     da4:	46 95       	lsr	r20
     da6:	37 95       	ror	r19
     da8:	27 95       	ror	r18
     daa:	a7 95       	ror	r26
     dac:	f0 40       	sbci	r31, 0x00	; 0
     dae:	53 95       	inc	r21
     db0:	c9 f7       	brne	.-14     	; 0xda4 <__addsf3x+0x4e>
     db2:	7e f4       	brtc	.+30     	; 0xdd2 <__addsf3x+0x7c>
     db4:	1f 16       	cp	r1, r31
     db6:	ba 0b       	sbc	r27, r26
     db8:	62 0b       	sbc	r22, r18
     dba:	73 0b       	sbc	r23, r19
     dbc:	84 0b       	sbc	r24, r20
     dbe:	ba f0       	brmi	.+46     	; 0xdee <__addsf3x+0x98>
     dc0:	91 50       	subi	r25, 0x01	; 1
     dc2:	a1 f0       	breq	.+40     	; 0xdec <__addsf3x+0x96>
     dc4:	ff 0f       	add	r31, r31
     dc6:	bb 1f       	adc	r27, r27
     dc8:	66 1f       	adc	r22, r22
     dca:	77 1f       	adc	r23, r23
     dcc:	88 1f       	adc	r24, r24
     dce:	c2 f7       	brpl	.-16     	; 0xdc0 <__addsf3x+0x6a>
     dd0:	0e c0       	rjmp	.+28     	; 0xdee <__addsf3x+0x98>
     dd2:	ba 0f       	add	r27, r26
     dd4:	62 1f       	adc	r22, r18
     dd6:	73 1f       	adc	r23, r19
     dd8:	84 1f       	adc	r24, r20
     dda:	48 f4       	brcc	.+18     	; 0xdee <__addsf3x+0x98>
     ddc:	87 95       	ror	r24
     dde:	77 95       	ror	r23
     de0:	67 95       	ror	r22
     de2:	b7 95       	ror	r27
     de4:	f7 95       	ror	r31
     de6:	9e 3f       	cpi	r25, 0xFE	; 254
     de8:	08 f0       	brcs	.+2      	; 0xdec <__addsf3x+0x96>
     dea:	b3 cf       	rjmp	.-154    	; 0xd52 <__addsf3+0x1e>
     dec:	93 95       	inc	r25
     dee:	88 0f       	add	r24, r24
     df0:	08 f0       	brcs	.+2      	; 0xdf4 <__addsf3x+0x9e>
     df2:	99 27       	eor	r25, r25
     df4:	ee 0f       	add	r30, r30
     df6:	97 95       	ror	r25
     df8:	87 95       	ror	r24
     dfa:	08 95       	ret

00000dfc <__fixsfsi>:
     dfc:	04 d0       	rcall	.+8      	; 0xe06 <__fixunssfsi>
     dfe:	68 94       	set
     e00:	b1 11       	cpse	r27, r1
     e02:	b5 c0       	rjmp	.+362    	; 0xf6e <__fp_szero>
     e04:	08 95       	ret

00000e06 <__fixunssfsi>:
     e06:	98 d0       	rcall	.+304    	; 0xf38 <__fp_splitA>
     e08:	88 f0       	brcs	.+34     	; 0xe2c <__fixunssfsi+0x26>
     e0a:	9f 57       	subi	r25, 0x7F	; 127
     e0c:	90 f0       	brcs	.+36     	; 0xe32 <__fixunssfsi+0x2c>
     e0e:	b9 2f       	mov	r27, r25
     e10:	99 27       	eor	r25, r25
     e12:	b7 51       	subi	r27, 0x17	; 23
     e14:	a0 f0       	brcs	.+40     	; 0xe3e <__fixunssfsi+0x38>
     e16:	d1 f0       	breq	.+52     	; 0xe4c <__fixunssfsi+0x46>
     e18:	66 0f       	add	r22, r22
     e1a:	77 1f       	adc	r23, r23
     e1c:	88 1f       	adc	r24, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	1a f0       	brmi	.+6      	; 0xe28 <__fixunssfsi+0x22>
     e22:	ba 95       	dec	r27
     e24:	c9 f7       	brne	.-14     	; 0xe18 <__fixunssfsi+0x12>
     e26:	12 c0       	rjmp	.+36     	; 0xe4c <__fixunssfsi+0x46>
     e28:	b1 30       	cpi	r27, 0x01	; 1
     e2a:	81 f0       	breq	.+32     	; 0xe4c <__fixunssfsi+0x46>
     e2c:	9f d0       	rcall	.+318    	; 0xf6c <__fp_zero>
     e2e:	b1 e0       	ldi	r27, 0x01	; 1
     e30:	08 95       	ret
     e32:	9c c0       	rjmp	.+312    	; 0xf6c <__fp_zero>
     e34:	67 2f       	mov	r22, r23
     e36:	78 2f       	mov	r23, r24
     e38:	88 27       	eor	r24, r24
     e3a:	b8 5f       	subi	r27, 0xF8	; 248
     e3c:	39 f0       	breq	.+14     	; 0xe4c <__fixunssfsi+0x46>
     e3e:	b9 3f       	cpi	r27, 0xF9	; 249
     e40:	cc f3       	brlt	.-14     	; 0xe34 <__fixunssfsi+0x2e>
     e42:	86 95       	lsr	r24
     e44:	77 95       	ror	r23
     e46:	67 95       	ror	r22
     e48:	b3 95       	inc	r27
     e4a:	d9 f7       	brne	.-10     	; 0xe42 <__fixunssfsi+0x3c>
     e4c:	3e f4       	brtc	.+14     	; 0xe5c <__fixunssfsi+0x56>
     e4e:	90 95       	com	r25
     e50:	80 95       	com	r24
     e52:	70 95       	com	r23
     e54:	61 95       	neg	r22
     e56:	7f 4f       	sbci	r23, 0xFF	; 255
     e58:	8f 4f       	sbci	r24, 0xFF	; 255
     e5a:	9f 4f       	sbci	r25, 0xFF	; 255
     e5c:	08 95       	ret

00000e5e <__floatunsisf>:
     e5e:	e8 94       	clt
     e60:	09 c0       	rjmp	.+18     	; 0xe74 <__floatsisf+0x12>

00000e62 <__floatsisf>:
     e62:	97 fb       	bst	r25, 7
     e64:	3e f4       	brtc	.+14     	; 0xe74 <__floatsisf+0x12>
     e66:	90 95       	com	r25
     e68:	80 95       	com	r24
     e6a:	70 95       	com	r23
     e6c:	61 95       	neg	r22
     e6e:	7f 4f       	sbci	r23, 0xFF	; 255
     e70:	8f 4f       	sbci	r24, 0xFF	; 255
     e72:	9f 4f       	sbci	r25, 0xFF	; 255
     e74:	99 23       	and	r25, r25
     e76:	a9 f0       	breq	.+42     	; 0xea2 <__floatsisf+0x40>
     e78:	f9 2f       	mov	r31, r25
     e7a:	96 e9       	ldi	r25, 0x96	; 150
     e7c:	bb 27       	eor	r27, r27
     e7e:	93 95       	inc	r25
     e80:	f6 95       	lsr	r31
     e82:	87 95       	ror	r24
     e84:	77 95       	ror	r23
     e86:	67 95       	ror	r22
     e88:	b7 95       	ror	r27
     e8a:	f1 11       	cpse	r31, r1
     e8c:	f8 cf       	rjmp	.-16     	; 0xe7e <__floatsisf+0x1c>
     e8e:	fa f4       	brpl	.+62     	; 0xece <__floatsisf+0x6c>
     e90:	bb 0f       	add	r27, r27
     e92:	11 f4       	brne	.+4      	; 0xe98 <__floatsisf+0x36>
     e94:	60 ff       	sbrs	r22, 0
     e96:	1b c0       	rjmp	.+54     	; 0xece <__floatsisf+0x6c>
     e98:	6f 5f       	subi	r22, 0xFF	; 255
     e9a:	7f 4f       	sbci	r23, 0xFF	; 255
     e9c:	8f 4f       	sbci	r24, 0xFF	; 255
     e9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ea0:	16 c0       	rjmp	.+44     	; 0xece <__floatsisf+0x6c>
     ea2:	88 23       	and	r24, r24
     ea4:	11 f0       	breq	.+4      	; 0xeaa <__floatsisf+0x48>
     ea6:	96 e9       	ldi	r25, 0x96	; 150
     ea8:	11 c0       	rjmp	.+34     	; 0xecc <__floatsisf+0x6a>
     eaa:	77 23       	and	r23, r23
     eac:	21 f0       	breq	.+8      	; 0xeb6 <__floatsisf+0x54>
     eae:	9e e8       	ldi	r25, 0x8E	; 142
     eb0:	87 2f       	mov	r24, r23
     eb2:	76 2f       	mov	r23, r22
     eb4:	05 c0       	rjmp	.+10     	; 0xec0 <__floatsisf+0x5e>
     eb6:	66 23       	and	r22, r22
     eb8:	71 f0       	breq	.+28     	; 0xed6 <__floatsisf+0x74>
     eba:	96 e8       	ldi	r25, 0x86	; 134
     ebc:	86 2f       	mov	r24, r22
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	60 e0       	ldi	r22, 0x00	; 0
     ec2:	2a f0       	brmi	.+10     	; 0xece <__floatsisf+0x6c>
     ec4:	9a 95       	dec	r25
     ec6:	66 0f       	add	r22, r22
     ec8:	77 1f       	adc	r23, r23
     eca:	88 1f       	adc	r24, r24
     ecc:	da f7       	brpl	.-10     	; 0xec4 <__floatsisf+0x62>
     ece:	88 0f       	add	r24, r24
     ed0:	96 95       	lsr	r25
     ed2:	87 95       	ror	r24
     ed4:	97 f9       	bld	r25, 7
     ed6:	08 95       	ret

00000ed8 <__fp_inf>:
     ed8:	97 f9       	bld	r25, 7
     eda:	9f 67       	ori	r25, 0x7F	; 127
     edc:	80 e8       	ldi	r24, 0x80	; 128
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	60 e0       	ldi	r22, 0x00	; 0
     ee2:	08 95       	ret

00000ee4 <__fp_nan>:
     ee4:	9f ef       	ldi	r25, 0xFF	; 255
     ee6:	80 ec       	ldi	r24, 0xC0	; 192
     ee8:	08 95       	ret

00000eea <__fp_pscA>:
     eea:	00 24       	eor	r0, r0
     eec:	0a 94       	dec	r0
     eee:	16 16       	cp	r1, r22
     ef0:	17 06       	cpc	r1, r23
     ef2:	18 06       	cpc	r1, r24
     ef4:	09 06       	cpc	r0, r25
     ef6:	08 95       	ret

00000ef8 <__fp_pscB>:
     ef8:	00 24       	eor	r0, r0
     efa:	0a 94       	dec	r0
     efc:	12 16       	cp	r1, r18
     efe:	13 06       	cpc	r1, r19
     f00:	14 06       	cpc	r1, r20
     f02:	05 06       	cpc	r0, r21
     f04:	08 95       	ret

00000f06 <__fp_round>:
     f06:	09 2e       	mov	r0, r25
     f08:	03 94       	inc	r0
     f0a:	00 0c       	add	r0, r0
     f0c:	11 f4       	brne	.+4      	; 0xf12 <__fp_round+0xc>
     f0e:	88 23       	and	r24, r24
     f10:	52 f0       	brmi	.+20     	; 0xf26 <__fp_round+0x20>
     f12:	bb 0f       	add	r27, r27
     f14:	40 f4       	brcc	.+16     	; 0xf26 <__fp_round+0x20>
     f16:	bf 2b       	or	r27, r31
     f18:	11 f4       	brne	.+4      	; 0xf1e <__fp_round+0x18>
     f1a:	60 ff       	sbrs	r22, 0
     f1c:	04 c0       	rjmp	.+8      	; 0xf26 <__fp_round+0x20>
     f1e:	6f 5f       	subi	r22, 0xFF	; 255
     f20:	7f 4f       	sbci	r23, 0xFF	; 255
     f22:	8f 4f       	sbci	r24, 0xFF	; 255
     f24:	9f 4f       	sbci	r25, 0xFF	; 255
     f26:	08 95       	ret

00000f28 <__fp_split3>:
     f28:	57 fd       	sbrc	r21, 7
     f2a:	90 58       	subi	r25, 0x80	; 128
     f2c:	44 0f       	add	r20, r20
     f2e:	55 1f       	adc	r21, r21
     f30:	59 f0       	breq	.+22     	; 0xf48 <__fp_splitA+0x10>
     f32:	5f 3f       	cpi	r21, 0xFF	; 255
     f34:	71 f0       	breq	.+28     	; 0xf52 <__fp_splitA+0x1a>
     f36:	47 95       	ror	r20

00000f38 <__fp_splitA>:
     f38:	88 0f       	add	r24, r24
     f3a:	97 fb       	bst	r25, 7
     f3c:	99 1f       	adc	r25, r25
     f3e:	61 f0       	breq	.+24     	; 0xf58 <__fp_splitA+0x20>
     f40:	9f 3f       	cpi	r25, 0xFF	; 255
     f42:	79 f0       	breq	.+30     	; 0xf62 <__fp_splitA+0x2a>
     f44:	87 95       	ror	r24
     f46:	08 95       	ret
     f48:	12 16       	cp	r1, r18
     f4a:	13 06       	cpc	r1, r19
     f4c:	14 06       	cpc	r1, r20
     f4e:	55 1f       	adc	r21, r21
     f50:	f2 cf       	rjmp	.-28     	; 0xf36 <__fp_split3+0xe>
     f52:	46 95       	lsr	r20
     f54:	f1 df       	rcall	.-30     	; 0xf38 <__fp_splitA>
     f56:	08 c0       	rjmp	.+16     	; 0xf68 <__fp_splitA+0x30>
     f58:	16 16       	cp	r1, r22
     f5a:	17 06       	cpc	r1, r23
     f5c:	18 06       	cpc	r1, r24
     f5e:	99 1f       	adc	r25, r25
     f60:	f1 cf       	rjmp	.-30     	; 0xf44 <__fp_splitA+0xc>
     f62:	86 95       	lsr	r24
     f64:	71 05       	cpc	r23, r1
     f66:	61 05       	cpc	r22, r1
     f68:	08 94       	sec
     f6a:	08 95       	ret

00000f6c <__fp_zero>:
     f6c:	e8 94       	clt

00000f6e <__fp_szero>:
     f6e:	bb 27       	eor	r27, r27
     f70:	66 27       	eor	r22, r22
     f72:	77 27       	eor	r23, r23
     f74:	cb 01       	movw	r24, r22
     f76:	97 f9       	bld	r25, 7
     f78:	08 95       	ret

00000f7a <__mulsf3>:
     f7a:	0b d0       	rcall	.+22     	; 0xf92 <__mulsf3x>
     f7c:	c4 cf       	rjmp	.-120    	; 0xf06 <__fp_round>
     f7e:	b5 df       	rcall	.-150    	; 0xeea <__fp_pscA>
     f80:	28 f0       	brcs	.+10     	; 0xf8c <__mulsf3+0x12>
     f82:	ba df       	rcall	.-140    	; 0xef8 <__fp_pscB>
     f84:	18 f0       	brcs	.+6      	; 0xf8c <__mulsf3+0x12>
     f86:	95 23       	and	r25, r21
     f88:	09 f0       	breq	.+2      	; 0xf8c <__mulsf3+0x12>
     f8a:	a6 cf       	rjmp	.-180    	; 0xed8 <__fp_inf>
     f8c:	ab cf       	rjmp	.-170    	; 0xee4 <__fp_nan>
     f8e:	11 24       	eor	r1, r1
     f90:	ee cf       	rjmp	.-36     	; 0xf6e <__fp_szero>

00000f92 <__mulsf3x>:
     f92:	ca df       	rcall	.-108    	; 0xf28 <__fp_split3>
     f94:	a0 f3       	brcs	.-24     	; 0xf7e <__mulsf3+0x4>

00000f96 <__mulsf3_pse>:
     f96:	95 9f       	mul	r25, r21
     f98:	d1 f3       	breq	.-12     	; 0xf8e <__mulsf3+0x14>
     f9a:	95 0f       	add	r25, r21
     f9c:	50 e0       	ldi	r21, 0x00	; 0
     f9e:	55 1f       	adc	r21, r21
     fa0:	62 9f       	mul	r22, r18
     fa2:	f0 01       	movw	r30, r0
     fa4:	72 9f       	mul	r23, r18
     fa6:	bb 27       	eor	r27, r27
     fa8:	f0 0d       	add	r31, r0
     faa:	b1 1d       	adc	r27, r1
     fac:	63 9f       	mul	r22, r19
     fae:	aa 27       	eor	r26, r26
     fb0:	f0 0d       	add	r31, r0
     fb2:	b1 1d       	adc	r27, r1
     fb4:	aa 1f       	adc	r26, r26
     fb6:	64 9f       	mul	r22, r20
     fb8:	66 27       	eor	r22, r22
     fba:	b0 0d       	add	r27, r0
     fbc:	a1 1d       	adc	r26, r1
     fbe:	66 1f       	adc	r22, r22
     fc0:	82 9f       	mul	r24, r18
     fc2:	22 27       	eor	r18, r18
     fc4:	b0 0d       	add	r27, r0
     fc6:	a1 1d       	adc	r26, r1
     fc8:	62 1f       	adc	r22, r18
     fca:	73 9f       	mul	r23, r19
     fcc:	b0 0d       	add	r27, r0
     fce:	a1 1d       	adc	r26, r1
     fd0:	62 1f       	adc	r22, r18
     fd2:	83 9f       	mul	r24, r19
     fd4:	a0 0d       	add	r26, r0
     fd6:	61 1d       	adc	r22, r1
     fd8:	22 1f       	adc	r18, r18
     fda:	74 9f       	mul	r23, r20
     fdc:	33 27       	eor	r19, r19
     fde:	a0 0d       	add	r26, r0
     fe0:	61 1d       	adc	r22, r1
     fe2:	23 1f       	adc	r18, r19
     fe4:	84 9f       	mul	r24, r20
     fe6:	60 0d       	add	r22, r0
     fe8:	21 1d       	adc	r18, r1
     fea:	82 2f       	mov	r24, r18
     fec:	76 2f       	mov	r23, r22
     fee:	6a 2f       	mov	r22, r26
     ff0:	11 24       	eor	r1, r1
     ff2:	9f 57       	subi	r25, 0x7F	; 127
     ff4:	50 40       	sbci	r21, 0x00	; 0
     ff6:	8a f0       	brmi	.+34     	; 0x101a <__mulsf3_pse+0x84>
     ff8:	e1 f0       	breq	.+56     	; 0x1032 <__mulsf3_pse+0x9c>
     ffa:	88 23       	and	r24, r24
     ffc:	4a f0       	brmi	.+18     	; 0x1010 <__mulsf3_pse+0x7a>
     ffe:	ee 0f       	add	r30, r30
    1000:	ff 1f       	adc	r31, r31
    1002:	bb 1f       	adc	r27, r27
    1004:	66 1f       	adc	r22, r22
    1006:	77 1f       	adc	r23, r23
    1008:	88 1f       	adc	r24, r24
    100a:	91 50       	subi	r25, 0x01	; 1
    100c:	50 40       	sbci	r21, 0x00	; 0
    100e:	a9 f7       	brne	.-22     	; 0xffa <__mulsf3_pse+0x64>
    1010:	9e 3f       	cpi	r25, 0xFE	; 254
    1012:	51 05       	cpc	r21, r1
    1014:	70 f0       	brcs	.+28     	; 0x1032 <__mulsf3_pse+0x9c>
    1016:	60 cf       	rjmp	.-320    	; 0xed8 <__fp_inf>
    1018:	aa cf       	rjmp	.-172    	; 0xf6e <__fp_szero>
    101a:	5f 3f       	cpi	r21, 0xFF	; 255
    101c:	ec f3       	brlt	.-6      	; 0x1018 <__mulsf3_pse+0x82>
    101e:	98 3e       	cpi	r25, 0xE8	; 232
    1020:	dc f3       	brlt	.-10     	; 0x1018 <__mulsf3_pse+0x82>
    1022:	86 95       	lsr	r24
    1024:	77 95       	ror	r23
    1026:	67 95       	ror	r22
    1028:	b7 95       	ror	r27
    102a:	f7 95       	ror	r31
    102c:	e7 95       	ror	r30
    102e:	9f 5f       	subi	r25, 0xFF	; 255
    1030:	c1 f7       	brne	.-16     	; 0x1022 <__mulsf3_pse+0x8c>
    1032:	fe 2b       	or	r31, r30
    1034:	88 0f       	add	r24, r24
    1036:	91 1d       	adc	r25, r1
    1038:	96 95       	lsr	r25
    103a:	87 95       	ror	r24
    103c:	97 f9       	bld	r25, 7
    103e:	08 95       	ret

00001040 <__mulsi3>:
    1040:	62 9f       	mul	r22, r18
    1042:	d0 01       	movw	r26, r0
    1044:	73 9f       	mul	r23, r19
    1046:	f0 01       	movw	r30, r0
    1048:	82 9f       	mul	r24, r18
    104a:	e0 0d       	add	r30, r0
    104c:	f1 1d       	adc	r31, r1
    104e:	64 9f       	mul	r22, r20
    1050:	e0 0d       	add	r30, r0
    1052:	f1 1d       	adc	r31, r1
    1054:	92 9f       	mul	r25, r18
    1056:	f0 0d       	add	r31, r0
    1058:	83 9f       	mul	r24, r19
    105a:	f0 0d       	add	r31, r0
    105c:	74 9f       	mul	r23, r20
    105e:	f0 0d       	add	r31, r0
    1060:	65 9f       	mul	r22, r21
    1062:	f0 0d       	add	r31, r0
    1064:	99 27       	eor	r25, r25
    1066:	72 9f       	mul	r23, r18
    1068:	b0 0d       	add	r27, r0
    106a:	e1 1d       	adc	r30, r1
    106c:	f9 1f       	adc	r31, r25
    106e:	63 9f       	mul	r22, r19
    1070:	b0 0d       	add	r27, r0
    1072:	e1 1d       	adc	r30, r1
    1074:	f9 1f       	adc	r31, r25
    1076:	bd 01       	movw	r22, r26
    1078:	cf 01       	movw	r24, r30
    107a:	11 24       	eor	r1, r1
    107c:	08 95       	ret

0000107e <__udivmodsi4>:
    107e:	a1 e2       	ldi	r26, 0x21	; 33
    1080:	1a 2e       	mov	r1, r26
    1082:	aa 1b       	sub	r26, r26
    1084:	bb 1b       	sub	r27, r27
    1086:	fd 01       	movw	r30, r26
    1088:	0d c0       	rjmp	.+26     	; 0x10a4 <__udivmodsi4_ep>

0000108a <__udivmodsi4_loop>:
    108a:	aa 1f       	adc	r26, r26
    108c:	bb 1f       	adc	r27, r27
    108e:	ee 1f       	adc	r30, r30
    1090:	ff 1f       	adc	r31, r31
    1092:	a2 17       	cp	r26, r18
    1094:	b3 07       	cpc	r27, r19
    1096:	e4 07       	cpc	r30, r20
    1098:	f5 07       	cpc	r31, r21
    109a:	20 f0       	brcs	.+8      	; 0x10a4 <__udivmodsi4_ep>
    109c:	a2 1b       	sub	r26, r18
    109e:	b3 0b       	sbc	r27, r19
    10a0:	e4 0b       	sbc	r30, r20
    10a2:	f5 0b       	sbc	r31, r21

000010a4 <__udivmodsi4_ep>:
    10a4:	66 1f       	adc	r22, r22
    10a6:	77 1f       	adc	r23, r23
    10a8:	88 1f       	adc	r24, r24
    10aa:	99 1f       	adc	r25, r25
    10ac:	1a 94       	dec	r1
    10ae:	69 f7       	brne	.-38     	; 0x108a <__udivmodsi4_loop>
    10b0:	60 95       	com	r22
    10b2:	70 95       	com	r23
    10b4:	80 95       	com	r24
    10b6:	90 95       	com	r25
    10b8:	9b 01       	movw	r18, r22
    10ba:	ac 01       	movw	r20, r24
    10bc:	bd 01       	movw	r22, r26
    10be:	cf 01       	movw	r24, r30
    10c0:	08 95       	ret

000010c2 <_exit>:
    10c2:	f8 94       	cli

000010c4 <__stop_program>:
    10c4:	ff cf       	rjmp	.-2      	; 0x10c4 <__stop_program>
